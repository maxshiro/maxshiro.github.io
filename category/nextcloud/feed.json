{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro • All posts by \"nextcloud\" category",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/nextcloud/234118/",
            "url": "http://maxshiroi.top/nextcloud/234118/",
            "title": "用家宽搭建Nextcloud-aio的一种方法",
            "date_published": "2023-09-02T15:41:18.000Z",
            "content_html": "<h1 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h1>\n<p>出于学习目的对这玩意进行了一通研究，我的评价是如果你没有 80 和 443 端口那我建议你直接跳过或者重开，没必要那这玩意来搞生产。除非你出于学习目的。<br>\n如果你的公网地址可以访问 80 和 443 端口的话你可以参考这个教程：<a href=\"https://blog.laoda.de/archives/docker-compose-install-nextcloud-aio/\">【好玩儿的 Docker 项目】Nextcloud All-in-One 全新搭建分享，拒绝繁琐配置，开箱即用！维护简单！</a></p>\n<h2 id=\"项目特点\"><a class=\"anchor\" href=\"#项目特点\">#</a> 项目特点</h2>\n<ul>\n<li>支持 docker 一键部署，用容器部署容器</li>\n<li>更新简单</li>\n<li>高性能后端</li>\n<li>支持全局搜索</li>\n<li>支持 Nextcloud Talk</li>\n<li>支持 ClamAV（Nextcloud 的杀毒软件后端）</li>\n<li>支持全套办公套件</li>\n<li>支持备份（基于 BorgBackup）</li>\n<li>省心省力</li>\n<li>文档及其丰富（各种地方的搭建教程均有）（个屁）</li>\n<li>……</li>\n</ul>\n<h2 id=\"项目展示\"><a class=\"anchor\" href=\"#项目展示\">#</a> 项目展示</h2>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-12-40.png\" fancybox=\"true\"></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-13-03.png\" fancybox=\"true\"></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-13-19.png\" fancybox=\"true\"></div></div>\n<h2 id=\"本文引用链接\"><a class=\"anchor\" href=\"#本文引用链接\">#</a> 本文引用链接</h2>\n<p><a href=\"https://github.com/nextcloud/all-in-one\">GitHub 官方仓库</a><br>\n<a href=\"https://hub.docker.com/r/nextcloud/all-in-one\">官方 Docker 镜像</a><br>\n<a href=\"https://github.com/nextcloud/all-in-one/blob/main/reverse-proxy.md\">官方反代相关文档地址</a>&nbsp;（支持各种反代）<br>\n<a href=\"https://blog.laoda.de/archives/docker-compose-install-nextcloud-aio/\">【好玩儿的 Docker 项目】Nextcloud All-in-One 全新搭建分享，拒绝繁琐配置，开箱即用！维护简单！</a><br>\n<a href=\"https://www.bilibili.com/read/cv8513826/\">cloudflare 证书的导出（crt+key 格式）</a><br>\n<a href=\"https://www.bilibili.com/video/av777707955/\">利用 cloudflare 免端口号访问家庭自建服务，可添加十条记录，去掉端口号！</a><br>\n<a href=\"https://blog.misaka.rest/2023/01/16/cf-any-port/\"># 通过 Origin Rules 使 CloudFlare CDN 回源以使用任意的端口</a></p>\n<h1 id=\"搭建前置\"><a class=\"anchor\" href=\"#搭建前置\">#</a> 搭建前置</h1>\n<ul>\n<li>拥有一台性能足够的 linux 服务器</li>\n<li>已经在路由器上配置好了 ddns 解析</li>\n<li>创建好 cloudflare 账号</li>\n<li>安装好 docker</li>\n<li>安装好 NPM（Nginx Proxy Manager）（这里我教一下这个吧）</li>\n</ul>\n<h1 id=\"安装npm\"><a class=\"anchor\" href=\"#安装npm\">#</a> 安装 NPM</h1>\n<h2 id=\"什么是npm\"><a class=\"anchor\" href=\"#什么是npm\">#</a> 什么是 NPM？</h2>\n<p>NPM（Nginx proxy manager）是一个很简单的反向代理工具。</p>\n<p>官网：<a href=\"https://nginxproxymanager.com/\">https://nginxproxymanager.com/</a></p>\n<p>门槛极低，操作简单，不需要你掌握很复杂的 Nginx 配置知识，只需要几步就能很轻松完成反向代理的设置和 SSL 证书的部署。</p>\n<h2 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>创建目录：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 切换到root用户</span><br><span class=\"line\">sudo -i</span><br><span class=\"line\">// 创建安装目录并进入</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/data/docker/npm &amp;&amp; <span class=\"built_in\">cd</span> ~/data/docker/npm</span><br><span class=\"line\">// 编辑配置文件</span><br><span class=\"line\">nvim docker-compose.yml</span><br></pre></td></tr></tbody></table></figure>\n<p>添加下面的内容：</p>\n<figure class=\"highlight yml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">app:</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">'jc21/nginx-proxy-manager:latest'</span></span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">'8880:80'</span> <span class=\"comment\"># 这三行根据自己情况改，前面对应你本机地址，8881即为后面要访问的地址。</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">'8881:81'</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">'8443:443'</span></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./data:/data</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">./letsencrypt:/etc/letsencrypt</span></span><br></pre></td></tr></tbody></table></figure>\n<p>安装：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker compose up -d</span><br></pre></td></tr></tbody></table></figure>\n<p>放行端口：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port=8880/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=8881/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=8443/tcp --permanent</span><br></pre></td></tr></tbody></table></figure>\n<p>之后就可以进入 <code>http://ip:8881</code>  来访问了<br>\n默认的登录名和密码：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Email:    admin@example.com  </span><br><span class=\"line\">Password: changeme</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"更新\"><a class=\"anchor\" href=\"#更新\">#</a> 更新</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/data/docker/npm  </span><br><span class=\"line\">  </span><br><span class=\"line\">docker-compose down   </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">cp</span> -r ~/data/docker/npm ~/data/docker/npm.archive  <span class=\"comment\"># 万事先备份，以防万一  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">docker-compose pull  </span><br><span class=\"line\">  </span><br><span class=\"line\">docker-compose up -d    <span class=\"comment\"># 请不要使用 docker-compose stop 来停止容器，因为这么做需要额外的时间等待容器停止；docker-compose up -d 直接升级容器时会自动停止并立刻重建新的容器，完全没有必要浪费那些时间。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">docker image prune  <span class=\"comment\"># prune 命令用来删除不再使用的 docker 对象。删除所有未被 tag 标记和未被容器使用的镜像</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"卸载\"><a class=\"anchor\" href=\"#卸载\">#</a> 卸载</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~/data/docker/npm </span><br><span class=\"line\">  </span><br><span class=\"line\">docker-compose down   </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf ~/data/docker/npm  <span class=\"comment\"># 完全删除映射到本地的数据</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装本体\"><a class=\"anchor\" href=\"#安装本体\">#</a> 安装本体</h1>\n<p>创建目录：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 切换到root用户</span><br><span class=\"line\">sudo -i</span><br><span class=\"line\">// 创建安装目录并进入</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p ~/data/docker/naio &amp;&amp; <span class=\"built_in\">cd</span> ~/data/docker/naio</span><br><span class=\"line\">// 编辑配置文件</span><br><span class=\"line\">nvim docker-compose.yml</span><br></pre></td></tr></tbody></table></figure>\n<p>添加如下内容：</p>\n<figure class=\"highlight yml\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">\"3.8\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span></span><br><span class=\"line\"> <span class=\"attr\">nextcloud_aio_mastercontainer:</span></span><br><span class=\"line\">   <span class=\"attr\">name:</span> <span class=\"string\">nextcloud_aio_mastercontainer</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"> <span class=\"attr\">nextcloud:</span></span><br><span class=\"line\">   <span class=\"attr\">image:</span> <span class=\"string\">nextcloud/all-in-one:latest</span></span><br><span class=\"line\">   <span class=\"attr\">restart:</span> <span class=\"string\">unless-stopped</span></span><br><span class=\"line\">   <span class=\"attr\">container_name:</span> <span class=\"string\">nextcloud-aio-mastercontainer</span></span><br><span class=\"line\">   <span class=\"attr\">volumes:</span></span><br><span class=\"line\">     <span class=\"bullet\">-</span> <span class=\"string\">nextcloud_aio_mastercontainer:/mnt/docker-aio-config</span></span><br><span class=\"line\">     <span class=\"bullet\">-</span> <span class=\"string\">/var/run/docker.sock:/var/run/docker.sock:ro</span></span><br><span class=\"line\">   <span class=\"attr\">ports:</span></span><br><span class=\"line\">     <span class=\"bullet\">-</span> <span class=\"number\">8890</span><span class=\"string\">:8080</span> <span class=\"comment\"># change the port on the left side if it's already in use on your host system.</span></span><br><span class=\"line\">   <span class=\"attr\">environment:</span></span><br><span class=\"line\">     <span class=\"bullet\">-</span> <span class=\"string\">APACHE_PORT=11000</span>  <span class=\"comment\"># change this port number if 11000 is already in use on your host system.</span></span><br><span class=\"line\">     <span class=\"bullet\">-</span> <span class=\"string\">APACHE_DISABLE_REWRITE_IP=1</span></span><br><span class=\"line\">     <span class=\"bullet\">-</span> <span class=\"string\">APACHE_IP_BINDING=0.0.0.0</span></span><br><span class=\"line\"><span class=\"comment\">#     - NEXTCLOUD_TRUSTED_DOMAINS=pan.gugu.ovh 31.22.109.18 # Your domain name + proxy host IP</span></span><br><span class=\"line\"><span class=\"comment\">#     - TRUSTED_PROXIES=31.22.109.18 # proxy host IP</span></span><br></pre></td></tr></tbody></table></figure>\n<p>安装：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker compose up -d</span><br></pre></td></tr></tbody></table></figure>\n<p>放行端口：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --add-port=8890/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=11000/tcp --permanent <span class=\"comment\"># 请在你的路由器内创建端口映射把这个端口映射到公网。</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置反代\"><a class=\"anchor\" href=\"#配置反代\">#</a> 配置反代</h1>\n<p>打开 cloudflare，选择你添加好的域名，创建一条 CNAME 记录，指向你已经在路由器内配置好的 ddns 域名（这里使用的是 <code>nas.xxx.net</code>  你要改成你自己的）：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-13-52.png\" fancybox=\"true\"></div></div>\n<p>点击保存。</p>\n<p>打开你的 NPM 控制面板，选择上面的 <code>SSL Certificates</code> ，点击 <code>Add SSL Certificate</code> - <code>Custom</code>  我们添加一个证书（原文这里用的是让老子加密，这里咱们可以试试 cloudflare 的免费证书，足足有<strong> 15</strong> 年！！！）：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-14-36.png\" fancybox=\"true\"></div></div>\n<p>现在打开你的 cloudflare 控制面板，右边选择 SSL/TLS，我们先把这个改成灵活：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-15-04.png\" fancybox=\"true\"></div></div>\n<p>然后到侧边栏选择源服务器，创建一个泛域名证书，只用更改证书有效期，改成 15 年<br>\n新建一个 xxx.key 文件，把 key 里面的写进去。<br>\n新建一个 xxx.pem 文件，把另一串粘进去。<br>\n然后返回到你的 NPM 里面添加证书：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-18-26.png\" fancybox=\"true\"></div></div>\n<p>然后选择 Hosts-Proxy Hosts：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-18-45.png\" fancybox=\"true\"></div></div>\n<p>Details 选项卡里：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-19-02.png\" fancybox=\"true\"></div></div>\n<p>SSL 选项卡里选择你创建的证书，剩下全部勾上：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-19-17.png\" fancybox=\"true\"></div></div>\n<p>Advanced 选项卡里填入下面的内容：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">client_body_buffer_size 512k;  </span><br><span class=\"line\">proxy_read_timeout 86400s;  </span><br><span class=\"line\">client_max_body_size 0;</span><br></pre></td></tr></tbody></table></figure>\n<p>然后保存</p>\n<p><strong>IP 填写：</strong><br>\n如果 Nginx Proxy Manager 和 aio-nextcloud 在同一台服务器上，可以在终端输入：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ip addr show docker0</span><br><span class=\"line\">root@nasdb:~/data/docker_data/naio<span class=\"comment\"># ip addr show docker0</span></span><br><span class=\"line\">3: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default</span><br><span class=\"line\">    <span class=\"built_in\">link</span>/ether 02:42:4a:<span class=\"built_in\">dd</span>:c1:14 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 172.17.0.1/16 brd 172.17.255.255 scope global docker0</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 fe80::42:4aff:fedd:c114/64 scope <span class=\"built_in\">link</span></span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></tbody></table></figure>\n<p>否则直接填&nbsp; <code>aio-nextcloud</code> &nbsp;所在的服务器 IP 就行。</p>\n<h1 id=\"配置回源\"><a class=\"anchor\" href=\"#配置回源\">#</a> 配置回源</h1>\n<p>返回到 cloudflare，侧边栏里选择规则 - Origin Rules：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-19-42.png\" fancybox=\"true\"></div></div>\n<p>添加一条规则：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/nextcloudaioinstalltry/2023-09-03-01-19-56.png\" fancybox=\"true\"></div></div>\n<p>如果你看不到图：<br>\n当传入请求匹配时...</p>\n<table>\n<thead>\n<tr>\n<th>字段</th>\n<th>运算符</th>\n<th colspan=\"2\">值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>主机名</td>\n<td>等于</td>\n<td><a href=\"http://nas.xxx.net\">nas.xxx.net</a></td>\n<td>and</td>\n</tr>\n<tr>\n<td colspan=\"4\">and</td>\n</tr>\n<tr>\n<td>SSL/HTTPS</td>\n<td>等于</td>\n<td colspan=\"2\">勾选</td>\n</tr>\n</tbody>\n</table>\n<p>目标端口：重写到 <code>11000</code> <br>\n 然后点部署</p>\n<h1 id=\"配置aio\"><a class=\"anchor\" href=\"#配置aio\">#</a> 配置 aio</h1>\n<p>打开 <code>https://yourip:8890</code>  然后记下密码点击下面的按钮。剩下的就和普通的没啥差别了。</p>\n<h1 id=\"卸载-2\"><a class=\"anchor\" href=\"#卸载-2\">#</a> 卸载</h1>\n<p>和卸载 npm 一样。</p>\n",
            "tags": [
                "nextcloud",
                "linux",
                "docker",
                "NPM"
            ]
        }
    ]
}
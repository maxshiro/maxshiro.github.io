{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro • All posts by \"hexo\" category",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/Hexo/222543/",
            "url": "http://maxshiroi.top/Hexo/222543/",
            "title": "部署完hexo后还应该准备哪些工作",
            "date_published": "2022-08-28T14:25:43.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>上一回我们讲到了如何部署 hexo 到 github 上，并简单的向 repo 里推送了你的博客。这一回我们简单的来完善你的博客。</p>\n<h1 id=\"0主题配置\"><a class=\"anchor\" href=\"#0主题配置\">#</a> 0. 主题配置</h1>\n<ul>\n<li>old:<br>\n<a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/\" title=\"Click Me\">shoka</a><br>\n<a href=\"https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md\" title=\"matery\">matery</a></li>\n<li>new<br>\n<a href=\"https://xaoxuu.com/wiki/stellar/#start\" title=\"stellar\">stellar</a><br>\n<a href=\"https://volantis.js.org/v6/getting-started/\" title=\"volantis\">volantis</a></li>\n</ul>\n<h1 id=\"1备份hexo源文件到-backup-分支\"><a class=\"anchor\" href=\"#1备份hexo源文件到-backup-分支\">#</a> 1. 备份 Hexo 源文件到 Backup 分支</h1>\n<p>由于种种原因我们总会更改自己的工作环境或者一顿操作猛如虎，将自己博客的源文件一通收拾，然后就没有然后了。<br>\n所以建议大家创建好博客记得把源文件也一同备份到 Github 上以防万一。</p>\n<h2 id=\"创建backup分支\"><a class=\"anchor\" href=\"#创建backup分支\">#</a> 创建 backup 分支</h2>\n<ol>\n<li>打开你 GitHub repo 的页面，点击左上角的分支选项。</li>\n<li>点击 View all branches，然后点击右上角的 New branch。</li>\n<li>Branch name：backup，Branch source：master</li>\n<li>create branch。</li>\n</ol>\n<h2 id=\"将backup分支切换为默认分支\"><a class=\"anchor\" href=\"#将backup分支切换为默认分支\">#</a> 将 backup 分支切换为默认分支</h2>\n<blockquote>\n<p>我也不知道为什么要这么做，但是不这么做最后一步就没法 push 了 😦</p>\n</blockquote>\n<h2 id=\"将repo-clone到本地\"><a class=\"anchor\" href=\"#将repo-clone到本地\">#</a> 将 repo clone 到本地</h2>\n<ol>\n<li>直接在博客根目录下执行这个命令：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> <span class=\"string\">'你的repo'</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>将克隆过来 repo 里的 <code>.git</code>  文件夹拷贝到博客根目录。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r ./<span class=\"string\">'你的repo'</span> ./</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>依次执行以下指令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">'Backup'</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"报错\"><a class=\"anchor\" href=\"#报错\">#</a> 报错</h2>\n<p>可能会提示如下错误</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access <span class=\"string\">'https://github.com/xxx/xxx.github.io.git/'</span>: GnuTLS recv error (-110): The TLS connection was non-properly terminated.</span><br></pre></td></tr></tbody></table></figure>\n<p>执行下面的指令即可正常推送</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> git.proxy</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"还原\"><a class=\"anchor\" href=\"#还原\">#</a> 还原</h2>\n<ol>\n<li>克隆 backup 分支到本地</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> -b backup https://github.com/maxshiro/maxshiro.github.io.git</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>安装依赖</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装一些提升体验的插件\"><a class=\"anchor\" href=\"#安装一些提升体验的插件\">#</a> 安装一些提升体验的插件</h1>\n<p>hexo 原版的内容已经足够使用，但是某些功能非常的需要但是 hexo 却不自带，那么就可以通过安装插件的形式来添加这些功能。</p>\n<h2 id=\"置顶文章\"><a class=\"anchor\" href=\"#置顶文章\">#</a> 置顶文章</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 先卸载原本的index生成插件</span></span><br><span class=\"line\">npm uninstall hexo-generator-index</span><br><span class=\"line\"><span class=\"comment\"># 然后安装修改过后的</span></span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></tbody></table></figure>\n<p>使用时只需要在 <code>front-matter</code>  中加入 <code>top: true</code>  即可让文章置顶。</p>\n<h2 id=\"隐藏文章\"><a class=\"anchor\" href=\"#隐藏文章\">#</a> 隐藏文章</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用如下命令安装插件</span></span><br><span class=\"line\">npm install hexo-hide-posts --save</span><br></pre></td></tr></tbody></table></figure>\n<p>安装好后在 <code>_config.yaml</code>  文件中添加下面的内容：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># hexo-hide-posts</span><br><span class=\"line\">hide_posts:</span><br><span class=\"line\">  # 可以改成其他你喜欢的名字</span><br><span class=\"line\">  filter: hide</span><br><span class=\"line\">  # 指定你想要传递隐藏文章的位置，比如让所有隐藏文章在存档页面可见</span><br><span class=\"line\">  # 常见的位置有：index, tag, category, archive, sitemap, feed, etc.</span><br><span class=\"line\">  # 留空则默认全部隐藏</span><br><span class=\"line\">  public_generators: []</span><br><span class=\"line\">  # 为隐藏的文章添加 noindex meta 标签，阻止搜索引擎收录</span><br><span class=\"line\">  noindex: true</span><br></pre></td></tr></tbody></table></figure>\n<p>最后同上，你只需要在 <code>front-matter</code>  中加上 <code>hide: true</code>  即可。</p>\n<h2 id=\"博客加密\"><a class=\"anchor\" href=\"#博客加密\">#</a> 博客加密</h2>\n<ul>\n<li>有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。</li>\n<li>这在 wordpress，emlog 或其他博客系统中都很容易实现，然而 hexo 除外。😦</li>\n<li>为了解决这个问题，我们需要安装 “hexo-blog-encrypt” 扩展。</li>\n</ul>\n<h3 id=\"安装指令\"><a class=\"anchor\" href=\"#安装指令\">#</a> 安装指令</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-blog-encrypt</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"快速使用\"><a class=\"anchor\" href=\"#快速使用\">#</a> 快速使用</h3>\n<p>将 password 标签添加到您的 Front-matter 里，就像这样：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: xxx</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2022-08-26 17:34:59</span><br><span class=\"line\">password: 233</span><br><span class=\"line\">tags: xxx</span><br><span class=\"line\">---</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"特性\"><a class=\"anchor\" href=\"#特性\">#</a> 特性</h3>\n<ul>\n<li>一旦你输入了正确的密码，它就会被存储在本地浏览器的 localStorage 中。按个按钮，密码将会被清空。若博客中有脚本，它将被正确地执行。</li>\n<li>支持按标签加密。</li>\n<li>所有的核心功能都是由原生的 API 所提供的。在 Node.js 中，我们使用 Crypto。在浏览器中，我们使用 Web Crypto API。</li>\n<li>PBKDF2，SHA256 被用作复制密钥，AES256-CBC 被用作加解密，我们还使用 HMAC 来验证密文的来源，并确保其纠正。</li>\n<li>广泛地使用 Promise 来进行异步操作，从而确保线程不被杜塞。</li>\n<li>过时的浏览器将无法正常显示，因此，请升级您的浏览器。</li>\n</ul>\n<h2 id=\"other\"><a class=\"anchor\" href=\"#other\">#</a> other</h2>\n<p>如果你不想每次新建文章都要自己写的话，那么就修改 <code>./scaffolds/post.md</code>  文件。</p>\n<h1 id=\"博客加速\"><a class=\"anchor\" href=\"#博客加速\">#</a> 博客加速</h1>\n<blockquote>\n<p>于 2022 年 11 月测试 vercel.app 已经被墙了，但是还可以通过自备域名的方式。</p>\n</blockquote>\n<p>使用 Vercel 加速 Hexo 博客访问速度。<br>\n如果你想让您的博客更快的更新，那么可以采取这种方法的同时，也可以加速你的博客。<br>\n该方法适用于已经使用我的方法将博客源文件备份到了 github 的。</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<ol>\n<li><a href=\"http://xn--vercel-oi2ls3t.com\">打开 vercel.com</a>, 这个域名没有被墙。登陆的时候选择 github 方式。<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/hexoplugin/20221116141135.png\" fancybox=\"true\"></div></div>  \n</li>\n<li>创建新项目，选择 git 仓库中已存在的项目，然后选 Deploy。</li>\n<li>创建完成后就可以通过  <code>你项目名称.vercel.app</code>  访问了。但是目前 vercel.app 已经被墙了，所以还需要在设置里添加自己的域名。</li>\n<li>切换到自己的域名控制台里添加一条 cname 记录，指向这个地址  <code>cname-china.vercel-dns.com</code>  。</li>\n<li>将 Git Branch 里的内容改为存放自己博客备份的分支，比如我的就是 backup 分支。同时也可以将分配给你的二级域名也改成这个分支。<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/hexoplugin/20221116144428.png\" fancybox=\"true\"></div></div>  \n</li>\n<li>切换到 Git 项目，将 Production Branch 也更改为 backup 分支。<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/hexoplugin/20221116144502.png\" fancybox=\"true\"></div></div>  \n</li>\n<li>此时如果你的 backup 分支如果有更新，那么 vercel 会自动克隆你的源文件然后编译更新 cache。</li>\n<li>使用这种方法独立于 github page。只有当你 hexo d 之后源博客才会更新。</li>\n</ol>\n<h2 id=\"保护博客源码内容\"><a class=\"anchor\" href=\"#保护博客源码内容\">#</a> 保护博客源码内容</h2>\n<p>如果你认为这种方式要更好一些，当然你也可以选择直接关掉 github page 并将仓库设置为 private，这样别人就无法轻易获取您博客的源代码了。</p>\n<h1 id=\"写作流程\"><a class=\"anchor\" href=\"#写作流程\">#</a> 写作流程</h1>\n<h2 id=\"第一次使用\"><a class=\"anchor\" href=\"#第一次使用\">#</a> 第一次使用</h2>\n<ol>\n<li>安装 nodejs，git，hexo，npm</li>\n<li>git clone 仓库链接</li>\n<li>cd 到目录然后 cnpm install</li>\n<li>撰写博客</li>\n</ol>\n<h2 id=\"通过github-page\"><a class=\"anchor\" href=\"#通过github-page\">#</a> 通过 github page</h2>\n<ol>\n<li>撰写博客</li>\n<li>保存到 github。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">'Backup'</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>生成并提交网页。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 生成静态网页</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">// 生成目录文件</span><br><span class=\"line\">hexo algolia</span><br><span class=\"line\">// 打开本地服务器预览</span><br><span class=\"line\">hexo s</span><br><span class=\"line\">// 提交到github page</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>等待网页更新。</li>\n</ol>\n<h2 id=\"通过vercelcom\"><a class=\"anchor\" href=\"#通过vercelcom\">#</a> <a href=\"http://xn--vercel-2u3sdu.com\">通过 vercel.com</a></h2>\n<ol>\n<li>撰写博客</li>\n<li>保存到 github。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">'Backup'</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>等待网页更新。</li>\n</ol>\n<h1 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h1>\n<figure class=\"highlight java\"><figcaption><span>java</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span> (System.in);</span><br><span class=\"line\"><span class=\"comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></span><br><span class=\"line\">System.out.println (in.nextLine ());</span><br><span class=\"line\">System.out.println (<span class=\"string\">\"Hello\"</span> + <span class=\"string\">\"world.\"</span>);</span><br></pre></td></tr></tbody></table></figure>\n<p>原本用于日语汉字假名注音，但别的注音也可以。<br>\n为了兼容性，采用 markdown-it-ruby 的基本格式： <ruby>文字<rp> (</rp><rt>注音</rt><rp>)</rp></ruby> ，并且为了兼容表格，将分隔符由 | 换成了 ^ 。<br>\n注音分隔基于 furigana-markdown-it 显示说明看这里</p>\n<p><ruby>取<rp> (</rp><rt>と</rt><rp>)</rp> り<rt></rt>返<rp> (</rp><rt>かえ</rt><rp>)</rp> す<rt></rt></ruby>\t取とり返かえす<br>\n<ruby>可愛<rp> (</rp><rt>かわい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可愛かわいい犬いぬ<br>\n<ruby>可<rp> (</rp><rt>か</rt><rp>)</rp> 愛<rp> (</rp><rt>わい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可か愛わいい犬いぬ<br>\n<ruby>アクセラレータ<rp> (</rp><rt>accelerator</rt><rp>)</rp></ruby>\tアクセラレータ accelerator<br>\n<ruby>accelerator<rp>(</rp><rt>アクセラレータ</rt><rp>)</rp></ruby>\taccelerator アクセラレータ<br>\n<ruby>食<rp> (</rp><rt>た</rt><rp>)</rp> べる<rt></rt></ruby>\t食たべる<br>\n<ruby>食べる<rp> (</rp><rt>たべる</rt><rp>)</rp></ruby>\t食べるたべる<br>\n<ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby>\tあ●い●う●え●お●<br>\n<ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby>\tあ❤い❤う❤え❤お❤<br>\n<ruby>常用账号<rp> (</rp><rt>contact</rt><rp>)</rp></ruby>\t常用账号 contact</p>\n",
            "tags": [
                "hexo",
                "plugin",
                "backup"
            ]
        }
    ]
}
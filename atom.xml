<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://maxshiroi.top</id>
    <title>MAXshiro&#39;s Blog</title>
    <link href="http://maxshiroi.top" />
    <updated>2023-03-31T13:39:53.252Z</updated>
    <category term="nextcloud" />
    <category term="聊天室" />
    <category term="python" />
    <category term="ctf" />
    <category term="buuctf" />
    <category term="antsword" />
    <category term="linux" />
    <category term="centos" />
    <category term="web" />
    <category term="nginx" />
    <category term="mysql" />
    <category term="wsa" />
    <category term="vhd" />
    <category term="vhdx" />
    <category term="diskpart" />
    <category term="arch" />
    <category term="pacman" />
    <category term="win" />
    <category term="explorer.exe" />
    <category term="autorefresh" />
    <category term="network" />
    <category term="vmware" />
    <category term="kali" />
    <category term="dvwa" />
    <category term="fedora" />
    <category term="helloworld" />
    <category term="plugin" />
    <category term="hexo" />
    <category term="backup" />
    <category term="guide" />
    <category term="目录" />
    <category term="指令" />
    <category term="权限" />
    <category term="media center" />
    <category term="plex" />
    <category term="emby" />
    <category term="jellyfin" />
    <category term="视频" />
    <category term="音乐" />
    <category term="运维" />
    <category term="smb" />
    <category term="passwd" />
    <category term="switch" />
    <category term="animal crossing" />
    <category term="Project Diva" />
    <category term="Miku" />
    <category term="Mega39" />
    <category term="emulater" />
    <category term="yuzu" />
    <category term="ryujinx" />
    <category term="树莓派" />
    <category term="docker" />
    <category term="openwrt" />
    <category term="router" />
    <category term="pic" />
    <category term="img" />
    <category term="api" />
    <category term="random" />
    <category term="wallpaper" />
    <category term="短链" />
    <category term="测试" />
    <category term="Vocal" />
    <category term="AI" />
    <category term="歌声合成" />
    <category term="transmission" />
    <category term="torrent" />
    <category term="下载器" />
    <category term="nas" />
    <category term="bug" />
    <category term="win7" />
    <category term="capacity" />
    <category term="shrink" />
    <category term="Android" />
    <category term="Hyper-V" />
    <category term="WSA" />
    <category term="wsl2" />
    <category term="Hyper-v" />
    <category term="wsl" />
    <category term="权限不足" />
    <category term="vscode" />
    <entry>
        <id>http://maxshiroi.top/ug/213953/</id>
        <title>Hello World</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/213953/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo new &#34;My New Post&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo server&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo generate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;$ hexo deploy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="helloworld" />
        <updated>2023-03-31T13:39:53.252Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/100353/</id>
        <title>dvwa安装指引</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/100353/"/>
        <content type="html">&lt;h1 id=&#34;启动nginx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动nginx&#34;&gt;#&lt;/a&gt; 启动 nginx&lt;/h1&gt;
&lt;h2 id=&#34;service-nginx-startcd-varwwwhtmlvim-hellohtml&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#service-nginx-startcd-varwwwhtmlvim-hellohtml&#34;&gt;#&lt;/a&gt; service nginx start&lt;br&gt;
cd /var/www/html&lt;br&gt;
vim hello.html&lt;/h2&gt;
&lt;p&gt;Helloworld!&lt;br&gt;
// 访问虚拟机地址。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[root@fedora axro]# cd /usr/share/nginx/html/
[root@fedora html]# git clone https://github.com/digininja/DVWA.git
[root@fedora html]# cd DVWA/config
[root@fedora config]# cp config.inc.php.dist config.inc.php
[root@fedora config]# vi config.inc.php
mysql -u root -p
create database DVWA;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;mysql&amp;gt; create database dvwa;&lt;br&gt;
Query OK, 1 row affected (0.00 sec)&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; create user dvwa@localhost identified by ‘p@ssw0rd’;&lt;br&gt;
Query OK, 0 rows affected (0.01 sec)&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; grant all on dvwa.* to dvwa@localhost;&lt;br&gt;
Query OK, 0 rows affected (0.01 sec)&lt;/p&gt;
&lt;p&gt;mysql&amp;gt; flush privileges;&lt;br&gt;
Query OK, 0 rows affected (0.00 sec)&lt;/p&gt;
</content>
        <category term="linux" />
        <category term="mysql" />
        <category term="kali" />
        <category term="dvwa" />
        <category term="fedora" />
        <updated>2023-03-07T02:03:53.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/140206/</id>
        <title>Arch安装使用指导</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/140206/"/>
        <content type="html">&lt;h1 id=&#34;前期准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前期准备&#34;&gt;#&lt;/a&gt; 前期准备&lt;/h1&gt;
&lt;p&gt;在创建好虚拟机后，需要打开虚拟机设置，将  &lt;code&gt;firmware type&lt;/code&gt;  更改为  &lt;code&gt;efi&lt;/code&gt; ，以便后续操作。&lt;/p&gt;
&lt;h1 id=&#34;检查网络设置和-ssh-连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检查网络设置和-ssh-连接&#34;&gt;#&lt;/a&gt; 检查网络设置和 SSH 连接&lt;/h1&gt;
&lt;p&gt;以下是检查网络设置和 SSH 连接的操作步骤：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;# 检查系统启动方式
ls /sys/firmware/efi/efivars

# 检查网络是否通畅
ping baidu.com

# 更改密码并远程连接
passwd

# 查看 IP 地址
ip addr&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;使用ssh连接&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用ssh连接&#34;&gt;#&lt;/a&gt; 使用 ssh 连接&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;ssh -p 22 root@192.168.204.130&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;分区挂载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#分区挂载&#34;&gt;#&lt;/a&gt; 分区挂载&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;# 查看已存在的硬盘
lsblk
# 使用cfdisk创建分区
cfdisk /dev/nvme0n1
# 创建如下三个
Device           Start      End  Sectors  Size Type
/dev/nvme0n1p1    2048  1026047  1024000  500M EFI System
/dev/nvme0n1p2 1026048  9414655  8388608    4G Linux swap
/dev/nvme0n1p3 9414656 83884031 74469376 35.5G Linux filesystem
# 分别格式化
# 格式化EFI启动分区为fat32格式
mkfs.fat -F32 /dev/nvme0n1p1
# 格式化根目录为xfs文件系统
mkfs.xfs -f /dev/nvme0n1p3
# 格式化swap文件系统
mkswap /dev/nvme0n1p2
swapon /dev/nvme0n1p2
# 挂载
# 挂载根分区到mnt
mount /dev/nvme0n1p3 /mnt
# 新建EFI分区并挂载
mkdir -p /mnt/boot/EFI
mount /dev/nvme0n1p1 /mnt/boot/EFI&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;# 使用下面命令下载并安装系统
pacstrap -i /mnt base base-devel vim linux linux-firmware
# 生成 fstab 文件并检查
genfstab -U /mnt &amp;gt;&amp;gt; /mnt/etc/fstab
cat /mnt/etc/fstab
# 切换系统目录
arch-chroot /mnt
# 更改时区，设置UTC
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --systohc --utc
# 更改local并生成locale信息
vim /etc/locale.gen
# 找到合适的地区去掉前面的#
locale-gen
# 将语言信息写入locale.conf
echo LANG=en_GB.UTF-8 &amp;gt; /etc/locale.conf
# 配置网络
vim /etc/hostname
----
archlinux
# 直接写入自己的主机名
vim /etc/hosts
----
127.0.0.1   localhost
::1         localhost
127.0.1.1   archlinux.localdomain archlinux
# archlinux就是自己的主机名
# 安装相关包
pacman -S grub efibootmgr efivar networkmanager intel-ucode
# 配置grub
grub-install /dev/sda
grub-mkconfig -o /boot/grub/grub.cfg
# 激活并启用NetworkManager
systemctl enable NetworkManager
# 更改密码
passwd
# 卸载挂载，重启
exit
umount /mnt/boot/EFI
umount /mnt
reboot &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;安装后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装后&#34;&gt;#&lt;/a&gt; 安装后&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;# 配置网络，再次联网
# 输入nmtui 选择 “Activate a connection” 回车进入，选择你需要的网络，连接后back返回即可
# 安装 openssh
pacman -S openssh
systemctl enable sshd
systemctl start sshd
systemctl status sshd
# 查看ip
ip -brief address / addr
# 修改ssh配置允许root连接
vim /etc/ssh/sshd_config
----
# 将下列的语句值改为yes
PermitRootLogin yes
# 重启ssh
systemctl restart sshd
# 使用ssh连接
ssh -o StrictHostKeyChecking=no root@192.168.204.130
# 更新
pacman -Syu
useradd axro
vi /etc/passwd
---&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;优化终端&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#优化终端&#34;&gt;#&lt;/a&gt; 优化终端&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;# 安装zsh，高亮，补全
sudo pacman -S zsh
sudo pacman -S zsh-autosuggestions
sudo pacman -S zsh-syntax-highlighting
# 安装git
sudo pacman -S git
# 使用以下命令配置zsh
autoload -Uz zsh-newuser-install
zsh-newuser-install -f
# 查看是否生成.zshrc
ls -a
# 安装oh my zsh
sh -c &#34;$(curl -fsSL https:#raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&#34;
# 在.zshrc中加入以下插件
vim .zshrc
---
ZSH_THEME=&#34;dieter&#34;
alias vi=vim
alias ll=&#39;ls -l&#39;
source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh
:wq
# 刷新终端
source .zshrc
# 安装neofetch
sudo pacman -S neofetch
---
11:18:08 axro@axro-arch ~ neofetch
                   -`                    axro@axro-arch
                  .o+`                   --------------
                 `ooo/                   OS: Arch Linux x86_64
                `+oooo:                  Host: VMware20,1 None
               `+oooooo:                 Kernel: 6.2.2-arch1-1
               -+oooooo+:                Uptime: 20 mins
             `/:-:++oooo+:               Packages: 182 (pacman)
            `/++++/+++++++:              Shell: zsh 5.9
           `/++++++++++++++:             Resolution: 1280x800
          `/+++ooooooooooooo/`           Terminal: /dev/pts/0
         ./ooosssso++osssssso+`          CPU: 11th Gen Intel i7-11800H (1) @ 2.304GHz
        .oossssso-````/ossssss+`         GPU: 00:0f.0 VMware SVGA II Adapter
       -osssssso.      :ssssssso.        Memory: 209MiB / 3883MiB
      :osssssss/        osssso+++.
     /ossssssss/        +ssssooo/-
   `/ossssso+/:-        -:/+osssso+-
  `+sso+:-`                 `.-/+oso:
 `++:.                           `-/+/
 .`                                 `/

11:21:14 axro@axro-arch ~&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;安装桌面环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装桌面环境&#34;&gt;#&lt;/a&gt; 安装桌面环境&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;# 安装xorg-server，xorg-xinit
sudo pacman -S xorg-server xorg-xinit
# 安装显卡驱动
sudo pacman -S xf86-video-vesa # 这里使用的是vmware，请自行找适合自己机器的显卡驱动
# 安装plasma
sudo pacman -S pacman-meta konsole dolphin
sudo pacman -S kde-applications-meta sddm
# 启动kde plasma
sudo systemctl start sddm.service
# 安装字体，更改中文
sudo pacman -S noto-fonts-cjk wqy-microhei
# 安装火狐浏览器
sudo pacman -S firefox
# 使用如下命令打开和关闭网卡
ifconfig ens160 down/up&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;vmware安装vmwaretools-实现窗口分辨率自适应&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vmware安装vmwaretools-实现窗口分辨率自适应&#34;&gt;#&lt;/a&gt; vmware 安装 vmwaretools 实现窗口分辨率自适应。&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;# 安装
sudo pacman -Sy gtkmm gtkmm3 net-tools open-vm-tools xf86-video-vmware xf86-input-vmmouse
sudo systemctl enable vmtoolsd.service
sudo systemctl enable vmware-vmblock-fuse.service
sudo reboot&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;详细请参考&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#详细请参考&#34;&gt;#&lt;/a&gt; 详细请参考&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://wiki.archlinuxcn.org/wiki/VMware/%E5%AE%89%E8%A3%85_Arch_Linux_%E4%B8%BA%E8%99%9A%E6%8B%9F%E6%9C%BA&#34;&gt;wiki.archlinuxcn.org&lt;/a&gt;&lt;br&gt;
 这里不多赘述。&lt;/p&gt;
&lt;h2 id=&#34;安装中文输入法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装中文输入法&#34;&gt;#&lt;/a&gt; 安装中文输入法&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;// 安装fcitx5
sudo pacman -S fcitx5-im fcitx5-chinese-addons  fcitx5-rime fcitx5-configtool
// 编辑配置文件
vi /etc/environment
---
GTK_IM_MODULE=fcitx
QT_IM_MODULE=fcitx
XMODIFIERS=@im=fcitx
SDL_IM_MODULE=fcitx

// 重启，gnome和kde会自动配置
reboot&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装yay工具并安装linuxqq&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装yay工具并安装linuxqq&#34;&gt;#&lt;/a&gt; 安装 yay 工具并安装 linuxqq&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-zsh&#34; data-language=&#34;zsh&#34;&gt;&lt;code class=&#34;language-zsh&#34;&gt;git clone https://aur.archlinux.org/yay.git
cd yay
makepkg -si
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;编写rclocal&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编写rclocal&#34;&gt;#&lt;/a&gt; 编写 rc.local&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;vi /usr/lib/systemd/system/rc-local.service
---
#/usr/lib/systemd/system/rc-local.service
[Unit]
Description=&#34;写下描述&#34; 

[Service]
Type=forking
ExecStart=/etc/rc.local start #在这里你可以看到开机执行脚本的位置
TimeoutSec=0
StandardInput=tty
RemainAfterExit=yes
SysVStartPriority=99

[Install]
WantedBy=multi-user.target

vi /etc/rc.local
---
#/bin/bash
sudo pacman -Syu
exit 0

chmod 777 /etc/rc.local
systemctl enable rc.local.service&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content>
        <category term="linux" />
        <category term="arch" />
        <category term="pacman" />
        <updated>2023-02-24T06:02:06.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/174137/</id>
        <title>vmwarewin7shrink</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/174137/"/>
        <content type="html">&lt;p&gt;通常在我们创建虚拟机时往往并不清楚需要多少空间，等到后期才会发现分配了很多空间实际上用不到。这时候就要想办法缩小虚拟机所占用的空间了。&lt;br&gt;
根据我这次缩小空间的经历，我十分不推荐使用快照功能。因为这会让你虚拟机当前处在快照模式，与原来的文件关系不大（就是处理起来更麻烦了。）。&lt;br&gt;
如果你像我一样只是用 vmware 来存放如企鹅，钉钉，腾讯会议，微信这种垃圾的话，那么可以参照我的方法。&lt;/p&gt;
&lt;h1 id=&#34;缩小空间占用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#缩小空间占用&#34;&gt;#&lt;/a&gt; 缩小空间占用。&lt;/h1&gt;
&lt;h2 id=&#34;0首先查看磁盘类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0首先查看磁盘类型&#34;&gt;#&lt;/a&gt; 0. 首先查看磁盘类型&lt;/h2&gt;
&lt;p&gt;使用文本编辑器打开虚拟机根目录下的 xxx.vmdk 文件，查看 # Extent description 下面的内容第三块是否为 SPARSE 。不是则需要进行转换。如下图：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s001.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s002.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s003.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s004.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s005.vmdk&#34;
RW 4521984 SPARSE &#34;Windows 7 x64-cl1-s006.vmdk&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果你在创建虚拟机选择的是动态分配磁盘文件并拆分成多个的话这里就是 SPARSE。&lt;/p&gt;
&lt;h2 id=&#34;1确保没有快照&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1确保没有快照&#34;&gt;#&lt;/a&gt; 1. 确保没有快照&lt;/h2&gt;
&lt;p&gt;确保虚拟机内没有快照。虚拟机目录下只有一个 xxx.vmdk 以及从属的 s00x.vmdk。如果有快照没法处理，则可以执行克隆操作到其他盘进行处理。&lt;/p&gt;
&lt;h2 id=&#34;2尽可能缩小虚拟机内部所占用的空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2尽可能缩小虚拟机内部所占用的空间&#34;&gt;#&lt;/a&gt; 2. 尽可能缩小虚拟机内部所占用的空间&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;参考&lt;a href=&#34;https://blog.csdn.net/CoutCodes/article/details/104975783&#34;&gt;【Win10 C 盘压缩卷问题解答】：无法将卷压缩到超出任何不可移动的文件所在点&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;进入虚拟机，进行以下处理：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;关闭休眠功能 *&lt;/li&gt;
&lt;li&gt;关闭虚拟内存并删除虚拟内存文件 *&lt;/li&gt;
&lt;li&gt;虚拟机内进行空间整理，磁盘清理&lt;/li&gt;
&lt;li&gt;处理其他文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意后面带星号的处理完成所有步骤后要重新打开 (建议)，不然可能会影响性能。&lt;/p&gt;
&lt;p&gt;此时你需要确定你缩小后的 c 盘空间大小，这也决定着后面动态磁盘缩小的操作。我确定缩小后的空间为 22GiB。&lt;/p&gt;
&lt;h2 id=&#34;3-重启到pe系统使用diskgenius缩小c盘空间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-重启到pe系统使用diskgenius缩小c盘空间&#34;&gt;#&lt;/a&gt; 3. 重启到 pe 系统使用 Diskgenius 缩小 c 盘空间。&lt;/h2&gt;
&lt;h3 id=&#34;使用微pe制作iso文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用微pe制作iso文件&#34;&gt;#&lt;/a&gt; 使用微 pe 制作 iso 文件&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;打开&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;添加硬件cddvd设备使用创建的iso文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#添加硬件cddvd设备使用创建的iso文件&#34;&gt;#&lt;/a&gt; 添加硬件 CD/DVD 设备，使用创建的 iso 文件。&lt;/h3&gt;
&lt;h3 id=&#34;vmware设置光驱启动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#vmware设置光驱启动&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;https://blog.csdn.net/syf442/article/details/5067832&#34;&gt;VMWare 设置光驱启动&lt;/a&gt;&lt;/h3&gt;
&lt;h2 id=&#34;4-减小vmware虚拟机虚拟磁盘大小&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#4-减小vmware虚拟机虚拟磁盘大小&#34;&gt;#&lt;/a&gt; 4. 减小 VMware 虚拟机虚拟磁盘大小&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;此处内容来自：&lt;a href=&#34;https://blog.csdn.net/HayPinF/article/details/108252631&#34;&gt;减小 VMware 虚拟机虚拟磁盘大小&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在 VMware 里虚拟机的所有编号了的  &lt;code&gt;.*s001.*.vmdk&lt;/code&gt;  片段虚拟磁盘文件是虚拟化的虚拟机最大空间（Maximum Size)，就比如我的 Win7 虚拟机的 Maximum Size 是 40GiB（1GiB=1024MiB，1GB=1000MB），虚拟机生成了  &lt;code&gt;.*s001~s011.vmdk&lt;/code&gt;  共 11 个虚拟机磁盘文件 vmdk，该虚拟机的 &#34;Windows 7 x64-cl1.vmdk&#34; 中详实记录了这 11 个 vmdk 文件（从而进行各分片虚拟磁盘文件的按名索引）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;# Extent description
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s001.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s002.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s003.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s004.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s005.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s006.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s007.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s008.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s009.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s010.vmdk&#34;
RW 655360 SPARSE &#34;Windows 7 x64-cl1-s011.vmdk&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;vmdk 文件的 &#34;8323072&#34; 数字表示簇，2 簇 = 1KiB，则这 11 个 vmdk 文件对应了 ((10×8323072)/2/1024/1024)+(655360/2/1024/1024)=10×3.96875GiB+0.3125Gib=40GiB，刚好。&lt;/p&gt;
&lt;p&gt;我们所要做的就是通过改变这里的文件个数从而达到缩小 vmdk 磁盘大小的目的。&lt;br&gt;
已知 40GiB 对应的簇大小为 10×8323072+655360=83886080。即一个 G 的簇大小为 2097152 (/2=1048576)。&lt;br&gt;
我们确定一下自己压缩后的大小。就比如我要压缩到 22G，得出簇的总大小为 2097152×22=46137344，这个数可以拆为五个 8323072 加上一个 46137344-(8323072×5)=4521984。即 (8323072×5)+4521984=46137344。&lt;br&gt;
因此上面的文件就可以改成下面这样：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;# Extent description
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s001.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s002.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s003.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s004.vmdk&#34;
RW 8323072 SPARSE &#34;Windows 7 x64-cl1-s005.vmdk&#34;
RW 4521984 SPARSE &#34;Windows 7 x64-cl1-s006.vmdk&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;记得备份 &#34;Windows 7 x64-cl1.vmdk&#34;，处理完成保存即可。&lt;/p&gt;
&lt;h2 id=&#34;5重新启动虚拟机&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5重新启动虚拟机&#34;&gt;#&lt;/a&gt; 5. 重新启动虚拟机&lt;/h2&gt;
&lt;p&gt;此时你会发现虚拟机的磁盘大小已经变成 22G 了。教程结束。&lt;/p&gt;
</content>
        <category term="vmware" />
        <category term="win7" />
        <category term="capacity" />
        <category term="shrink" />
        <updated>2023-01-14T09:41:37.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/082913/</id>
        <title>WSL2迁移以及空间回收。</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/082913/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;../img/wsl2move/20221119083153.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;p&gt;如果你按照正常方式在设置里移动 wsl 的话就会发现报错，本篇文章向您介绍如何正确迁移以及回收空间。&lt;/p&gt;
&lt;h1 id=&#34;移动&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#移动&#34;&gt;#&lt;/a&gt; 移动&lt;/h1&gt;
&lt;p&gt;在 Windows 的 PowerShell 中输入:&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl --help&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到关于这个命令的使用帮助说明：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;用法: wsl.exe [参数] [选项...] [命令行]
 
用于运行 Linux 二进制文件的参数:
 
    如果未提供命令行，wsl.exe 将启动默认的 shell。
    --exec, -e &amp;lt;命令行&amp;gt;
        执行指定的命令而不使用默认的 Linux shell。
    --
        按原样传递剩余的命令行。
选项:
    --distribution, -d &amp;lt;分发版&amp;gt;
        运行指定的分发。
    --user, -u &amp;lt;用户名&amp;gt;
        以指定用户身份运行。
用于管理适用于 Linux 的 Windows 子系统的参数:
 
    --export &amp;lt;分发版&amp;gt; &amp;lt;文件名&amp;gt;
        将分发导出到 tar 文件。
        对于标准输出，文件名可以是 -。
    --import &amp;lt;分发版&amp;gt; &amp;lt;安装位置&amp;gt; &amp;lt;文件名&amp;gt; [选项]
        将指定的 tar 文件作为新分发进行导入。
        对于标准输入，文件名可以是 -。
        选项:
            --version &amp;lt;版本&amp;gt;
                指定用于新分发的版本。
    --list, -l [选项]
        列出分发。
        选项:
            --all
                列出所有分发，包括当前正在
                安装或卸载的分发。
            --running
                只列出当前正在运行的分发。
            --quiet, -q
                只显示分发名称。
            --verbose, -v
                显示有关所有分发的详细信息。
    --set-default, -s &amp;lt;分发版&amp;gt;
        将分发设置为默认值。
    --set-default-version &amp;lt;版本&amp;gt;
        更改新分发的默认安装版本。
    --set-version &amp;lt;分发版&amp;gt; &amp;lt;版本&amp;gt;
        更改指定分发的版本。
    --shutdown
        立即终止所有正在运行的分发和 WSL 2 轻型工具虚拟机。
    --terminate, -t &amp;lt;分发版&amp;gt;
        终止指定的分发。
    --unregister &amp;lt;分发版&amp;gt;
        注销分发。
    --help
        显示用法信息。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里我们使用到 export 、unregister 和 import 几个选项就可以实现迁移。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;终止正在运行的分发或虚拟机：&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl --shutdown&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;查看已安装的 wsl 名称：&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl.exe --list --all&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;适用于 Linux 的 Windows 子系统分发:
Debian (默认)
kali-linux
Ubuntu&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;对需要迁移的分发或虚拟机导出（我要迁移 kali-linux）：&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl --export kali-linux D:\kali&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;卸载分发版或虚拟机（如果是要重装系统或换机器安装，这一步可以省略，但是要将上一步导出的文件保存好）&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl --unregister kali-linux&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;导入新的分发版或虚拟机：&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl --import kali-linux D:\wsl\kali D:\kali&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;压缩&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#压缩&#34;&gt;#&lt;/a&gt; 压缩&lt;/h1&gt;
&lt;p&gt;等待导入后你会发现移动的其实是 vhdx 文件，那么就可以对这个文件进行回收空间。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;以管理员身份运行 cmd，输入 diskpart 命令按回车。&lt;/li&gt;
&lt;li&gt;使用以下命令选择你的 userdata.vhdx&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;select vdisk file = &#34;D:\wsl\ext4.vhdx&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果提示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;DiskPart successfully selected the virtual disk file.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就说明成功了。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;输入  &lt;code&gt;compact vdisk&lt;/code&gt;  来压缩。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;bug&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bug&#34;&gt;#&lt;/a&gt; bug&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;ERROR: Wsl/Service/CreateInstance/ERROR_FILE_NOT_FOUND&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开命令行，在命令行中输入&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;wsl.exe --list --all
wsl.exe --unregister xxx&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;摘抄&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#摘抄&#34;&gt;#&lt;/a&gt; 摘抄&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/zhys2007/article/details/110958577&#34;&gt;WSL2 迁移方法&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://blog.csdn.net/y17854117512/article/details/119214442?spm=1001.2101.3001.6661.1&amp;amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;amp;utm_relevant_index=1&#34;&gt;解决 Win10 子系统的 Ubuntu 被删除后，重新安装出现找不到系统路径&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="linux" />
        <category term="wsl2" />
        <category term="Hyper-v" />
        <updated>2022-11-19T00:29:13.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/204350/</id>
        <title>通过diskpart工具压缩userdata.vhdx来解决磁盘占用过多问题</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/204350/"/>
        <content type="html">&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;p&gt;当你安装了 WSA 后随着你的使用，你会发现占用的空间越来越大。即使你把不需要的安卓程序卸载了之后，却依然满满的霸占着你的 C 盘。你只能眼睁睁地看他慢慢变大却无能为力。当然本篇文章的目的就是帮你解决这个问题。&lt;/p&gt;
&lt;h1 id=&#34;移动wsa到其他盘符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#移动wsa到其他盘符&#34;&gt;#&lt;/a&gt; 移动 WSA 到其他盘符&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;你利用你聪明的头脑打开了百度并使用灵巧的双手在搜索框里输入 WSA 磁盘空间过大。很快你便看到了一种解决方式.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;打开设置 - 程序 - 已安装的程序，找到 WSA&lt;br&gt;
&lt;img src=&#34;/img/Windowssubsystemforandroidcompression/20221118205416.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;点击后面三个点选择移动。&lt;br&gt;
稍等一会就会帮你把 WSA 移动到对应的盘符了。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;使用diskpart工具压缩&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用diskpart工具压缩&#34;&gt;#&lt;/a&gt; 使用 diskpart 工具压缩&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;以管理员身份运行 cmd，输入 diskpart 命令按回车。&lt;/li&gt;
&lt;li&gt;使用以下命令选择你的 userdata.vhdx&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;select vdisk file = &#34;D:\WpSystem\S-1-5-21-3846526574-1502088438-2560978845-1001\AppData\Local\Packages\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\LocalCache\userdata.vhdx&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果提示&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;DiskPart successfully selected the virtual disk file.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就说明成功了。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;输入  &lt;code&gt;compact vdisk&lt;/code&gt;  来压缩。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;DiskPart has encountered an error: The specified file is encrypted and the user does not have the ability to decrypt it.
See the System Event Log for more information.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这个就说明你没有权限压缩这个文件。&lt;br&gt;
为了解决这个问题我百度了一晚上，最后发现，只要你把这个文件复制走，就会提示&lt;br&gt;
&lt;img src=&#34;/img/Windowssubsystemforandroidcompression/20221118210314.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
这里选择是，然后就会复制走。&lt;br&gt;
这个时候你再看你复制的文件就会发现上面的小黄锁已经不见了。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;重新选择 userdata.vhdx 文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;select vdisk file = &#34;D:\userdata.vhdx&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;重新输入命令  &lt;code&gt;compact vdisk&lt;/code&gt;  进行压缩，如果出现下面的提示那就说明压缩成功了。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-cmd&#34; data-language=&#34;cmd&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;cmd&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-cmd&#34;&gt;DISKPART&amp;gt; compact vdisk

  100 percent completed

DiskPart successfully compacted the virtual disk file.

DISKPART&amp;gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此时再看你复制出来的文件，就会发现大小缩小了很多，压缩成功了。&lt;br&gt;
接着只需要剪切拷贝出来的文件，替换掉原来的文件就可以了。&lt;/p&gt;
&lt;h1 id=&#34;成果&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#成果&#34;&gt;#&lt;/a&gt; 成果&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;压缩前：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/Windowssubsystemforandroidcompression/20221118204548.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;压缩后：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/Windowssubsystemforandroidcompression/20221118210939.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="wsa" />
        <category term="vhd" />
        <category term="vhdx" />
        <category term="diskpart" />
        <updated>2022-11-18T12:43:50.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/152935/</id>
        <title>随机图片API</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/152935/"/>
        <content type="html">&lt;h1 id=&#34;随机图片api&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#随机图片api&#34;&gt;#&lt;/a&gt; 随机图片 API&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;都有时效性，失效不管 233&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;二次元&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二次元&#34;&gt;#&lt;/a&gt; 二次元&lt;/h2&gt;
&lt;p class=&#34;gallery&#34; data-height=&#34;480&#34;&gt;&lt;img src=&#34;https://iw233.cn/API/Random.php&#34; alt=&#34;&#34; title=&#34;https://iw233.cn/API/Random.php&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://api.paugram.com/wallpaper&#34; alt=&#34;&#34; title=&#34;https://api.paugram.com/wallpaper&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://www.dmoe.cc/random.php&#34; alt=&#34;&#34; title=&#34;https://www.dmoe.cc/random.php&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://api.mtyqx.cn/api/random.php&#34; alt=&#34;&#34; title=&#34;https://api.mtyqx.cn/api/random.php&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://api.yimian.xyz/img?type=moe&#34; alt=&#34;&#34; title=&#34;https://api.yimian.xyz/img?type=moe&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://api.ixiaowai.cn/api/api.php&#34; alt=&#34;&#34; title=&#34;https://api.ixiaowai.cn/api/api.php&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;三次元&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三次元&#34;&gt;#&lt;/a&gt; 三次元&lt;/h2&gt;
&lt;p class=&#34;gallery&#34; data-height=&#34;480&#34;&gt;&lt;img src=&#34;https://api.btstu.cn/sjbz/api.php&#34; alt=&#34;&#34; title=&#34;https://api.btstu.cn/sjbz/api.php&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://api.paugram.com/bing/&#34; alt=&#34;必应每日壁纸&#34; title=&#34;https://api.paugram.com/bing/&#34;&gt;&lt;br&gt;
&lt;img src=&#34;https://api.ixiaowai.cn/gqapi/gqapi.php&#34; alt=&#34;&#34; title=&#34;https://api.ixiaowai.cn/gqapi/gqapi.php&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;menhara酱&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#menhara酱&#34;&gt;#&lt;/a&gt; menhara 酱&lt;/h2&gt;
&lt;p class=&#34;gallery&#34; data-height=&#34;480&#34;&gt;&lt;img src=&#34;https://api.ixiaowai.cn/mcapi/mcapi.php&#34; alt=&#34;&#34; title=&#34;https://api.ixiaowai.cn/mcapi/mcapi.php&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;eeedog&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#eeedog&#34;&gt;#&lt;/a&gt; eeedog&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;这个有点复杂建议自己去看看&lt;br&gt;
&lt;a href=&#34;https://www.eee.dog/tech/rand-pic-api.html&#34;&gt; eeedog&lt;/a&gt; 我随意放一个随机图床&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p class=&#34;gallery&#34; data-height=&#34;480&#34;&gt;&lt;img src=&#34;https://api.yimian.xyz/img?type=imgbed&#34; alt=&#34;&#34; title=&#34;https://api.yimian.xyz/img?type=imgbed&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;本地&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本地&#34;&gt;#&lt;/a&gt; 本地&lt;/h1&gt;
&lt;p class=&#34;gallery&#34;&gt;&lt;img src=&#34;/img/pictureshow/20221116154554.png&#34; alt=&#34;&#34; title=&#34;女人&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154625.png&#34; alt=&#34;&#34; title=&#34;女人&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154652.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154713.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154721.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154729.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154737.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154746.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154914.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154922.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154928.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154935.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154945.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116154953.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116155005.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116155015.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116155023.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/pictureshow/20221116155031.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;/p&gt;
</content>
        <category term="pic" />
        <category term="img" />
        <category term="api" />
        <category term="random" />
        <category term="wallpaper" />
        <updated>2022-11-16T07:29:35.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/204417/</id>
        <title>在Debian系linux上通过apt的方式安装plex媒体中心</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/204417/"/>
        <content type="html">&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;p&gt;plex 是一个包含订阅制的个人媒体中心，可以在你的智能设备：Phone / Android TV / Windows / MAC OS 等在线使用专用的客户端来浏览你存储在 nas 上的影片。&lt;br&gt;
&lt;img src=&#34;/img/linuxplexguide/20221102204637.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
如果你付费订阅则会支持更多的功能如在线硬解码 / 使用 dashboard 来控制设备 / 使用 plexamp 来播放音乐。当然免费的功能已经足够我们使用。&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;首先更新&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update &amp;amp;&amp;amp; sudo apt upgrade&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;安装 apt-transport-https 包&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;要将 Plex 包安装到树莓派上，需要添加官方的 Plex 包仓库。这个包允许 “apt” 包管理器通过 Plex 仓库使用的 “https” 协议来检索包。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install apt-transport-https&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;把 Plex 仓库添加到 apt 源&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -
echo deb https://downloads.plex.tv/repo/deb public main | sudo tee /etc/apt/sources.list.d/plexmediaserver.list&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;再次更新&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt update&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;一行命令安装 Plex&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install plexmediaserver&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;使用plex&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用plex&#34;&gt;#&lt;/a&gt; 使用 Plex&lt;/h1&gt;
&lt;p&gt;打开  &lt;code&gt;Your IP:32400/web&lt;/code&gt;  来登录并配置你自己的 Plex 服务器&lt;/p&gt;
&lt;h2 id=&#34;在安卓设备上安装plex和plexamp软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#在安卓设备上安装plex和plexamp软件&#34;&gt;#&lt;/a&gt; 在安卓设备上安装 plex 和 plexamp 软件。&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;不保证时效性，若失效请自行查找。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;plex 软件开心版&lt;a href=&#34;https://apkmody.io/apps/plex&#34;&gt;点我下载&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;/img/linuxplexguide/image.png.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;plexamp 软件开心版&lt;a href=&#34;https://forum.mobilism.me/viewtopic.php?f=1332&amp;amp;t=4970093&#34;&gt;点我下载&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;/img/linuxplexguide/20221102210820.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;symfonium 这个没开心版，但是界面好看。&lt;br&gt;
&lt;img src=&#34;/img/linuxplexguide/20221102210737.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
&lt;img src=&#34;/img/linuxplexguide/20221102210803.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装wangyiyun插件来自动匹配音乐封面和歌词&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装wangyiyun插件来自动匹配音乐封面和歌词&#34;&gt;#&lt;/a&gt; 安装 Wangyiyun 插件来自动匹配音乐封面和歌词。&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;使用 git clone 下载。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo git clone https://github.com/timmy0209/WangYiYun.bundle.git /usr/lib/plexmediaserver/Resources/Plug-ins-f4cdfea9c/WangYiYun.bundle&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;重启 plex&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl restart plexmediaserver&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;直接在音乐源里勾选 wangyiyun 即可。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="media center" />
        <category term="plex" />
        <category term="emby" />
        <category term="jellyfin" />
        <category term="视频" />
        <category term="音乐" />
        <updated>2022-11-02T12:44:17.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/101622/</id>
        <title>解决mysql第一次安装后改密码的各种问题</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/101622/"/>
        <content type="html">&lt;h1 id=&#34;如何重置mysql密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何重置mysql密码&#34;&gt;#&lt;/a&gt; 如何重置 mysql 密码？&lt;/h1&gt;
&lt;p&gt;按照提示，alter user。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/img/WebBackcreat1/20221019100609.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
哈哈快乐报错。&lt;/p&gt;
&lt;p&gt;更改密码复杂度。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;set global validate_password_policy=0;
set global validate_password_length=1;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ERROR 1193 (HY000): Unknown system variable &#39;validate_password_policy&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;很快乐。&lt;/p&gt;
&lt;p&gt;那就先查看密码规范：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;SHOW VARIABLES LIKE &#39;validate_password%&#39;;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;提示：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;套娃呢是吧。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;br&gt;
重置一个和随机密码差不多的就可以了：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;qazWsx&amp;gt;+&amp;amp;3ed&#39;;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;已经提示成功了：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql&amp;gt; ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;qazWsx&amp;gt;+&amp;amp;3ed&#39;;
Query OK, 0 rows affected (0.02 sec)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更改密码复杂度：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;set global validate_password.policy=0;
set global validate_password.length=6;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改密码并退出：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;
exit&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后就可以愉快重启登陆了：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl restart mysqld
mysql -u root -p&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="linux" />
        <category term="mysql" />
        <category term="passwd" />
        <updated>2022-10-19T02:16:22.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/211932/</id>
        <title>在centos中部署后端程序。</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/211932/"/>
        <content type="html">&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;其实部署很简单，重要的地方在于部署时出现差错后该如何进行处理。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;nginx的安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#nginx的安装&#34;&gt;#&lt;/a&gt; Nginx 的安装&lt;/h1&gt;
&lt;p&gt;使用源码编译安装：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;访问&lt;a href=&#34;https://nginx.org/en/download.html&#34;&gt; Nginx&lt;/a&gt; 官网，复制最新版本链接。wget 到本地目录。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/WebBackcreat1/20221016212408.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://nginx.org/download/nginx-1.23.1.tar.gz ~/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;解压出来。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;tar -zxvf nginx-1.23.1.tar.gz
// 如果这里是 *.tar.bz2 的话则使用 -jxvf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;安装编译所需要的前置。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;进入解压出来的文件夹，编译安装。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cd nginx-1.23.1
./configure
make
make install&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;nginx 的启动和关闭&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /usr/local/nginx/sbin
// 启动nginx
./nginx
// 关闭nginx
./nginx -s stop
// 关闭防火墙
systemctl stop firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;创建目录&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir /var/temp/nginx -p&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;建议在执行前先使用 netstat -aux | grep 80 查看是否有端口占用 80。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;开机自启 * 还没写完
&lt;ol&gt;
&lt;li&gt;编辑文件&lt;/li&gt;
&lt;/ol&gt;
 &lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /lib/systemd/system/
vim nginx.service&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;添加内容&lt;/li&gt;
&lt;/ol&gt;
 &lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[Unit] 
Description=nginx 
service After=network.target 
[Service] 
Type=forking 
ExecStart=/usr/local/nginx/sbin/nginx 
ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=true 
[Install] 
WantedBy=multi-user.target
// 解释
[Unit]:服务的说明
Description:描述服务
After:描述服务类别
[Service]服务运行参数的设置
Type=forking是后台运行的形式
ExecStart为服务的具体运行命令
ExecReload为重启命令
ExecStop为停止命令
PrivateTmp=True表示给服务分配独立的临时空间
注意：[Service]的启动、重启、停止命令全部要求使用绝对路径
[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;保存退出&lt;/li&gt;
&lt;li&gt;启动&lt;/li&gt;
&lt;/ol&gt;
 &lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;systemctl start nginx.service
systemctl enable nginx.service
systemctl status nginx.service&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;233&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;编译安装-apache&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编译安装-apache&#34;&gt;#&lt;/a&gt; 编译安装 apache&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;yum update

yum install -y gcc-c++
yum install -y expat-devel pcre-devel

wget https://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-1.6.5.tar.gz
tar -zxvf apr-1.6.5.tar.gz
cd apr-1.6.5
./configure --prefix=/usr/local/apr
make &amp;amp;&amp;amp; make install

wget https://dlcdn.apache.org//apr/apr-util-1.6.3.tar.gz
tar -zxvf apr-util-1.6.3.tar.gz
cd apr-util
./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/bin/apr-1-config
make &amp;amp;&amp;amp; make install

wget https://nchc.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz
tar -zxvf pcre-8.45.tar.gz
cd pcre-8.45
./configure --prefix=/usr/local/pcre --with-apr=/usr/local/apr/bin/apr-1-config
make &amp;amp;&amp;amp; make install

wget https://mirrors.aliyun.com/apache/httpd/httpd-2.4.57.tar.gz
tar -zxvf httpd-2.4.57.tar.gz
cd httpd-2.4.57
./configure --prefix=/usr/local/httpd --with-pcre=/usr/local/pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util
cp /usr/local/httpd/bin/apachectl /etc/init.d/httpd

echo -e &#39;\nexport PATH=/usr/local/apache/bin:/usr/local/apache/lib:$PATH\n&#39; &amp;gt;&amp;gt; /etc/profile &amp;amp;&amp;amp; source /etc/profile

echo &#34;#chkconfig:2345 64 36&#34; &amp;gt; /etc/rc.d/init.d/httpd

chkconfig --add httpd
chkconfig httpd on

vim /usr/local/apache/conf/httpd.conf
unsharp #ServerName www.example.com:80

systemctl start httpd
firewall-cmd --add-port=80/tcp
firewall-cmd --add-port=443/tcp
#systemctl stop firewalld
#systemctl disable firewalld




php
yum -y install epel-release
yum update
yum -y install php-mcrypt libmcrypt libmcrypt-devel  autoconf  freetype gd jpegsrc libmcrypt libpng libpng-devel libjpeg libxml2 libxml2-devel zlib curl curl-devel openssl openssl-devel sqlite-devel

yum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-6.7.0-1.el7.x86_64.rpm
yum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-devel-6.7.0-1.el7.x86_64.rpm

wget https://www.php.net/distributions/php-8.2.5.tar.gz
tar -zxvf php-8.2.5.tar.gz
cd php-8.2.5
./configure --prefix=/usr/local/php8/ --with-config-file-path=/usr/local/php8/etc/ --with-apxs2=/usr/local/httpd/bin/apxs --enable-mbstring --with-curl -with-gd --enable-fpm --enable-mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd
make &amp;amp;&amp;amp; make install


echo -e  &#39;\nexport PATH=/usr/local/php8/bin:/usr/local/php8/sbin:$PATH\n&#39; &amp;gt;&amp;gt; /etc/profile &amp;amp;&amp;amp; source /etc/profile

php-fpm -t

出现如下提示则正常：
[18-Apr-2023 10:12:57] NOTICE: configuration file /usr/local/php8/etc/php-fpm.conf test is successful

使用如下命令启动php
/etc/init.d/php-fpm
关闭
pkill php-fpm

vi /usr/local/httpd/conf/httpd.conf

1、查看是否已经添加了，如果没有在loadModule处添加 ，正确安装后，应该已经有了
LoadModule php7_module modules/libphp7.so 
2、 在&amp;lt;IfModule dir_module&amp;gt;模块添加index.php
&amp;lt;IfModule dir_module&amp;gt;    
DirectoryIndex index.html index.php
&amp;lt;/IfModule&amp;gt; 
3、找到：
AddType  application/x-compress .Z
AddType application/x-gzip .gz .tgz
添加如下内容
AddType application/x-httpd-php-source .phps
AddType application/x-httpd-php .php

systemctl restart httpd
cd /usr/local/httpd/htdocs/
echo &#34;&amp;lt;?php phpinfo(); ?&amp;gt;&#34; &amp;gt; index.php&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;mysql-的安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mysql-的安装&#34;&gt;#&lt;/a&gt; Mysql 的安装&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;先安装 wget  &lt;code&gt;yum install wget&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;下载并安装 mysql。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm
yum -y localinstall mysql80-community-release-el7-7.noarch.rpm
yum -y install mysql-community-server&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;启动 mysql&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 启动mysql
systemctl start mysqld
// 写入开机启动
systemctl enable mysqld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;查找日志并找到临时密码。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;vi /var/log/mysqld.log&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/WebBackcreat1/20221019082932.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;登录 mysql&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;mysql -u root -p
// 密码则为查找到的临时密码。
password:&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;修改密码&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;后面专门说这傻逼 mysql 改密码。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;重启 mysql 服务&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;service mysqld restart&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;重启后就可以正常使用 mysql 了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;httpdphp安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#httpdphp安装&#34;&gt;#&lt;/a&gt; httpd/php 安装&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo yum update &amp;amp;&amp;amp; sudo yum upgrade
systemctl status httpd
sudo yum install httpd
systemctl start httpd
service mysql start
yum install php php-devel
cd /var/www/html/
vi test.php
------
&amp;lt;?php phpinfo();?&amp;gt;
------
systemctl stop firewalld&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开浏览器访问&lt;br&gt;
 localhost/test.php&lt;br&gt;
 出现 php 信息就成功了。&lt;/p&gt;
&lt;h1 id=&#34;安装pma&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装pma&#34;&gt;#&lt;/a&gt; 安装 pma&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip
unzip phpMyAdmin-5.2.1-all-languages.zip
mv phpMyAdmin-5.2.1-all-languages pma
yum install php-mysqli
cd pma
cp config.sample.inc.php config.inc.php&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开浏览器访问&lt;br&gt;
 localhost/pma&lt;br&gt;
 提示登陆就成功了。&lt;/p&gt;
</content>
        <category term="linux" />
        <category term="centos" />
        <category term="web" />
        <category term="nginx" />
        <category term="mysql" />
        <updated>2022-10-16T13:19:32.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/085248/</id>
        <title>CTF：Upload-Labs-Linux</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/085248/"/>
        <content type="html">&lt;h1 id=&#34;题目预览&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#题目预览&#34;&gt;#&lt;/a&gt; 题目预览：&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;/img/Upload-Labs-Linux/20221010085420.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;解决方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方法&#34;&gt;#&lt;/a&gt; 解决方法&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;开控制台&lt;/li&gt;
&lt;li&gt;关闭 javascript
&lt;blockquote&gt;
&lt;p&gt;设置 - 偏好设置 - 调试程序&lt;br&gt;
删除 &lt;code&gt;onsubmit=&#34;return.checkFile()&#34;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;新建一个文件里面写入 &lt;code&gt;&amp;lt;?php @eval($_POST[&#39;123&#39;]);?&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;后缀名改为 php 上传到网站，显示出图片后右键复制链接。&lt;/li&gt;
&lt;li&gt;打开 antsword，add 一个 url 地址为图片链接，密码为 123，加密 base64.&lt;/li&gt;
&lt;li&gt;点击链接就能发现根目录有个 flag 文件了。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="ctf" />
        <category term="buuctf" />
        <category term="antsword" />
        <updated>2022-10-10T00:52:48.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/082833/</id>
        <title>linuxlearn2</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/082833/"/>
        <content type="html">&lt;hr&gt;
&lt;p&gt;title: linuxlearn2&lt;br&gt;
date: 2022-10-18 11:16:47&lt;br&gt;
tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;diff&lt;/li&gt;
&lt;li&gt;sudoers&lt;/li&gt;
&lt;li&gt;passwd&lt;/li&gt;
&lt;li&gt;usermod&lt;/li&gt;
&lt;li&gt;linux&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;diff 命令&lt;br&gt;
 diff 参数 文件 1 文件 2 &amp;gt; 新文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;netstat -ano | grep “80”&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;sudoers&lt;br&gt;
% 开头表示用户组&lt;br&gt;
权限:&lt;br&gt;
/sbin:&lt;br&gt;
 该目录下的命令通常只有管理员才可以运行&lt;br&gt;
 /bin：&lt;br&gt;
下的命令管理员和一般的用户都可以使用。&lt;br&gt;
/usr/sbin：&lt;br&gt;
这个目录表示系统命令的位置&lt;br&gt;
 /usr/bin:&lt;br&gt;
 存放一些用户命令，如 led (控制 LED 灯的)。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;passwd&lt;br&gt;
 创建用户权限&lt;br&gt;
 /etc/passwd&lt;br&gt;
 用户名：口令：用户标识号：组标识号：注释性描述：主目录：登录 Shell&lt;br&gt;
useradd -u uid&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;usermod &amp;amp; groupmod&lt;br&gt;
// 修改用户所属组&lt;br&gt;
 usermod -g 用户组 用户名&lt;br&gt;
 // 修改用户 ID&lt;br&gt;
usermod -u UID 用户名&lt;br&gt;
 // 修改组 ID&lt;br&gt;
usermod -g GID 组名&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <updated>2022-09-27T00:28:33.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/175233/</id>
        <title>Linux入门学习0</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/175233/"/>
        <content type="html">&lt;h1 id=&#34;linux系统目录结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux系统目录结构&#34;&gt;#&lt;/a&gt; linux 系统目录结构&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;在 linux 中，所有都是以文件的形式存储和管理的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;bin&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bin&#34;&gt;#&lt;/a&gt; /bin&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Binary 存放经常使用的命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;sbin&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sbin&#34;&gt;#&lt;/a&gt; /sbin&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;super Binary 超级用户命令存放的目录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;home&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#home&#34;&gt;#&lt;/a&gt; /home&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;用户目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;root&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#root&#34;&gt;#&lt;/a&gt; /root&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;系统管理员目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;etc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#etc&#34;&gt;#&lt;/a&gt; /etc&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;管理系统配置文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;usr&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#usr&#34;&gt;#&lt;/a&gt; /usr&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;类似于 windows 下 Programfiles 目录，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;boot&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#boot&#34;&gt;#&lt;/a&gt; /boot&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;启动所使用的核心文件都会存放在这里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;proc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#proc&#34;&gt;#&lt;/a&gt; /proc&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;内存映射&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;srv&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#srv&#34;&gt;#&lt;/a&gt; /srv&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;services 的缩写，用于存放服务启动所需要的数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;sys&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sys&#34;&gt;#&lt;/a&gt; /sys&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;系统文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;tmp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#tmp&#34;&gt;#&lt;/a&gt; /tmp&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;是 temporary (临时) 的缩写，存放临时 / 缓存文件，可当作回收站使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;dev&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#dev&#34;&gt;#&lt;/a&gt; /dev&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;device 的缩写，类似于 windows 的设备管理器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;mnt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mnt&#34;&gt;#&lt;/a&gt; /mnt&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;linux 用于挂载可移动设备（临时）的目录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;opt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#opt&#34;&gt;#&lt;/a&gt; /opt&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;主机额外安装的软件存放的目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;var&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#var&#34;&gt;#&lt;/a&gt; /var&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;存放经常被修改的目录或文件，比如日志（*.log）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;lib&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lib&#34;&gt;#&lt;/a&gt; /lib&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;存放系统基本的动态链接库。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;权限数字意思详解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#权限数字意思详解&#34;&gt;#&lt;/a&gt; 权限数字意思详解&lt;/h1&gt;
&lt;p&gt;我们首先打开控制台在任意位置输入 ll, 就能看到当前文件夹下所有类型的信息。我们只取其中的前十位来进行结束.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dr-xr-xr-x.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;第一位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一位&#34;&gt;#&lt;/a&gt; 第一位&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;第一位表示类型&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;d directory 表示目录&lt;/li&gt;
&lt;li&gt;b block 块文件&lt;/li&gt;
&lt;li&gt;c char 字符文件&lt;/li&gt;
&lt;li&gt;- file 普通文件&lt;/li&gt;
&lt;li&gt;l link 链接&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;后面九位&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#后面九位&#34;&gt;#&lt;/a&gt; 后面九位&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;后面九位表示了文件的类型，对应的位置如果是 &lt;code&gt;-&lt;/code&gt;  则表示没有对应的权限.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;table&gt;
    &lt;tbody&gt;&lt;tr&gt;&lt;th&gt;
        &lt;/th&gt;&lt;td colspan=&#34;3&#34;&gt;前三位&lt;/td&gt;
        &lt;td colspan=&#34;3&#34;&gt;中间三位&lt;/td&gt;
        &lt;td colspan=&#34;3&#34;&gt;后三位&lt;/td&gt;
    
    &lt;/tr&gt;&lt;tr align=&#34;center&#34;&gt;
        &lt;td colspan=&#34;3&#34;&gt;创建者&lt;/td&gt;
        &lt;td colspan=&#34;3&#34;&gt;同组用户&lt;/td&gt;
        &lt;td colspan=&#34;3&#34;&gt;其他用户&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr align=&#34;center&#34;&gt;
        &lt;td&gt;r&lt;/td&gt;
        &lt;td&gt;w&lt;/td&gt;
        &lt;td&gt;x&lt;/td&gt;
        &lt;td&gt;r&lt;/td&gt;
        &lt;td&gt;w&lt;/td&gt;
        &lt;td&gt;x&lt;/td&gt;
        &lt;td&gt;r&lt;/td&gt;
        &lt;td&gt;w&lt;/td&gt;
        &lt;td&gt;x&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr align=&#34;center&#34;&gt;
        &lt;td&gt;读&lt;/td&gt;
        &lt;td&gt;写&lt;/td&gt;
        &lt;td&gt;执行&lt;/td&gt;
        &lt;td&gt;读&lt;/td&gt;
        &lt;td&gt;写&lt;/td&gt;
        &lt;td&gt;执行&lt;/td&gt;
        &lt;td&gt;读&lt;/td&gt;
        &lt;td&gt;写&lt;/td&gt;
        &lt;td&gt;执行&lt;/td&gt;
    &lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;下面来看一个实例:&lt;/p&gt;
&lt;p&gt;如果一个文件的权限为 755, 则代表什么意思？&lt;/p&gt;
&lt;p&gt;我们只需要把 755 按位转换为二进制，对应位为 0 则表示没有这个权限.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;7&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;th&gt;5&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;111&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;td&gt;101&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;用人的语言表述:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于创建者：可以读取，可以更改，可以执行.&lt;br&gt;
 对于同组人员：可以读取，不能更改，可以执行.&lt;br&gt;
 对于其他成员：可以读取，不能更改，可以执行.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="linux" />
        <category term="目录" />
        <category term="指令" />
        <category term="权限" />
        <updated>2022-09-22T09:52:33.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/120738/</id>
        <title>shortcutforshoka</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/120738/"/>
        <content type="html">&lt;pre class=&#34;line-numbers language-java&#34; data-language=&#34;java&#34;&gt;&lt;div class=&#34;caption&#34;&gt;&lt;span&gt;java&lt;/span&gt;&lt;/div&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;
...
Scanner in = new Scanner (System.in);
// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。
System.out.println (in.nextLine ());
System.out.println (&#34;Hello&#34; + &#34;world.&#34;);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;{% media audio %}
- title: 列表 1
  list:
    - https://music.163.com/#/playlist?id=2943811283
    - https://music.163.com/#/playlist?id=2297706586
- title: 列表 2
  list:
    - https://music.163.com/#/playlist?id=2031842656
{% endmedia %}&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;原本用于日语汉字假名注音，但别的注音也可以。&lt;br&gt;
为了兼容性，采用 markdown-it-ruby 的基本格式： &lt;ruby&gt;文字&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;注音&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;&lt;/ruby&gt; ，并且为了兼容表格，将分隔符由 | 换成了 ^ 。&lt;br&gt;
注音分隔基于 furigana-markdown-it 显示说明看这里&lt;/p&gt;
&lt;p&gt;&lt;ruby&gt;取&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;と&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;り&lt;rt&gt;&lt;/rt&gt;返&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;かえ&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;す&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;	取とり返かえす&lt;br&gt;
&lt;ruby&gt;可愛&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;かわい&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;い&lt;rt&gt;&lt;/rt&gt;犬&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;いぬ&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;&lt;/ruby&gt;	可愛かわいい犬いぬ&lt;br&gt;
&lt;ruby&gt;可&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;か&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;愛&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;わい&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;い&lt;rt&gt;&lt;/rt&gt;犬&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;いぬ&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;&lt;/ruby&gt;	可か愛わいい犬いぬ&lt;br&gt;
&lt;ruby&gt;アクセラレータ&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;accelerator&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;&lt;/ruby&gt;	アクセラレータ accelerator&lt;br&gt;
&lt;ruby&gt;accelerator&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;アクセラレータ&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;&lt;/ruby&gt;	accelerator アクセラレータ&lt;br&gt;
&lt;ruby&gt;食&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;た&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;べる&lt;rt&gt;&lt;/rt&gt;&lt;/ruby&gt;	食たべる&lt;br&gt;
&lt;ruby&gt;食べる&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;たべる&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;&lt;/ruby&gt;	食べるたべる&lt;br&gt;
&lt;ruby&gt;あ&lt;rt&gt;●&lt;/rt&gt;い&lt;rt&gt;●&lt;/rt&gt;う&lt;rt&gt;●&lt;/rt&gt;え&lt;rt&gt;●&lt;/rt&gt;お&lt;rt&gt;●&lt;/rt&gt;&lt;/ruby&gt;	あ●い●う●え●お●&lt;br&gt;
&lt;ruby&gt;あ&lt;rt&gt;❤&lt;/rt&gt;い&lt;rt&gt;❤&lt;/rt&gt;う&lt;rt&gt;❤&lt;/rt&gt;え&lt;rt&gt;❤&lt;/rt&gt;お&lt;rt&gt;❤&lt;/rt&gt;&lt;/ruby&gt;	あ❤い❤う❤え❤お❤&lt;br&gt;
&lt;ruby&gt;常用账号&lt;rp&gt;【&lt;/rp&gt;&lt;rt&gt;contact&lt;/rt&gt;&lt;rp&gt;】&lt;/rp&gt;&lt;/ruby&gt;	常用账号 contact&lt;/p&gt;
</content>
        <category term="短链" />
        <category term="测试" />
        <updated>2022-09-21T04:07:38.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/164658/</id>
        <title>解决windows资源管理器无法自动刷新等问题</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/164658/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;有时候在使用资源管理器新建文件的时候发现无法自动刷新，每次都需要手动刷新才会出现。这同样也导致了 chrome 在保存文件时会卡住一段时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;solution&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#solution&#34;&gt;#&lt;/a&gt; Solution&lt;/h1&gt;
&lt;p&gt;其实解决方法很简单，关掉你映射的所有网络驱动器即可恢复。据说这是 windows 的一个 bug，取消掉网络驱动器映射便解决了这个问题。&lt;/p&gt;
</content>
        <category term="win" />
        <category term="explorer.exe" />
        <category term="autorefresh" />
        <updated>2022-09-20T08:46:58.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/222828/</id>
        <title>vmware安装好后配置centos网络</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/222828/"/>
        <content type="html">&lt;h1 id=&#34;更改-ifcfg-ens33-文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#更改-ifcfg-ens33-文件&#34;&gt;#&lt;/a&gt; 更改 ifcfg-ens33 文件&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;编辑配置文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;vi /etc/sysconfig/network-scripts/ifcfg-ens33&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;需要添加 / 修改的地方&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;BOOTPROTO=static
ONBOOT=yes
IPADDR=192.168.xx.xx
NETMASK=255.255.255.0
GATEWAY=192.168.204.2
DNS1=8.8.8.8
DNS2=114.114.114.114&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;编辑-resolvconf-文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编辑-resolvconf-文件&#34;&gt;#&lt;/a&gt; 编辑 resolv.conf 文件&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;vi /etc/resolv.conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;添加如下内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;# Generated by NetworkManager
search localdomain
nameserver 8.8.8.8&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;重启网卡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#重启网卡&#34;&gt;#&lt;/a&gt; 重启网卡&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;service network restart&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="linux" />
        <category term="centos" />
        <category term="network" />
        <category term="vmware" />
        <updated>2022-09-19T14:28:28.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/002853/</id>
        <title>在你的 linux nas 上安装一个种子下载器吧！</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/002853/"/>
        <content type="html">&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;p&gt;Transmission 是一款流行的 BT 下载软件，比其他客户端使用更少的资源，守护程序非常适合服务器，并且可以通过桌面 GUI、Web 界面和终端程序进行远程控制，支持本地对等发现、完全加密、DHT、µTP、PEX 和 Magnet Link 等。&lt;/p&gt;
&lt;h1 id=&#34;安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h1&gt;
&lt;p&gt;这有啥好说的，直接 apt 一把梭：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install transmission-daemon&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;不过在更改配置前，建议先关一下服务，以防万一：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl stop transmission-daemon&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置&#34;&gt;#&lt;/a&gt; 配置&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;transmission 的配置文件在  &lt;code&gt;/etc/transmission-daemon/settings.json&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;nano /etc/transmission-daemon/settings.json&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;主要需要看看下面这几项：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&#34;download-dir&#34;: &#34;/home/pi/complete&#34;, # 下载目录 
&#34;incomplete-dir&#34;: &#34;/home/pi/incomplete&#34;, # 下载未完成文件目录
&#34;rpc-authentication-required&#34;: false, # 懒得配置密码直接把验证关掉。
&#34;rpc-host-whitelist-enabled&#34;: false,
&#34;rpc-port&#34;: 9091, # 默认 Web 访问端口，这个可以根据需要修改一下。
&#34;rpc-whitelist-enabled&#34;: false, # 白名单开关
&#34;utp-enabled&#34;: true # 允许 Web 登录&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;修改完成后启动 daemon：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl start transmission-daemon&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;浏览器打开 127.0.0.1:9091 查看效果：&lt;br&gt;
&lt;img src=&#34;/img/transmission/20220920213841.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;安装第三方主题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装第三方主题&#34;&gt;#&lt;/a&gt; 安装第三方主题&lt;/h1&gt;
&lt;p&gt;下载并执行 TWC 中文界面安装脚本&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh
bash install-tr-control-cn.sh&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按 数字 1 然后回车安装。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;lt;&amp;lt; 2022-08-29 00:27:53 &amp;gt;&amp;gt; 安装脚本执行完成。如遇到问题请查看：https://github.com/ronggang/transmission-web-control/wiki
&amp;lt;&amp;lt; 2022-08-29 00:27:53 &amp;gt;&amp;gt; == 结束 ==&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;弹出如上提示则安装成功，返回 web 界面刷新即可。&lt;br&gt;
&lt;img src=&#34;/img/transmission/20220920213753.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</content>
        <category term="transmission" />
        <category term="torrent" />
        <category term="下载器" />
        <category term="nas" />
        <updated>2022-08-28T16:28:53.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/234236/</id>
        <title>解决Windows直接访问WSL2路径并直接进行读写操作,权限不足的问题</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/234236/"/>
        <content type="html">&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;p&gt;初次安装 WSL Ubuntu 时，一般都会设置默认登录用户，当你通过 windows 访问该文件夹时，如果访问的 Ubuntu 目录的权限用户时你的默认用户，你可以对其进行修改。但是如果你访问的时 root 权限的用户，则会出现如权限不足，permission deny 报错。&lt;/p&gt;
&lt;h1 id=&#34;solution&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#solution&#34;&gt;#&lt;/a&gt; Solution&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;C:\Users\wangj\AppData\Local\Microsoft\WindowsApps\debian.exe config --default-user root&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改完成后，记得重启 wsl：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;wsl --shutdown&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;10s 后，在执行 wsl 命令，然后再次测试，看是否可行。&lt;/p&gt;
</content>
        <category term="wsl" />
        <category term="权限不足" />
        <category term="vscode" />
        <updated>2022-08-28T15:42:36.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/222543/</id>
        <title>部署完hexo后还应该准备哪些工作</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/222543/"/>
        <content type="html">&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;p&gt;上一回我们讲到了如何部署 hexo 到 github 上，并简单的向 repo 里推送了你的博客。这一回我们简单的来完善你的博客。&lt;/p&gt;
&lt;h1 id=&#34;0主题配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#0主题配置&#34;&gt;#&lt;/a&gt; 0. 主题配置&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/&#34; title=&#34;Click Me&#34;&gt;Click Me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md&#34; title=&#34;matery&#34;&gt;matery&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;1备份hexo源文件到-backup-分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#1备份hexo源文件到-backup-分支&#34;&gt;#&lt;/a&gt; 1. 备份 Hexo 源文件到 Backup 分支&lt;/h1&gt;
&lt;p&gt;由于种种原因我们总会更改自己的工作环境或者一顿操作猛如虎，将自己博客的源文件一通收拾，然后就没有然后了。&lt;br&gt;
所以建议大家创建好博客记得把源文件也一同备份到 Github 上以防万一。&lt;/p&gt;
&lt;h2 id=&#34;创建backup分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建backup分支&#34;&gt;#&lt;/a&gt; 创建 backup 分支&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开你 GitHub repo 的页面，点击左上角的分支选项。&lt;/li&gt;
&lt;li&gt;点击 View all branches，然后点击右上角的 New branch。&lt;/li&gt;
&lt;li&gt;Branch name：backup，Branch source：master&lt;/li&gt;
&lt;li&gt;create branch。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;将backup分支切换为默认分支&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#将backup分支切换为默认分支&#34;&gt;#&lt;/a&gt; 将 backup 分支切换为默认分支&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;我也不知道为什么要这么做，但是不这么做最后一步就没法 push 了 😦&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;将repo-clone到本地&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#将repo-clone到本地&#34;&gt;#&lt;/a&gt; 将 repo clone 到本地&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;直接在博客根目录下执行这个命令：&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone &#39;你的repo&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;将克隆过来 repo 里的 &lt;code&gt;.git&lt;/code&gt;  文件夹拷贝到博客根目录。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cp -r ./&#39;你的repo&#39; ./&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;依次执行以下指令&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 保存所有文件到暂存区
git add .
// 提交变更
git commit -m &#39;Backup&#39;
// 推送到github，分支为Backup
git push origin backup&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;报错&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#报错&#34;&gt;#&lt;/a&gt; 报错&lt;/h2&gt;
&lt;p&gt;可能会提示如下错误&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;fatal: unable to access &#39;https://github.com/xxx/xxx.github.io.git/&#39;: GnuTLS recv error (-110): The TLS connection was non-properly terminated.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行下面的指令即可正常推送&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global --unset http.proxy
git config --global --unset git.proxy&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;还原&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#还原&#34;&gt;#&lt;/a&gt; 还原&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;克隆 backup 分支到本地&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;git clone -b backup https://github.com/maxshiro/maxshiro.github.io.git&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;安装依赖&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cnpm install&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;2-博客加密&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#2-博客加密&#34;&gt;#&lt;/a&gt; 2. 博客加密&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。&lt;/li&gt;
&lt;li&gt;这在 wordpress，emlog 或其他博客系统中都很容易实现，然而 hexo 除外。😦&lt;/li&gt;
&lt;li&gt;为了解决这个问题，我们需要安装 “hexo-blog-encrypt” 扩展。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装指令&#34;&gt;#&lt;/a&gt; 安装指令&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install hexo-blog-encrypt&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;快速使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#快速使用&#34;&gt;#&lt;/a&gt; 快速使用&lt;/h2&gt;
&lt;p&gt;将 password 标签添加到您的 Front-matter 里，就像这样：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;---
title: xxx
date: 2022-08-26 17:34:59
password: 233
tags: xxx
---&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;特性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#特性&#34;&gt;#&lt;/a&gt; 特性&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;一旦你输入了正确的密码，它就会被存储在本地浏览器的 localStorage 中。按个按钮，密码将会被清空。若博客中有脚本，它将被正确地执行。&lt;/li&gt;
&lt;li&gt;支持按标签加密。&lt;/li&gt;
&lt;li&gt;所有的核心功能都是由原生的 API 所提供的。在 Node.js 中，我们使用 Crypto。在浏览器中，我们使用 Web Crypto API。&lt;/li&gt;
&lt;li&gt;PBKDF2，SHA256 被用作复制密钥，AES256-CBC 被用作加解密，我们还使用 HMAC 来验证密文的来源，并确保其纠正。&lt;/li&gt;
&lt;li&gt;广泛地使用 Promise 来进行异步操作，从而确保线程不被杜塞。&lt;/li&gt;
&lt;li&gt;过时的浏览器将无法正常显示，因此，请升级您的浏览器。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;3-博客加速&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#3-博客加速&#34;&gt;#&lt;/a&gt; 3. 博客加速&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;于 2022 年 11 月测试 vercel.app 已经被墙了，但是还可以通过自备域名的方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 Vercel 加速 Hexo 博客访问速度。&lt;br&gt;
如果你想让您的博客更快的更新，那么可以采取这种方法的同时，也可以加速你的博客。&lt;br&gt;
该方法适用于已经使用我的方法将博客源文件备份到了 github 的。&lt;/p&gt;
&lt;h2 id=&#34;步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#步骤&#34;&gt;#&lt;/a&gt; 步骤&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://xn--vercel-oi2ls3t.com&#34;&gt;打开 vercel.com&lt;/a&gt;, 这个域名没有被墙。登陆的时候选择 github 方式。&lt;br&gt;
&lt;img src=&#34;/img/hexoplugin/20221116141135.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;创建新项目，选择 git 仓库中已存在的项目，然后选 Deploy。&lt;/li&gt;
&lt;li&gt;创建完成后就可以通过  &lt;code&gt;你项目名称.vercel.app&lt;/code&gt;  访问了。但是目前 vercel.app 已经被墙了，所以还需要在设置里添加自己的域名。&lt;/li&gt;
&lt;li&gt;切换到自己的域名控制台里添加一条 cname 记录，指向这个地址  &lt;code&gt;cname-china.vercel-dns.com&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;将 Git Branch 里的内容改为存放自己博客备份的分支，比如我的就是 backup 分支。同时也可以将分配给你的二级域名也改成这个分支。&lt;br&gt;
&lt;img src=&#34;/img/hexoplugin/20221116144428.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;切换到 Git 项目，将 Production Branch 也更改为 backup 分支。&lt;br&gt;
&lt;img src=&#34;/img/hexoplugin/20221116144502.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;li&gt;此时如果你的 backup 分支如果有更新，那么 vercel 会自动克隆你的源文件然后编译更新 cache。&lt;/li&gt;
&lt;li&gt;使用这种方法独立于 github page。只有当你 hexo d 之后源博客才会更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;保护博客源码内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#保护博客源码内容&#34;&gt;#&lt;/a&gt; 保护博客源码内容&lt;/h2&gt;
&lt;p&gt;如果你认为这种方式要更好一些，当然你也可以选择直接关掉 github page 并将仓库设置为 private，这样别人就无法轻易获取您博客的源代码了。&lt;/p&gt;
&lt;h1 id=&#34;写作流程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#写作流程&#34;&gt;#&lt;/a&gt; 写作流程&lt;/h1&gt;
&lt;h2 id=&#34;第一次使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#第一次使用&#34;&gt;#&lt;/a&gt; 第一次使用&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;安装 nodejs，git，hexo，npm&lt;/li&gt;
&lt;li&gt;git clone 仓库链接&lt;/li&gt;
&lt;li&gt;cd 到目录然后 cnpm install&lt;/li&gt;
&lt;li&gt;撰写博客&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;通过github-page&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过github-page&#34;&gt;#&lt;/a&gt; 通过 github page&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;撰写博客&lt;/li&gt;
&lt;li&gt;保存到 github。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 保存所有文件到暂存区
git add .
// 提交变更
git commit -m &#39;Backup&#39;
// 推送到github，分支为Backup
git push origin backup&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;生成并提交网页。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 生成静态网页
hexo g
// 生成目录文件
hexo algolia
// 打开本地服务器预览
hexo s
// 提交到github page
hexo d&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;等待网页更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;通过vercelcom&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通过vercelcom&#34;&gt;#&lt;/a&gt; &lt;a href=&#34;http://xn--vercel-2u3sdu.com&#34;&gt;通过 vercel.com&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;撰写博客&lt;/li&gt;
&lt;li&gt;保存到 github。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 保存所有文件到暂存区
git add .
// 提交变更
git commit -m &#39;Backup&#39;
// 推送到github，分支为Backup
git push origin backup&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;等待网页更新。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="plugin" />
        <category term="hexo" />
        <category term="backup" />
        <updated>2022-08-28T14:25:43.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/212907/</id>
        <title>Centos安装MatrixSynapseChat简易教程</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/212907/"/>
        <content type="html">&lt;h2 id=&#34;先安装前置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#先安装前置&#34;&gt;#&lt;/a&gt; 先安装前置&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install libtiff-devel libjpeg-devel libzip-devel freetype-devel libwebp-devel libxml2-devel libxslt-devel libpq-devel python3-virtualenv libffi-devel openssl-devel python3-devel
yum groupinstall &#34;Development Tools&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;使用root账户接入您的centos找到合适的位置开始操作&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#使用root账户接入您的centos找到合适的位置开始操作&#34;&gt;#&lt;/a&gt; 使用 root 账户接入您的 centos，找到合适的位置开始操作&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir syn&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;依次执行以下指令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#依次执行以下指令&#34;&gt;#&lt;/a&gt; 依次执行以下指令&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;virtualenv -p python3 ./env &amp;amp;&amp;amp; source ./env/bin/activate
python3 -m pip install --upgrade pip &amp;amp;&amp;amp; python3 -m pip install --upgrade setuptools &amp;amp;&amp;amp; python3 -m pip install psycopg2-binary
python3 -m pip install matrix-synapse                         //安装synapse
python3 -m pip install -U matrix-synapse                    //更新synapse&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;将下列指令拷贝到控制台执行自动生成homeserveryaml&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#将下列指令拷贝到控制台执行自动生成homeserveryaml&#34;&gt;#&lt;/a&gt; 将下列指令拷贝到控制台执行，自动生成 homeserver.yaml&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;python3 -m synapse.app.homeserver \
    --server-name im.axro.top \
    --config-path homeserver.yaml \
    --generate-config \
    --report-stats=no&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;编辑生成homeserveryaml&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#编辑生成homeserveryaml&#34;&gt;#&lt;/a&gt; 编辑生成 &lt;code&gt;homeserver.yaml&lt;/code&gt;&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;enable_registration: true
suppress_key_server_warning: true
bind_addresses: [&#39;::1&#39;, &#39;0.0.0.0&#39;]&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;启动关闭服务器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#启动关闭服务器&#34;&gt;#&lt;/a&gt; 启动 / 关闭服务器&lt;/h2&gt;
&lt;h4 id=&#34;注意要先进入虚拟python环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注意要先进入虚拟python环境&#34;&gt;#&lt;/a&gt; 注意要先进入虚拟 python 环境&lt;/h4&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;source ./env/bin/activate

synctl start
synctl stop&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;退出虚拟环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#退出虚拟环境&#34;&gt;#&lt;/a&gt; 退出虚拟环境&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;deactivate&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置反代&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置反代&#34;&gt;#&lt;/a&gt; 配置反代&lt;/h2&gt;
&lt;p&gt;进入宝塔面板新建静态网站，配置 ssl，配置反向代理地址为 &lt;code&gt;https://localhost:8008&lt;/code&gt; , 保存即可.&lt;/p&gt;
</content>
        <category term="nextcloud" />
        <category term="聊天室" />
        <category term="python" />
        <updated>2022-08-28T13:29:07.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/211502/</id>
        <title>解决linux下挂载其他linux硬盘的问题并创建smb局域网共享</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/211502/"/>
        <content type="html">&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;之前用来当作小型服务器的笔记本终于被我给淘汰了。已经关机了好久。最近买了块 &lt;code&gt;SATA&lt;/code&gt;  硬盘盒，想要将这台笔记本内的数据备份出来并把硬盘用作其他用途。一切连接好后发现无法挂载，遂百度了一会查出了如下方法…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;故障复现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#故障复现&#34;&gt;#&lt;/a&gt; 故障复现&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;连接 linux 系统，提示插入硬盘. &lt;code&gt;/dev&lt;/code&gt;  分区下出现硬盘编号&lt;/li&gt;
&lt;li&gt;执行如下指令&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /
mkdir backup
mount /dev/sdc/ /backup/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;报错&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;mount: unknown filesystem type &#39;LVM2_member&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;解决方法-debian系&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方法-debian系&#34;&gt;#&lt;/a&gt; 解决方法 //Debian 系&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;执行如下指令安装 lvm2 并扫描查看以挂载的磁盘&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install lvm2
sudo vgscan&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;发现如下字样后找到对应的 &lt;code&gt;xxx&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Found volume group &#34;xxx&#34; using metadata type lvm2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;设为活动状态并查看可挂载的分区&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo vgchange -ay xxx
sudo lvs
LV     VG   Attr   LSize  Origin Snap%  Move Log Copy%  Convert
data        xxx             -wi-a-              34.19G      &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;挂载对应分区&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mount /dev/xxx/data/ /backup/&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;至此已经解决了问题，如果你还想把这块硬盘里的数据共享出去，比如共享给局域网内的 windows 主机，那就接着看…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;设置smb&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#设置smb&#34;&gt;#&lt;/a&gt; 设置 SMB&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;先更新一下&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;安装 Samba 服务&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install samba samba-common&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;配置共享目录&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 新建目录
sudo mkdir /home/db
// 更改目录权限
sudo chmod 777 /home/db/ -R&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;添加账户&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;要注意添加的账户需要是系统内已存在的账户&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 后面的pi为系统的用户名
sudo smbpasswd -a pi&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;输入两次密码后创建成功&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;创建系统账户&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// -m参数为添加/home/username目录,username更改为你要创建的用户名.
sudo useradd -m username
// 更改账户密码
sudo passwd username
// 删除用户
sudo userdel -r username
// 更改登录zhanghu
su -username&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;配置 samba&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 建议先备份一下
sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak
// 编辑
sudo vim /etc/samba/smb.conf&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;在文件最后添加&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[database] 
    comment = 23333333  # 描述
	path = /home/db/    # 目录
	public = yes        # 是否允许guest用户访问
	writable = yes      # 是否允许读写
	workgroup = WORKGROUP  # 工作组&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;重启 samba 服务&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo service smbd restart&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在 windows 里面映射就行了&lt;/p&gt;
&lt;h1 id=&#34;借鉴摘抄&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#借鉴摘抄&#34;&gt;#&lt;/a&gt; 借鉴 (摘抄)&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/mvp_Dawn/article/details/105847485&#34; title=&#34;ubuntu 20.04 安装配置Samba服务，Windows 和 linux协同工作&#34;&gt;ubuntu 20.04 安装配置 Samba 服务，Windows 和 linux 协同工作&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="linux" />
        <category term="运维" />
        <category term="smb" />
        <updated>2022-08-28T13:15:02.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/211224/</id>
        <title>Switch模拟器的安装使用以及游戏文件获取和处理。</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/211224/"/>
        <content type="html">&lt;p&gt;&lt;img src=&#34;/img/ns/1.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;引子&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引子&#34;&gt;#&lt;/a&gt; 引子&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;本篇文章起源于之前我想玩 mega39 而写，现在我对这些内容有了新的理解，再次进行更改记录。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Ryujinx 和 yuzu 模拟器任选一个即可。如果游戏运行有问题再尝试另外一个&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;配置要求&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置要求&#34;&gt;#&lt;/a&gt; 配置要求&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;ryujinx&lt;/code&gt;  和  &lt;code&gt;yuzu&lt;/code&gt;  都适用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;软体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软体&#34;&gt;#&lt;/a&gt; 软体:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;建议运行 Windows 10 1803 或较新版本以获得最佳性能。这里仅列出 Win10 64 位 要求.&lt;/p&gt;
&lt;p&gt;如果你要在 linux 下使用则建议您找找其他的教程，我目前还没有使用 linux 的机器。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;硬体要求适用于所有 Switch 游戏.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;cpu&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cpu&#34;&gt;#&lt;/a&gt; CPU:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;任何支持 FMA 指令集的 x86_64 CPU。 建议使用 6 个或更多线程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;最小: Intel Core i5-4430 / AMD Ryzen 3 1200&lt;/li&gt;
&lt;li&gt;推荐: Intel Core i5-10400 / AMD Ryzen 5 3600&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;专用显示卡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#专用显示卡&#34;&gt;#&lt;/a&gt; 专用显示卡:&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;必须使用 OpenGL 4.6 或 Vulkan 1.1 兼容硬件和驱动程序。 推荐使用支持半浮点以及 4GB 显示内存。&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;大多数游戏都可以在 Fermi 系列（400 系列）或更高版本的 Nvidia GPU 上运行，但强烈建议至少使用 Pascal（1000 系列）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;最小: NVIDIA GeForce GT 1030 2GB / AMD Radeon RX 550 2GB&lt;/li&gt;
&lt;li&gt;推荐: NVIDIA GeForce GTX 1650 4GB / AMD Radeon RX Vega 56 8GB&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;集成显示卡&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集成显示卡&#34;&gt;#&lt;/a&gt; 集成显示卡:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;集成显卡的性能表现很差。 独立显卡能够在所有场景中产生更好的效果。 这里列出 iGPU 支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;最小: Intel HD Graphics 520 / AMD Radeon Vega 3&lt;/li&gt;
&lt;li&gt;推荐: Intel UHD Graphics 750 / AMD Radeon Vega 7&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;内存&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#内存&#34;&gt;#&lt;/a&gt; 内存:&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;因为集成 GPU 调用内存作为显存 (VRAM)，所以在此配置中的内存要求要高些。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;最小专用显卡内存: 8GB&lt;/li&gt;
&lt;li&gt;最小集成显卡内存: 12GB&lt;/li&gt;
&lt;li&gt;推荐: 16GB&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;安装前&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装前&#34;&gt;#&lt;/a&gt; 安装前&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你已经有了 Switch 则可以提取自己的。我就不具体写教程了。可以看看 Ryujinx 官方提供的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;prod.key 导出:&lt;a href=&#34;https://github.com/Ryujinx/Ryujinx/wiki/Keys&#34;&gt;https://github.com/Ryujinx/Ryujinx/wiki/Keys&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;固件导出:&lt;a href=&#34;https://github.com/Ryujinx/Ryujinx/wiki/Firmware-Dumping-Guide-(hbmenu-&amp;amp;-Goldleaf)&#34;&gt;https://github.com/Ryujinx/Ryujinx/wiki/Firmware-Dumping-Guide-(hbmenu-&amp;amp;-Goldleaf)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载安装-yuzu-软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载安装-yuzu-软件&#34;&gt;#&lt;/a&gt; 下载安装 yuzu 软件。&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;下列操作建议在科学上网环境下进行.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;去 &lt;a href=&#34;https://yuzu-emu.org/&#34;&gt;https://yuzu-emu.org/&lt;/a&gt; 下载最新的 yuzu 模拟器。并运行软体.
&lt;blockquote&gt;
&lt;p&gt;我在下方的链接里也放了捐赠版也就是 EA，但是版本不会经常更新。如果安装出现问题可以试试。&lt;br&gt;
yuzu EA 版本还支持多人联机的功能，但是需要你使用梯子才可以比较好的使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;yuzu Early Access 这个版本是只有捐赠用户才可以使用，如果条件支持可以去支持一波.&lt;/li&gt;
&lt;li&gt;普通版本已经足够使用.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;由于安装的时候会连接 Github 服务器下载文件，因此强烈建议使用全局科学上网.&lt;/li&gt;
&lt;li&gt;安装完成后直接启动，提示缺少 key 文件，选 OK :&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/ns/20220920215251.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;然后会跳出提示框问是否帮助改进 yuzu , 我们点 no.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;此时已经完成安装了模拟器本体，不过想要正常运行游戏还需要做以下操作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;执行工具栏中的  &lt;code&gt;文件&lt;/code&gt;  -&amp;gt;  &lt;code&gt;Open yuzu Folder&lt;/code&gt;  打开 yuzu 软件自动创建的目录，然后在下方的链接里找到 key 文件夹，下载  &lt;code&gt;prod.keys&lt;/code&gt;  文件扔进 keys 文件夹内.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;然后再次打开 yuzu 就不会再弹出刚才的对话框了.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;下载安装-ryujinx-软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载安装-ryujinx-软件&#34;&gt;#&lt;/a&gt; 下载安装 Ryujinx 软件&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;同样下列操作建议在科学上网环境下进行.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;打开 &lt;a href=&#34;https://ryujinx.org/&#34;&gt;https://ryujinx.org/&lt;/a&gt; ，选择上方 Download 下载最新编译版本解压。并运行软体.
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/Ryujinx/Ryujinx/actions&#34;&gt;Action&lt;/a&gt; 如果你有能力可以直接到 Ryujin 模拟器 github 获取最新测试版的编译版本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;打开 &lt;a href=&#34;https://darthsternie.net/switch-firmwares/&#34;&gt;https://darthsternie.net/switch-firmwares/&lt;/a&gt; ，下载最新的固件到本地备用。&lt;/li&gt;
&lt;li&gt;在模拟器最上方依次点击 &lt;code&gt;File&lt;/code&gt;  →  &lt;code&gt;Open Ryujinx Folder&lt;/code&gt; 。&lt;/li&gt;
&lt;li&gt;进入 system 文件夹，在下方的链接里找到 key 文件夹，下载  &lt;code&gt;prod.keys&lt;/code&gt;  文件扔进 keys 文件夹内.&lt;/li&gt;
&lt;li&gt;在模拟器最上方依次点击  &lt;code&gt;Tools&lt;/code&gt;  →  &lt;code&gt;Install Firmware&lt;/code&gt;  →  &lt;code&gt;Install a firmware from XCI or ZIP&lt;/code&gt; , 选择刚才下载的固件文件点击  &lt;code&gt;open&lt;/code&gt; 。
&lt;ol&gt;
&lt;li&gt;若出现报错，如下图所示，是因为  &lt;code&gt;prod.keys&lt;/code&gt;  文件与  &lt;code&gt;Firmware&lt;/code&gt;  不匹配，prod.keys 文件要与 Firmware 匹配才可以安装成功，因此你若想安装新的 firmware，则需要你自己去找对应的 prod.keys
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;/img/ns/20221107165255.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;添加游戏目录，依次点击  &lt;code&gt;Options&lt;/code&gt;  →  &lt;code&gt;Settings&lt;/code&gt;  ，打开设置，在  &lt;code&gt;General&lt;/code&gt;  选项卡，点击  &lt;code&gt;Add&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;在弹出的窗口中选择你的游戏目录，然后点击右下角的  &lt;code&gt;Add&lt;/code&gt; ，然后点击 &lt;code&gt;Save&lt;/code&gt; 。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h1 id=&#34;模拟器设置yuzu和ryujinx部分内容通用有区别我会标注出来&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模拟器设置yuzu和ryujinx部分内容通用有区别我会标注出来&#34;&gt;#&lt;/a&gt; 模拟器设置（yuzu 和 ryujinx 部分内容通用，有区别我会标注出来）&lt;/h1&gt;
&lt;p&gt;执行  &lt;code&gt;模拟(E)&lt;/code&gt;  -&amp;gt;  &lt;code&gt;Configure...&lt;/code&gt;  打开 yuzu 设置.&lt;/p&gt;
&lt;h2 id=&#34;通用选单&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通用选单&#34;&gt;#&lt;/a&gt; 通用选单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Interface 下第一项（interface language）可以更改显示语言，建议先把这个改为中文。&lt;/li&gt;
&lt;li&gt;勾选  &lt;code&gt;多核 CPU 仿真&lt;/code&gt;  可在一定程度上改进性能.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;运行速度限制&lt;/code&gt;  更改到 100% 可解决某些游戏没有帧数限制导致游戏速度异常。&lt;/li&gt;
&lt;li&gt;网络选单下可以填写你注册 yuzu 网站后的令牌以此来进行联机。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;系统选单&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#系统选单&#34;&gt;#&lt;/a&gt; 系统选单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;在 系统 选单，系统 选项卡，系统设置 框架内根据需要设置  &lt;code&gt;语言&lt;/code&gt; ， &lt;code&gt;地区&lt;/code&gt;  和  &lt;code&gt;时区&lt;/code&gt; ，这里推荐  &lt;code&gt;中文&lt;/code&gt; ， &lt;code&gt;中国&lt;/code&gt; ， &lt;code&gt;中文&lt;/code&gt;  不然默认语言看不懂 (&lt;/li&gt;
&lt;li&gt;配置选项卡可以更改个人信息但是没什么用。&lt;/li&gt;
&lt;li&gt;网络选项卡若要使用联机服务则需要选择一种连接方式，通常是以太网或者 WLAN。这取决于你当前使用什么方式上网。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;图形选单&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#图形选单&#34;&gt;#&lt;/a&gt; 图形选单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;API&lt;/code&gt;  任意选择，N 卡选 Vulkan 有时候也更好。&lt;/li&gt;
&lt;li&gt;如果你的设备是笔记本，那你需要更改  &lt;code&gt;设备&lt;/code&gt;  为自己的独立显卡。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;控制选单&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#控制选单&#34;&gt;#&lt;/a&gt; 控制选单&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;输入设备&lt;/code&gt;  内可以选择自己的手柄 / 控制器。唯一需要注意的是 switch 按键的 ab/xy 按键是反过来的，建议游玩的时候别看手柄。&lt;/li&gt;
&lt;li&gt;最后点击  &lt;code&gt;OK&lt;/code&gt;  即可完成配置…&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载游戏&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载游戏&#34;&gt;#&lt;/a&gt; 下载游戏&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;我发现&lt;a href=&#34;https://xxxxx520.com/&#34; title=&#34;Switch520&#34;&gt; Switch520&lt;/a&gt; 这里的游戏下载没那么多门槛要会员什么什么的，不过都是百度网盘，建议整一个百度网盘会员.(现在有插件可以实现免会员高速下载，有空我再写写：P)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;文中提到的文件可以到这个链接：&lt;strong&gt;&lt;a href=&#34;https://maxshiro-my.sharepoint.com/:f:/g/personal/maxshiroi_maxshiro_onmicrosoft_com/El4X0CVz-TBKqO0k_-_BWRcBt4uT7Tf-gVJtrKdPhbyP5A?e=IUlqdf&#34; title=&#34;Sharepoint&#34;&gt;Sharepoint&lt;/a&gt;&lt;/strong&gt; 里面下载获取。&lt;/p&gt;
&lt;p&gt;下载 xxx.xci 文件，这就是游戏本体了。将这个游戏本体放到任意文件夹内 (不要有中文) . 双击 yuzu 模拟器中间，选择你放 xci 文件的那个文件夹打开，然后你就会发现游戏已经加载出来了。双击打开爽玩吧～&lt;/p&gt;
&lt;h1 id=&#34;处理-switch-游戏文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#处理-switch-游戏文件&#34;&gt;#&lt;/a&gt; 处理 Switch 游戏文件&lt;/h1&gt;
&lt;p&gt;switch 可以下载到的文件有很多种，因此有些时候我们下载得到的文件并不是 xci 或者 nsp 这样的可执行文件。这种时候就需要自己转换游戏文件格式。&lt;/p&gt;
&lt;h2 id=&#34;常见的几种格式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见的几种格式&#34;&gt;#&lt;/a&gt; 常见的几种格式&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xci&lt;/code&gt; ：可以理解 XCI 文件直接从卡带提取的文件，而 XCI 整合版（整合了游戏升级补丁 + DLC 的版本是最方便的 推荐下载）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;xcz&lt;/code&gt; : 是 xci 压缩后的文件，需要转换为 xci 才可以正常使用。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nsp&lt;/code&gt; : nsp 相当于正版系统数字游戏，nsp 没有整合版，当您看到文件名称有  &lt;code&gt;000&lt;/code&gt;  或者  &lt;code&gt;v0&lt;/code&gt;  说明是本体。而文件名中带有  &lt;code&gt;Updata&lt;/code&gt;  的则为升级补丁，带有  &lt;code&gt;DLC&lt;/code&gt;  字样则为扩展游戏内容的额外内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nsz&lt;/code&gt; : 有些 DLC 或者升级补丁会打包为 nsz 文件，打包的时候可以忽略，如果是游戏文件则您需要转换为 nsp 文件才可以运行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;四种格式之间转换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四种格式之间转换&#34;&gt;#&lt;/a&gt; 四种格式之间转换。&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 NSCB 软件进行打包等操作，我获取到的适配 15.0.0 版本的。这软件有时效性，因此如果不能正常使用则需要更新。&lt;br&gt;
&lt;a href=&#34;https://wwb.lanzoum.com/iVl9f0dw6svg&#34;&gt;NSCB&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;emusak-ui-软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#emusak-ui-软件&#34;&gt;#&lt;/a&gt; EmuSAK UI 软件&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;使用此软件可以更方便的管理你电脑上现有的模拟器以及游戏，还可以获取最新的 prod.key 等文件。&lt;br&gt;
&lt;a href=&#34;https://github.com/CapitaineJSparrow/emusak-ui&#34;&gt;https://github.com/CapitaineJSparrow/emusak-ui&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;EmuSAK UI 功能一览：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加并管理电脑上的多个 switch 模拟器 (单机或者联机版 ryujinx)&lt;/li&gt;
&lt;li&gt;找到并列出电脑中的 switch 游戏&lt;/li&gt;
&lt;li&gt;展示本地着色器缓存 &amp;amp; emusak 在线着色器缓存 (如果本地缓存较少可以下载在线缓存)&lt;/li&gt;
&lt;li&gt;更新固件&lt;/li&gt;
&lt;li&gt;更新 prod keys 密钥&lt;/li&gt;
&lt;li&gt;给下载游戏存档&lt;/li&gt;
&lt;li&gt;下载着色器缓存&lt;/li&gt;
&lt;li&gt;下载 mod 模组&lt;/li&gt;
&lt;li&gt;一键分享电脑中的着色器缓存 (shader cache)&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="switch" />
        <category term="animal crossing" />
        <category term="Project Diva" />
        <category term="Miku" />
        <category term="Mega39" />
        <category term="emulater" />
        <category term="yuzu" />
        <category term="ryujinx" />
        <updated>2022-08-28T13:12:24.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/210724/</id>
        <title>【虚拟Vocal】 Synthesize V 初代整合</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/210724/"/>
        <content type="html">&lt;h1 id=&#34;软件介绍&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软件介绍&#34;&gt;#&lt;/a&gt; 软件介绍&lt;/h1&gt;
&lt;p&gt;Synthesizer V 是 Dreamtonics 开发的系列歌声合成软件，它结合了强大的歌声合成引擎和直观灵活的用户界面，只需绘制旋律并注入歌词，即可轻松创作原创歌曲。&lt;/p&gt;
&lt;h1 id=&#34;intro&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#intro&#34;&gt;#&lt;/a&gt; Intro&lt;/h1&gt;
&lt;p&gt;当你想要摆脱 Vocaloid 软件的支配，想要试试其他同类型的软件。您肯定会搜到这个软件。但是很不幸，当您点开官网查看售价，显然单个声库加 pro 版软件 899 的价格让您打了退堂鼓。&lt;br&gt;
  您只好把思路转向搜索 crack 版本软件。又很不幸，这个软件 crack 版的本体和声库都很难寻找。&lt;br&gt;
  在这里恭喜您找到了这篇文章。可万幸中的不幸就是，我也没有这个软件的 V2 破解版。但是我找到了 V1 的破解版，在此提供给大家。&lt;/p&gt;
&lt;h1 id=&#34;关于软件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于软件&#34;&gt;#&lt;/a&gt; 关于软件&lt;/h1&gt;
&lt;p&gt;软件的获取来源是 GitHUB 用户 &lt;code&gt;CJLU&lt;/code&gt;  的 &lt;code&gt;Synthesizer-V-FE&lt;/code&gt; , 版本为 1.8.0，所有功能正常使用。链接地址：&lt;a href=&#34;https://github.com/CJLU-source/Synthesizer-V-FE&#34; title=&#34;给特何不&#34;&gt;给特何不&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;关于声库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关于声库&#34;&gt;#&lt;/a&gt; 关于声库&lt;/h1&gt;
&lt;p&gt;目前手头上只有这几个声库：&lt;/p&gt;
&lt;h2 id=&#34;eng-英语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#eng-英语&#34;&gt;#&lt;/a&gt; Eng (英语)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;爱莲娜芙缇 (女)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;zh-中文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#zh-中文&#34;&gt;#&lt;/a&gt; Zh (中文)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;苍穹 (女)&lt;/li&gt;
&lt;li&gt;赤羽 (女)&lt;/li&gt;
&lt;li&gt;海伊 (女)&lt;/li&gt;
&lt;li&gt;诗岸 (女)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;jp-日文&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#jp-日文&#34;&gt;#&lt;/a&gt; JP (日文)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;闇音レンリ (女)&lt;/li&gt;
&lt;li&gt;玄武 (男)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;下载地址-包含全部内容&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载地址-包含全部内容&#34;&gt;#&lt;/a&gt; 下载地址 （包含全部内容）&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;特殊原因暂不提供 😦&lt;br&gt;
(其实是文件丢了&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="Vocal" />
        <category term="AI" />
        <category term="歌声合成" />
        <updated>2022-08-28T13:07:24.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/205944/</id>
        <title>Win11 安装 WSA 简易教程</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/205944/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;微软终于在昨天上线了 WSA 的测试版本，此次只有美国地区上线了。因此如果你的 Win11 系统为美区的话，可以直接点击 &lt;a href=&#34;https://www.microsoft.com/store/productId/9P3395VX91NR&#34; title=&#34;这个链接&#34;&gt;这个链接&lt;/a&gt; 进行安装。如果非美区那就接着看步骤吧&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;bug 还是有很多，首先是 WSA 无法调用 GPU, 这就导致很多 3d 游戏会很卡，实测明日方舟帧数不到 20 帧。然后安装 WSA 要启用 Hyper-V 即微软的虚拟机平台，打开这个会导致无法再安装和使用其他安卓模拟器。和市面上大多数安卓模拟器相比，微软这个 WSA 是 ARM 翻译运行的，安卓版本更高 (Android 11), 可以运行 ARM 程序。与系统集成度更好 (虽然目前还没有实现 WSL 那样的文件访问) 而模拟器大多都为 Android x86 项目改的，因此最高只能到 Android 9.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你是想尝尝鲜，试试这个新功能那我还是推荐试一试。如果你主要想拿来打游戏，日常使用的话那还是更推荐安卓模拟器一些.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;开启虚拟化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#开启虚拟化&#34;&gt;#&lt;/a&gt; 开启虚拟化&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;PS: 如果之前你有禁用过 Hyper-V 的话记得使用管理员权限打开 Powershell 然后通过这个指令这个指令重新打开，不记得有没有那就跳过:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;bcdedit /set hypervisorlaunchtype auto&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;打开开始菜单，直接搜索控制面板，然后打开.&lt;/li&gt;
&lt;li&gt;找到  &lt;code&gt;程序和功能&lt;/code&gt;  - &lt;code&gt;启用或关闭 Windows 功能&lt;/code&gt;  并点击打开，会弹出一个窗口.&lt;/li&gt;
&lt;li&gt;在弹出窗口里面勾选  &lt;code&gt;Hyper-V&lt;/code&gt; 、 &lt;code&gt;Windows 虚拟机监控程序平台&lt;/code&gt; 、 &lt;code&gt;适用于 Linux 的 Windows 子系统&lt;/code&gt; 、 &lt;code&gt;虚拟机平台&lt;/code&gt;  这几项，然后点击确定。系统会自动查找更新并安装.&lt;/li&gt;
&lt;li&gt;等待重启过后就可以进行下一步了.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;安装本体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装本体&#34;&gt;#&lt;/a&gt; 安装本体&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;首先复制上面那个链接.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://store.rg-adguard.net/&#34; title=&#34;安装包抓包&#34;&gt;安装包抓包&lt;/a&gt;，点开这个网址，将第一步复制的链接粘贴到搜索框，右边选择  &lt;code&gt;slow&lt;/code&gt;  然后点对勾.&lt;/li&gt;
&lt;li&gt;找到最下面名为  &lt;code&gt;MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle&lt;/code&gt;  的一项，注意大小为  &lt;code&gt;1.21GB&lt;/code&gt;  , 直接点击进行一个下载.&lt;/li&gt;
&lt;li&gt;找到你下载的文件，然后右键  &lt;code&gt;开始按钮&lt;/code&gt;  选择  &lt;code&gt;Windows 终端 (管理员)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;然后会打开 Powershell 窗口，在里面输入指令&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;add-appxpackage &#34;你下载文件的完整路径&#34; 
# example
add-appxpackage &#34;D:\download\MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;等他跑完以后就会在开始菜单里出现  &lt;code&gt;Windows Subsystem for Android™&lt;/code&gt;  点击打开是下面这个界面就说明安装成功了.&lt;br&gt;
&lt;img src=&#34;/img/wsa/20220920220234.png&#34; alt=&#34;&#34;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;安装apk&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装apk&#34;&gt;#&lt;/a&gt; 安装 apk&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;点击文件后面的按钮会自动启动 WSA, 等打开后下面的 ip 地址会刷新。此时我们将开发人员模式打开.&lt;/li&gt;
&lt;li&gt;安装 ADB, 下载 &lt;a href=&#34;https://nas.axro.top/index.php/s/frYxCHg7FfabNEY&#34; title=&#34;这个文件&#34;&gt;这个文件&lt;/a&gt; 然后解压到任意目录，然后打开解压出来的文件夹，名称为  &lt;code&gt;platform-tools&lt;/code&gt; .&lt;/li&gt;
&lt;li&gt;按住 &lt;code&gt;Shift&lt;/code&gt;  键右击文件夹的空白处，选择 &lt;code&gt;显示更多选项&lt;/code&gt;  - &lt;code&gt;在此处打开 Powershell 窗口(s)&lt;/code&gt; , 然后在打开的窗口内依次输入以下指令:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;adb connect 127.0.0.1:58526 #这个 127.0.0.1:58526 为你的开发人员选项那一栏里显示的地址.
# 第一次可能会失败, 再输入一次就可以了.
adb install -r xxx.apk
# 这个指令为安装 apk, 将 xxx 替换为你要安装的 apk 文件名称.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;显示安装完成就会出现在你的开始菜单里，然后直接点击进行一个打开.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;qa&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#qa&#34;&gt;#&lt;/a&gt; Q&amp;amp;A&lt;/h1&gt;
</content>
        <category term="Android" />
        <category term="Hyper-V" />
        <category term="WSA" />
        <updated>2022-08-28T12:59:44.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/124600/</id>
        <title>【VMware】解决新版本的VMware虚拟机无法正常在旧版本的Windows上安装VMware Tools</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/124600/"/>
        <content type="html">&lt;h1 id=&#34;引言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#引言&#34;&gt;#&lt;/a&gt; 引言&lt;/h1&gt;
&lt;p&gt;因为学习需要，要求安装 &lt;code&gt;Windows server 2008 R2&lt;/code&gt; 。安装时一切正常，但是到了安装 &lt;code&gt;VMware Tools&lt;/code&gt;  时，弹出了下列提示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/img/vmwarebug/20220920220101.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;其后&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其后&#34;&gt;#&lt;/a&gt; 其后&lt;/h1&gt;
&lt;p&gt;我尝试百度搜索了解决办法，导致这种情况的大概解释为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;原来，微软更新了驱动程序的签名算法，从 2019 年初开始，逐步弃用 SHA-1，改为 SHA-2。个人推测新版的 VMCI 驱动用的是 SHA-2 签名，而 &lt;code&gt;win7&lt;/code&gt;  不支持 SHA-2 签名，所以出现了这个问题。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么怎么办呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以从 &lt;code&gt;Microsoft Update Catalog&lt;/code&gt;  下载 &lt;code&gt;KB4474419&lt;/code&gt;  和  &lt;code&gt;KB4490628&lt;/code&gt;  这两个补丁，然后安装到 &lt;code&gt;win7&lt;/code&gt;  虚拟机中。在没有成功安装 &lt;code&gt;VMware Tools&lt;/code&gt;  的情况下，传文件不太方便，可以用虚拟机里浏览器访问下载页面，然后直接在虚拟机里下载安装。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可是在 &lt;code&gt;winserver&lt;/code&gt;  虚拟机里很难进行操作更别说老旧的 IE 操作更不方便，而且 &lt;code&gt;windows server&lt;/code&gt;  的网络管理大家也都知道，会拦截所有地址。所以直到最后我也没法访问到微软的补丁界面。&lt;/p&gt;
&lt;h1 id=&#34;解决方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方法&#34;&gt;#&lt;/a&gt; 解决方法&lt;/h1&gt;
&lt;p&gt;我直接搜索了 &lt;code&gt;VMware Tools&lt;/code&gt; ，到其官网上找到了旧版本的 &lt;code&gt;Tools&lt;/code&gt;  镜像文件，随后直接对其进行一个挂载，这时直接弹出了自动运行窗口，进行一顿下一步下一步之后，成功将其安装到了虚拟机内。&lt;/p&gt;
&lt;h1 id=&#34;旧版本下载地址&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#旧版本下载地址&#34;&gt;#&lt;/a&gt; 旧版本下载地址&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://packages.vmware.com/tools/releases/10.3.5/windows/&#34; title=&#34;点我去官网下载&#34;&gt;点我去官网下载&lt;/a&gt;&lt;br&gt;
打开以后下载大小为 &lt;code&gt;114M&lt;/code&gt;  的映像文件，然后手动挂载到虚拟机上，便会自动运行。&lt;/p&gt;
&lt;p&gt;转载需注明出处！&lt;/p&gt;
</content>
        <category term="vmware" />
        <category term="bug" />
        <updated>2022-08-25T04:46:00.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/205645/</id>
        <title>使用树莓派4B+Docker Openwrt实现旁路由</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/205645/"/>
        <content type="html">&lt;h1 id=&#34;前言&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;普通路由器往往受限于硬体性能而缺乏很多功能。但是其拥有多网口和无线功能的支持相对较强。为了能实现更多实用功能并且利用上已经吃灰了很久的树莓派，打算用树莓派来当作旁路由.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;硬体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#硬体&#34;&gt;#&lt;/a&gt; 硬体&lt;/h1&gt;
&lt;h2 id=&#34;路由&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#路由&#34;&gt;#&lt;/a&gt; 路由&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;我使用的是小米路由 3G (下面称为 &lt;code&gt;R3G&lt;/code&gt; ). 当时购买的是小米路由 4 版本，但是其缺乏很多功能。就比如说非常实用的 usb 接口。有了 usb 接口以后就可以愉快刷机了。所以我收到货就直接退货换了 R3G…&lt;/li&gt;
&lt;li&gt;R3G 优点是有一个 usb3.0 的接口，所以可以直接拿它来挂载移动硬盘也是没问题的。还有 256M 的闪存。缺点是只有两个 RJ45LAN 口，一个 RJ45WAN 口足够家用。所以后来我又白嫖了我哥在外地买的一台 TPlink 五口交换机解决了网口不够的问题…&lt;/li&gt;
&lt;li&gt;如果你和我一样拥有 R3G. 我建议刷写不死鸟 breed 搭配&lt;a href=&#34;https://opt.cn2qq.com/padavan/&#34; title=&#34;hiboyhiboyhiboy&#34;&gt; hiboyhiboyhiboy&lt;/a&gt; 的固件，来实现更多功能…&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;树莓派&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#树莓派&#34;&gt;#&lt;/a&gt; 树莓派&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;树莓派 4B 我购买的是 4G 内存版本。采用 5V3A,Type-C 供电接口，你甚至可以用一个充电宝和一根 Type-C 线来给树莓派供电。两个 MicroHDMI 接口支持 4K 视频输出。一个极为先进的 3.5mm 音频接口。四个 Type-A USB 接口，其中分为两个 usb2.0 协议，两个 USB3.0 协议。一个千兆 RJ45 网口。另外机器还自带 wifi 模块，就是别指望这个 wifi 信号有多好了…&lt;/li&gt;
&lt;li&gt;我在购买时还一并购买了一张 32G 闪迪的 SD 卡，以及适用于 4B 的九层亚克力外壳。有一说一，这个外壳属实好看…&lt;/li&gt;
&lt;li&gt;不过如果拿它刷 openwrt 只来当作路由器实在大材小用。所以我采用 OPENFANS 和&lt;a href=&#34;http://www.pifan.org.cn/&#34; title=&#34;树莓派爱好者基地&#34;&gt;树莓派爱好者基地&lt;/a&gt;联合编译的&lt;a href=&#34;https://github.com/openfans-community-offical/Debian-Pi-Aarch64&#34; title=&#34;Debian-Pi-Aarch64&#34;&gt; Debian-Pi-Aarch64&lt;/a&gt; 来使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;软体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#软体&#34;&gt;#&lt;/a&gt; 软体&lt;/h1&gt;
&lt;h2 id=&#34;准备&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#准备&#34;&gt;#&lt;/a&gt; 准备&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;从上方给出的链接下载&lt;a href=&#34;https://github.com/openfans-community-offical/Debian-Pi-Aarch64&#34; title=&#34;Debian-Pi-Aarch64&#34;&gt; Debian-Pi-Aarch64&lt;/a&gt;, 我这里使用的是没有图形界面的增强版，即 &lt;code&gt;2021-06-11-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release.img.xz&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;百度搜索 Rufus, 下载到本地&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;安装-debian-pi-aarch64&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-debian-pi-aarch64&#34;&gt;#&lt;/a&gt; 安装 Debian-Pi-Aarch64&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;将 SD 卡接入读卡器连接电脑。注意提前备份 SD 卡的数据，接下来的操作会清除 SD 卡内的全部数据.&lt;/li&gt;
&lt;li&gt;打开 Rufus 软体，在 &lt;code&gt;设备&lt;/code&gt; 一栏内选择你的 SD 卡，在 &lt;code&gt;引导类型选择&lt;/code&gt; 栏里面单击后面的 &lt;code&gt;选择&lt;/code&gt; 按钮，选择你下载的 xz 文件&lt;/li&gt;
&lt;li&gt;单击下面的 &lt;code&gt;开始&lt;/code&gt; 按钮即可开始刷写。大概三四分钟后即可刷写成功。请耐心等待…&lt;/li&gt;
&lt;li&gt;刷写完成后在任务栏上将 SD 卡弹出，即可拔下读卡器。将 SD 卡插入树莓派里面即可.&lt;/li&gt;
&lt;li&gt;将树莓派的 LAN 口与路由器的 LAN 口连接，为树莓派接入电源。此时树莓派会自行重启三次左右，以完成基本配置。此时可以喝杯咖啡等待三分钟左右.&lt;/li&gt;
&lt;li&gt;电脑登入路由器控制页面，查找树莓派的 ip, 我这里查到的是 &lt;code&gt;192.168.0.90&lt;/code&gt; , 接下来的教程将以这个地址为准…&lt;/li&gt;
&lt;li&gt;如果您使用的是 Win10 系统，那么可以直接按下 &lt;code&gt;Windows徽标键&lt;/code&gt;  + &lt;code&gt;R&lt;/code&gt; , 输入 &lt;code&gt;CMD&lt;/code&gt;  指令单击回车来打开 &lt;code&gt;CMD&lt;/code&gt; , 使用 &lt;code&gt;SSH&lt;/code&gt;  的方式连入树莓派。当然你也可以使用其他第三方软件来实现.&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;ssh -p 22 pi@192.168.0.90&lt;/code&gt;  指令来接入树莓派，如果没有出错的话接下来会弹出提示，输入 &lt;code&gt;yes&lt;/code&gt;  并按下回车即可。当你看见 password 时，直接输入默认密码 &lt;code&gt;raspberry&lt;/code&gt; , 按下回车即可连入树莓派.&lt;/li&gt;
&lt;li&gt;更新一下就可以正常使用了&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;配置-debian-pi-aarch64&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置-debian-pi-aarch64&#34;&gt;#&lt;/a&gt; 配置 Debian-Pi-Aarch64&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;如果自己会配置那么这步可以跳过了&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以参考&lt;a href=&#34;https://gitee.com/openfans-community/Debian-Pi-Aarch64#3%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E&#34; title=&#34;这里&#34;&gt;这里&lt;/a&gt;来配置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;切换账户&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#切换账户&#34;&gt;#&lt;/a&gt; 切换账户&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;su&lt;/code&gt;  或者 &lt;code&gt;sudo -i&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;更改账户的密码&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#更改账户的密码&#34;&gt;#&lt;/a&gt; 更改账户的密码&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 使用下面指令来更改pi用户的密码
// 重复输入两次即可
sudo passwd pi

// 使用这个指令来更改root账户的密码
sudo passwd root&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;挂载smb硬盘&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#挂载smb硬盘&#34;&gt;#&lt;/a&gt; 挂载 smb 硬盘&lt;/h3&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cd /
mkdir db
mount -o username=xxx,password=xxx,dir_mode=0777,file_mode=0777 //192.168.0.15/database /db&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装-openwrt&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-openwrt&#34;&gt;#&lt;/a&gt; 安装 Openwrt&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;在安装之前首先开启 docker 服务并设置开机自动启动&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;启用和运行 Docker 服务&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;// 开机自动启动Docker服务
systemctl enable docker.service

// 启动Docker服务
systemctl start docker.service

######

// 停止Docker服务
systemctl stop docker.service

// 禁止Docker服务开机启动
systemctl disable docker.service&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;打开网卡混杂模式&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ip link set eth0 promisc on&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;创建网络&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;docker network create -d macvlan --subnet=192.168.0.0/24 --gateway=192.168.0.1 -o parent=eth0 macnet &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;使用 &lt;code&gt;sudo ifconfig&lt;/code&gt;  命令查看树莓派 &lt;code&gt;eth0&lt;/code&gt;  网卡的参数来更改&lt;br&gt;
 &lt;code&gt;--subnet&lt;/code&gt;  参数改为树莓派所处网段&lt;br&gt;
 &lt;code&gt;--gateway&lt;/code&gt;  参数改为树莓派所处网段的网关&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;使用 &lt;code&gt;docker network ls&lt;/code&gt;  查看创建好的网络&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;拉取 Openwrt 镜像&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;docker pull registry.cn-shanghai.aliyuncs.com/suling/openwrt:latest &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;执行 &lt;code&gt;docker images&lt;/code&gt;  命令查看现存镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;创建并启动容器&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;docker run --restart always --name openwrt -d --network macnet --privileged registry.cn-shanghai.aliyuncs.com/suling/openwrt:latest /sbin/init &lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;--restart always&lt;/code&gt;  参数表示容器退出时始终重启，使服务尽量保持始终可用；&lt;br&gt;
 &lt;code&gt;--name openwrt&lt;/code&gt;  参数定义了容器的名称；&lt;br&gt;
 &lt;code&gt;-d&lt;/code&gt;  参数定义使容器运行在 &lt;code&gt;Daemon&lt;/code&gt;  模式；&lt;br&gt;
 &lt;code&gt;--network macnet&lt;/code&gt;  参数定义将容器加入 &lt;code&gt;maxnet&lt;/code&gt;  网络；&lt;br&gt;
 &lt;code&gt;--privileged&lt;/code&gt;  参数定义容器运行在特权模式下；&lt;br&gt;
 &lt;code&gt;registry.cn-shanghai.aliyuncs.com/suling/openwrt:latest&lt;/code&gt;  为 Docker 镜像名，因容器托管在阿里云 Docker 镜像仓库内，所以在镜像名中含有阿里云仓库信息；&lt;br&gt;
 &lt;code&gt;/sbin/init&lt;/code&gt;  定义容器启动后执行的命令。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;可以使用 &lt;code&gt;docker ps -a&lt;/code&gt;  命令查看当前运行的容器&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;若容器运行信息 &lt;code&gt;STATUS&lt;/code&gt;  列为 &lt;code&gt;UP&lt;/code&gt;  状态，则说明容器运行正常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;进入容器并修改相关参数&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;docker exec -it openwrt bash&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;编辑 &lt;code&gt;OpenWrt&lt;/code&gt;  的网络配置文件：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;nano /etc/config/network&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;更改 LAN 口设置&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;config interface &#39;lan&#39;
        option type &#39;bridge&#39;
        option ifname &#39;eth0&#39;
        option proto &#39;static&#39;
        option ipaddr &#39;192.168.0.2&#39;
        option netmask &#39;255.255.255.0&#39;
        option ip6assign &#39;60&#39;
        option gateway &#39;192.168.0.1&#39;
        option broadcast &#39;192.168.0.255&#39;
        option dns &#39;192.168.0.1&#39;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;option ipaddr&lt;/code&gt;  为 OpenWrt 的 IP 地址，可以根据自己喜好修改，我这里定义为了 &lt;code&gt;192.168.0.2&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;重启网络&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;/etc/init.d/network restart&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;6&#34;&gt;
&lt;li&gt;进入控制面板&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;打开电脑的浏览器，使用自己定义的地址进入。我这里是 &lt;code&gt;192.168.0.2&lt;/code&gt; &lt;br&gt;
 用户名: &lt;code&gt;root&lt;/code&gt; &lt;br&gt;
 密码: &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;关闭 DHCP 服务&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;在 “网络 - 接口 - Lan - 修改” 界面中，勾选下方的 &#34;忽略此接口 (不在此接口提供 DHCP 服务)&#34;, 并 &#34;保存 &amp;amp; 应用&#34;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;修复宿主机网络&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#修复宿主机网络&#34;&gt;#&lt;/a&gt; 修复宿主机网络&lt;/h2&gt;
&lt;p&gt;OpenWrt 容器运行后，宿主机内可能无法正常连接外部网络，需要修改宿主机的 &lt;code&gt;/etc/network/interfaces&lt;/code&gt;  文件以修复：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;备份并编辑文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cp /etc/network/interfaces /etc/network/interfaces.bak # 备份文件
nano /etc/network/interfaces # 编辑文件&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;向文件末尾添加&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;auto eth0
iface eth0 inet manual

auto macvlan
iface macvlan inet static
  address 192.168.0.90
  netmask 255.255.255.0
  gateway 192.168.0.1
  dns-nameservers 192.168.0.1
  pre-up ip link add macvlan link eth0 type macvlan mode bridge
  post-down ip link del macvlan link eth0 type macvlan mode bridge&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;修改后重启树莓派，之后树莓派的局域网 IP 地址将会固定为 &lt;code&gt;/etc/network/interfaces&lt;/code&gt;  文件中 &lt;code&gt;address&lt;/code&gt;  参数中的地址.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;鸣谢摘抄&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#鸣谢摘抄&#34;&gt;#&lt;/a&gt; 鸣谢 (摘抄)&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://mlapp.cn/376.html&#34; title=&#34;在Docker 中运行 OpenWrt 旁路网关&#34;&gt;在 Docker 中运行 OpenWrt 旁路网关&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="树莓派" />
        <category term="docker" />
        <category term="openwrt" />
        <category term="router" />
        <updated>2022-04-26T12:56:45.000Z</updated>
    </entry>
    <entry>
        <id>http://maxshiroi.top/ug/133537/</id>
        <title>使用 Hexo 程序部署博客到githubpage上</title>
        <link rel="alternate" href="http://maxshiroi.top/ug/133537/"/>
        <content type="html">&lt;h1 id=&#34;环境&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#环境&#34;&gt;#&lt;/a&gt; 环境&lt;/h1&gt;
&lt;p&gt;Hexo 程序使用 node.js 程序编写，因此需要现在环境机上部署 node.js，git 只用来推送。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;什么是 Node.js&lt;/strong&gt;：一个运行 javascript (JS) 的环境。Hexo 是一个 javascript (JS) 语言的程序。一般 JS 运行在浏览器中，但是也有一种非浏览器环境也可以运行 JS。这个环境是 Node.js&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;什么是 Git&lt;/strong&gt;：一个版本控制软件。Hexo 博客源码由纯文本构成，管理纯文本项目的最好办法之一就是使用 Git。还记得 word 里面的历史记录和版本回退功能么？简单的来说，Git 就提供了类似功能，只不过更强大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;本文章使用 fedora 系 linux 操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;安装-git&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-git&#34;&gt;#&lt;/a&gt; 安装 git&lt;/h2&gt;
&lt;p&gt;使用 yum 指令进行安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;su
yum install git-core # 坏习惯，请减少使用root用户&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看是否安装成功：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[root@localhost ~]# git --version
git version 1.8.3.1&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装-nodejs&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装-nodejs&#34;&gt;#&lt;/a&gt; 安装 node.js&lt;/h2&gt;
&lt;p&gt;直接 yum 一把梭&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install nodejs&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后查看版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[root@localhost ~]# node -v
v16.14.2&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;顺便看看 npm 版本：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[root@localhost ~]# npm -v
8.5.0&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;配置本体&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置本体&#34;&gt;#&lt;/a&gt; 配置本体&lt;/h1&gt;
&lt;h2 id=&#34;hexo&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#hexo&#34;&gt;#&lt;/a&gt; hexo&lt;/h2&gt;
&lt;p&gt;如果你没有使用加速等工具的话，这里建议将 npm 源改到淘宝：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;npm config set registry http://registry.npm.taobao.org&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用 npm 指令安装：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install -g hexo-cli&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看看安装好了没：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[root@localhost ~]# hexo -v
hexo-cli: 4.3.0
os: linux 3.10.0-1160.31.1.el7.x86_64 CentOS Linux 7 (Core)
node: 16.14.2
...
ngtcp2: 0.1.0-DEV
nghttp3: 0.1.0-DEV&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装server&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装server&#34;&gt;#&lt;/a&gt; 安装 server&lt;/h2&gt;
&lt;p&gt;如果你想在本地预览博客的话，可以安装下。其实装不装都无所谓。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install hexo hexo-server&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装推送插件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安装推送插件&#34;&gt;#&lt;/a&gt; 安装推送插件&lt;/h2&gt;
&lt;p&gt;这个推送插件是后面要推送到 &lt;code&gt;github page&lt;/code&gt;  上要使用的插件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;npm install hexo-deployer-git --save&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;创建博客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#创建博客&#34;&gt;#&lt;/a&gt; 创建博客&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;hexo init [你的博客名字]
cd [你的博客名字]
npm install&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你已经备份过想要还原，则只需要做到这一步就已经可以了。但是如果想要推送还需要再看下面的配置 git 项。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;本地预览博客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本地预览博客&#34;&gt;#&lt;/a&gt; 本地预览博客&lt;/h1&gt;
&lt;p&gt;上面已经生成好了基本博客，可以使用 &lt;code&gt;ls&lt;/code&gt;  命令查看下是否正确生成了文件&lt;br&gt;
下面是 hexo 博客的基本结构。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;.
 ├── _config.yml # 网站配置信息
 ├── package.json # 应用程序信息
 ├── scaffolds # 模板文件夹
 ├── node_modules # 生成博客后编译出来的文件。主要看这个是否生成成功了。
 ├── source # 存放用户资源
 |   ├── _drafts
 |   └── _posts
 └── themes # 主题文件夹&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果确认没什么问题便可以进行生成步骤了。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;测试本地生成博客&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;# 生成一篇文章，注意要在blog的目录下。
hexo new &#34;文章名&#34;
# 生成静态网页
hexo g
# 打开本地服务器
hexo s&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;此时你可以打开  &lt;code&gt;[博客地址]:4000&lt;/code&gt;  来查看效果了。&lt;br&gt;
如果确认没问题，便可以继续操作。&lt;/p&gt;
&lt;h1 id=&#34;备份还原&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#备份还原&#34;&gt;#&lt;/a&gt; 备份还原&lt;/h1&gt;
&lt;p&gt;博客部署完成后或是以后工作中难免需要更换环境，这里也简单说一下备份还原的流程。&lt;/p&gt;
&lt;h2 id=&#34;本地备份还原&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#本地备份还原&#34;&gt;#&lt;/a&gt; 本地备份还原&lt;/h2&gt;
&lt;p&gt;本地备份还原是对主要文件自行压缩拷贝后导出，然后覆盖进行还原&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;需要备份的文件列表如下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;.
|-- .gitignore
|-- _config.yml
|-- package-lock.json
|-- package.json
|-- scaffolds
|-- source
`-- themes&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将这些文件考出来后则备份完成。&lt;/p&gt;
&lt;h2 id=&#34;可能会出现的问题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#可能会出现的问题&#34;&gt;#&lt;/a&gt; 可能会出现的问题&lt;/h2&gt;
&lt;p&gt;如果当你完成还原，进行 &lt;code&gt;hexo g&lt;/code&gt;  命令提示如下错误：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;root@LAPTOP-N4RDFRJ0:/mnt/d/Program/hexo/blog# npm install --save bulma-stylus
npm ERR! code FETCH_ERROR
npm ERR! errno FETCH_ERROR
npm ERR! invalid json response body at https://registry.npmjs.org/browserslist reason: Unexpected end of JSON input

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2022-08-23T09_22_43_977Z-debug.log&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行这条命令即可：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;npm cache clean --force&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;配置远端&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置远端&#34;&gt;#&lt;/a&gt; 配置远端&lt;/h1&gt;
&lt;p&gt;我将博客部署到了 github 上，所以你要先去 github.com 上注册一个账户。并创建一个仓库。&lt;/p&gt;
&lt;h2 id=&#34;初始化-git&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#初始化-git&#34;&gt;#&lt;/a&gt; 初始化 git&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;init git&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果提示 &lt;code&gt;Couldn&#39;t find an alternative telinit implementation to spawn.&lt;/code&gt;  不用管，直接下一步。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;配置-ssh&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置-ssh&#34;&gt;#&lt;/a&gt; 配置 ssh&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;配置登录信息&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &#34;你的git用户名&#34;
git config --global user.email &#34;你的git登录邮箱&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;生成 ssh keygen&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;ssh-keygen -t rsa -C &#34;你的git登录邮箱&#34;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;如果弹出了很多内容，直接进行一个回车跳过。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
... // 直接回车跳过&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;复制密钥&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;vi /root/.ssh/id_rsa.pub&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;将里面显示的所有内容复制。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;登录 github&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;头像&lt;/li&gt;
&lt;li&gt;Settings&lt;/li&gt;
&lt;li&gt;SSH and GPG keys&lt;/li&gt;
&lt;li&gt;New SSH key&lt;/li&gt;
&lt;li&gt;将复制的内容粘贴到 Keys 框里&lt;/li&gt;
&lt;li&gt;Add SSH key&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;测试链接是否成功&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;[root@localhost ~]# ssh -T git@github.com
Hi maxshiro! You&#39;ve successfully authenticated, but GitHub does not provide shell access.&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;配置推送&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#配置推送&#34;&gt;#&lt;/a&gt; 配置推送&lt;/h1&gt;
&lt;p&gt;配置完 git 之后便可以配置 hexo 博客的推送地址了，下面以我的为例。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首先 cd 到当前目录&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;cd blog&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;编辑配置文件&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;vi _config.yml&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;移动到 deploy 天机如下内容&lt;/li&gt;
&lt;/ol&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;deploy:
    type: git
    reop: git@github.com:maxshiro/maxshiro.github.io.git #这个地址可以到你的repo那里获得。
    branch: main #这个branch就是仓库的默认目录了。&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;推送博客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#推送博客&#34;&gt;#&lt;/a&gt; 推送博客&lt;/h1&gt;
&lt;p&gt;已经测试并生成过博客了，所以可以直接推送。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-bash&#34; data-language=&#34;bash&#34;&gt;&lt;code class=&#34;language-bash&#34;&gt;# 清理之前生成的文件
hexo clean
# 生成静态网页
hexo g
# 推送到github repo
hexo d&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;结语&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#结语&#34;&gt;#&lt;/a&gt; 结语&lt;/h1&gt;
&lt;p&gt;此时你已经完成了 hexo 博客的基本配置。&lt;/p&gt;
</content>
        <category term="hexo" />
        <category term="guide" />
        <updated>2022-04-17T05:35:37.000Z</updated>
    </entry>
</feed>

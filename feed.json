{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/ug/200128/",
            "url": "http://maxshiroi.top/ug/200128/",
            "title": "Hello World",
            "date_published": "2023-04-21T12:01:28.473Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></tbody></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></tbody></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></tbody></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": [
                "helloworld"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/100353/",
            "url": "http://maxshiroi.top/ug/100353/",
            "title": "dvwa安装指引",
            "date_published": "2023-03-07T02:03:53.000Z",
            "content_html": "<h1 id=\"启动nginx\"><a class=\"anchor\" href=\"#启动nginx\">#</a> 启动 nginx</h1>\n<h2 id=\"service-nginx-startcd-varwwwhtmlvim-hellohtml\"><a class=\"anchor\" href=\"#service-nginx-startcd-varwwwhtmlvim-hellohtml\">#</a> service nginx start<br>\ncd /var/www/html<br>\nvim hello.html</h2>\n<p>Helloworld!<br>\n// 访问虚拟机地址。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@fedora axro]<span class=\"comment\"># cd /usr/share/nginx/html/</span></span><br><span class=\"line\">[root@fedora html]<span class=\"comment\"># git clone https://github.com/digininja/DVWA.git</span></span><br><span class=\"line\">[root@fedora html]<span class=\"comment\"># cd DVWA/config</span></span><br><span class=\"line\">[root@fedora config]<span class=\"comment\"># cp config.inc.php.dist config.inc.php</span></span><br><span class=\"line\">[root@fedora config]<span class=\"comment\"># vi config.inc.php</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">create database DVWA;</span><br></pre></td></tr></tbody></table></figure>\n<p>mysql&gt; create database dvwa;<br>\nQuery OK, 1 row affected (0.00 sec)</p>\n<p>mysql&gt; create user dvwa@localhost identified by 'p@ssw0rd';<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; grant all on dvwa.* to dvwa@localhost;<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; flush privileges;<br>\nQuery OK, 0 rows affected (0.00 sec)</p>\n",
            "tags": [
                "linux",
                "mysql",
                "kali",
                "dvwa",
                "fedora"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/140206/",
            "url": "http://maxshiroi.top/ug/140206/",
            "title": "Arch安装使用指导",
            "date_published": "2023-02-24T06:02:06.000Z",
            "content_html": "<h1 id=\"前期准备\"><a class=\"anchor\" href=\"#前期准备\">#</a> 前期准备</h1>\n<p>在创建好虚拟机后，需要打开虚拟机设置，将  <code>firmware type</code>  更改为  <code>efi</code> ，以便后续操作。</p>\n<h1 id=\"检查网络设置和-ssh-连接\"><a class=\"anchor\" href=\"#检查网络设置和-ssh-连接\">#</a> 检查网络设置和 SSH 连接</h1>\n<p>以下是检查网络设置和 SSH 连接的操作步骤：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查系统启动方式</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> /sys/firmware/efi/efivars</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查网络是否通畅</span></span><br><span class=\"line\">ping baidu.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更改密码并远程连接</span></span><br><span class=\"line\">passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看 IP 地址</span></span><br><span class=\"line\">ip addr</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"使用ssh连接\"><a class=\"anchor\" href=\"#使用ssh连接\">#</a> 使用 ssh 连接</h1>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -p <span class=\"number\">22</span> root@<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">204</span>.<span class=\"number\">130</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"分区挂载\"><a class=\"anchor\" href=\"#分区挂载\">#</a> 分区挂载</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看已存在的硬盘</span></span><br><span class=\"line\">lsblk</span><br><span class=\"line\"><span class=\"comment\"># 使用cfdisk创建分区</span></span><br><span class=\"line\">cfdisk /dev/nvme0n1</span><br><span class=\"line\"><span class=\"comment\"># 创建如下三个</span></span><br><span class=\"line\">Device           Start      End  Sectors  Size Type</span><br><span class=\"line\">/dev/nvme0n1p1    2048  1026047  1024000  500M EFI System</span><br><span class=\"line\">/dev/nvme0n1p2 1026048  9414655  8388608    4G Linux swap</span><br><span class=\"line\">/dev/nvme0n1p3 9414656 83884031 74469376 35.5G Linux filesystem</span><br><span class=\"line\"><span class=\"comment\"># 分别格式化</span></span><br><span class=\"line\"><span class=\"comment\"># 格式化EFI启动分区为fat32格式</span></span><br><span class=\"line\">mkfs.fat -F32 /dev/nvme0n1p1</span><br><span class=\"line\"><span class=\"comment\"># 格式化根目录为xfs文件系统</span></span><br><span class=\"line\">mkfs.xfs -f /dev/nvme0n1p3</span><br><span class=\"line\"><span class=\"comment\"># 格式化swap文件系统</span></span><br><span class=\"line\">mkswap /dev/nvme0n1p2</span><br><span class=\"line\">swapon /dev/nvme0n1p2</span><br><span class=\"line\"><span class=\"comment\"># 挂载</span></span><br><span class=\"line\"><span class=\"comment\"># 挂载根分区到mnt</span></span><br><span class=\"line\">mount /dev/nvme0n1p3 /mnt</span><br><span class=\"line\"><span class=\"comment\"># 新建EFI分区并挂载</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /mnt/boot/EFI</span><br><span class=\"line\">mount /dev/nvme0n1p1 /mnt/boot/EFI</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用下面命令下载并安装系统</span></span><br><span class=\"line\">pacstrap -i /mnt base base-devel vim linux linux-firmware</span><br><span class=\"line\"><span class=\"comment\"># 生成 fstab 文件并检查</span></span><br><span class=\"line\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class=\"line\"><span class=\"built_in\">cat</span> /mnt/etc/fstab</span><br><span class=\"line\"><span class=\"comment\"># 切换系统目录</span></span><br><span class=\"line\">arch-chroot /mnt</span><br><span class=\"line\"><span class=\"comment\"># 更改时区，设置UTC</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class=\"line\">hwclock --systohc --utc</span><br><span class=\"line\"><span class=\"comment\"># 更改local并生成locale信息</span></span><br><span class=\"line\">vim /etc/locale.gen</span><br><span class=\"line\"><span class=\"comment\"># 找到合适的地区去掉前面的#</span></span><br><span class=\"line\">locale-gen</span><br><span class=\"line\"><span class=\"comment\"># 将语言信息写入locale.conf</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> LANG=en_GB.UTF-8 &gt; /etc/locale.conf</span><br><span class=\"line\"><span class=\"comment\"># 配置网络</span></span><br><span class=\"line\">vim /etc/hostname</span><br><span class=\"line\">----</span><br><span class=\"line\">archlinux</span><br><span class=\"line\"><span class=\"comment\"># 直接写入自己的主机名</span></span><br><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\">----</span><br><span class=\"line\">127.0.0.1   localhost</span><br><span class=\"line\">::1         localhost</span><br><span class=\"line\">127.0.1.1   archlinux.localdomain archlinux</span><br><span class=\"line\"><span class=\"comment\"># archlinux就是自己的主机名</span></span><br><span class=\"line\"><span class=\"comment\"># 安装相关包</span></span><br><span class=\"line\">pacman -S grub efibootmgr efivar networkmanager intel-ucode</span><br><span class=\"line\"><span class=\"comment\"># 配置grub</span></span><br><span class=\"line\">grub-install /dev/sda</span><br><span class=\"line\">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class=\"line\"><span class=\"comment\"># 激活并启用NetworkManager</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> NetworkManager</span><br><span class=\"line\"><span class=\"comment\"># 更改密码</span></span><br><span class=\"line\">passwd</span><br><span class=\"line\"><span class=\"comment\"># 卸载挂载，重启</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\">umount /mnt/boot/EFI</span><br><span class=\"line\">umount /mnt</span><br><span class=\"line\">reboot </span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装后\"><a class=\"anchor\" href=\"#安装后\">#</a> 安装后</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置网络，再次联网</span></span><br><span class=\"line\"><span class=\"comment\"># 输入nmtui 选择 “Activate a connection” 回车进入，选择你需要的网络，连接后back返回即可</span></span><br><span class=\"line\"><span class=\"comment\"># 安装 openssh</span></span><br><span class=\"line\">pacman -S openssh</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> sshd</span><br><span class=\"line\">systemctl start sshd</span><br><span class=\"line\">systemctl status sshd</span><br><span class=\"line\"><span class=\"comment\"># 查看ip</span></span><br><span class=\"line\">ip -brief address / addr</span><br><span class=\"line\"><span class=\"comment\"># 修改ssh配置允许root连接</span></span><br><span class=\"line\">vim /etc/ssh/sshd_config</span><br><span class=\"line\">----</span><br><span class=\"line\"><span class=\"comment\"># 将下列的语句值改为yes</span></span><br><span class=\"line\">PermitRootLogin <span class=\"built_in\">yes</span></span><br><span class=\"line\"><span class=\"comment\"># 重启ssh</span></span><br><span class=\"line\">systemctl restart sshd</span><br><span class=\"line\"><span class=\"comment\"># 使用ssh连接</span></span><br><span class=\"line\">ssh -o StrictHostKeyChecking=no root@192.168.204.130</span><br><span class=\"line\"><span class=\"comment\"># 更新</span></span><br><span class=\"line\">pacman -Syu</span><br><span class=\"line\">useradd axro</span><br><span class=\"line\">vi /etc/passwd</span><br><span class=\"line\">---</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"优化终端\"><a class=\"anchor\" href=\"#优化终端\">#</a> 优化终端</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装zsh，高亮，补全</span></span><br><span class=\"line\">sudo pacman -S zsh</span><br><span class=\"line\">sudo pacman -S zsh-autosuggestions</span><br><span class=\"line\">sudo pacman -S zsh-syntax-highlighting</span><br><span class=\"line\"><span class=\"comment\"># 安装git</span></span><br><span class=\"line\">sudo pacman -S git</span><br><span class=\"line\"><span class=\"comment\"># 使用以下命令配置zsh</span></span><br><span class=\"line\"><span class=\"built_in\">autoload</span> -Uz zsh-newuser-install</span><br><span class=\"line\">zsh-newuser-install -f</span><br><span class=\"line\"><span class=\"comment\"># 查看是否生成.zshrc</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -a</span><br><span class=\"line\"><span class=\"comment\"># 安装oh my zsh</span></span><br><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"subst\">$(curl -fsSL https:#raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>\"</span></span><br><span class=\"line\"><span class=\"comment\"># 在.zshrc中加入以下插件</span></span><br><span class=\"line\">vim .zshrc</span><br><span class=\"line\">---</span><br><span class=\"line\">ZSH_THEME=<span class=\"string\">\"dieter\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> vi=vim</span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -l'</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br><span class=\"line\">:wq</span><br><span class=\"line\"><span class=\"comment\"># 刷新终端</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> .zshrc</span><br><span class=\"line\"><span class=\"comment\"># 安装neofetch</span></span><br><span class=\"line\">sudo pacman -S neofetch</span><br><span class=\"line\">---</span><br><span class=\"line\">11:18:08 axro@axro-arch ~ neofetch</span><br><span class=\"line\">                   -`                    axro@axro-arch</span><br><span class=\"line\">                  .o+`                   --------------</span><br><span class=\"line\">                 `ooo/                   OS: Arch Linux x86_64</span><br><span class=\"line\">                `+oooo:                  Host: VMware20,1 None</span><br><span class=\"line\">               `+oooooo:                 Kernel: 6.2.2-arch1-1</span><br><span class=\"line\">               -+oooooo+:                Uptime: 20 mins</span><br><span class=\"line\">             `/:-:++oooo+:               Packages: 182 (pacman)</span><br><span class=\"line\">            `/++++/+++++++:              Shell: zsh 5.9</span><br><span class=\"line\">           `/++++++++++++++:             Resolution: 1280x800</span><br><span class=\"line\">          `/+++ooooooooooooo/`           Terminal: /dev/pts/0</span><br><span class=\"line\">         ./ooosssso++osssssso+`          CPU: 11th Gen Intel i7-11800H (1) @ 2.304GHz</span><br><span class=\"line\">        .oossssso-````/ossssss+`         GPU: 00:0f.0 VMware SVGA II Adapter</span><br><span class=\"line\">       -osssssso.      :ssssssso.        Memory: 209MiB / 3883MiB</span><br><span class=\"line\">      :osssssss/        osssso+++.</span><br><span class=\"line\">     /ossssssss/        +ssssooo/-</span><br><span class=\"line\">   `/ossssso+/:-        -:/+osssso+-</span><br><span class=\"line\">  `+sso+:-`                 `.-/+oso:</span><br><span class=\"line\"> `++:.                           `-/+/</span><br><span class=\"line\"> .`                                 `/</span><br><span class=\"line\"></span><br><span class=\"line\">11:21:14 axro@axro-arch ~</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装桌面环境\"><a class=\"anchor\" href=\"#安装桌面环境\">#</a> 安装桌面环境</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装xorg-server，xorg-xinit</span></span><br><span class=\"line\">sudo pacman -S xorg-server xorg-xinit</span><br><span class=\"line\"><span class=\"comment\"># 安装显卡驱动</span></span><br><span class=\"line\">sudo pacman -S xf86-video-vesa <span class=\"comment\"># 这里使用的是vmware，请自行找适合自己机器的显卡驱动</span></span><br><span class=\"line\"><span class=\"comment\"># 安装plasma</span></span><br><span class=\"line\">sudo pacman -S pacman-meta konsole dolphin</span><br><span class=\"line\">sudo pacman -S kde-applications-meta sddm</span><br><span class=\"line\"><span class=\"comment\"># 启动kde plasma</span></span><br><span class=\"line\">sudo systemctl start sddm.service</span><br><span class=\"line\"><span class=\"comment\"># 安装字体，更改中文</span></span><br><span class=\"line\">sudo pacman -S noto-fonts-cjk wqy-microhei</span><br><span class=\"line\"><span class=\"comment\"># 安装火狐浏览器</span></span><br><span class=\"line\">sudo pacman -S firefox</span><br><span class=\"line\"><span class=\"comment\"># 使用如下命令打开和关闭网卡</span></span><br><span class=\"line\">ifconfig ens160 down/up</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"vmware安装vmwaretools-实现窗口分辨率自适应\"><a class=\"anchor\" href=\"#vmware安装vmwaretools-实现窗口分辨率自适应\">#</a> vmware 安装 vmwaretools 实现窗口分辨率自适应。</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">sudo pacman -Sy gtkmm gtkmm3 net-tools open-vm-tools xf86-video-vmware xf86-input-vmmouse</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> vmtoolsd.service</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> vmware-vmblock-fuse.service</span><br><span class=\"line\">sudo reboot</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"详细请参考\"><a class=\"anchor\" href=\"#详细请参考\">#</a> 详细请参考</h3>\n<p><a href=\"https://wiki.archlinuxcn.org/wiki/VMware/%E5%AE%89%E8%A3%85_Arch_Linux_%E4%B8%BA%E8%99%9A%E6%8B%9F%E6%9C%BA\">wiki.archlinuxcn.org</a><br>\n 这里不多赘述。</p>\n<h2 id=\"安装中文输入法\"><a class=\"anchor\" href=\"#安装中文输入法\">#</a> 安装中文输入法</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 安装fcitx5</span><br><span class=\"line\">sudo pacman -S fcitx5-im fcitx5-chinese-addons  fcitx5-rime fcitx5-configtool</span><br><span class=\"line\">// 编辑配置文件</span><br><span class=\"line\">vi /etc/environment</span><br><span class=\"line\">---</span><br><span class=\"line\">GTK_IM_MODULE=fcitx</span><br><span class=\"line\">QT_IM_MODULE=fcitx</span><br><span class=\"line\">XMODIFIERS=@im=fcitx</span><br><span class=\"line\">SDL_IM_MODULE=fcitx</span><br><span class=\"line\"></span><br><span class=\"line\">// 重启，gnome和kde会自动配置</span><br><span class=\"line\">reboot</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装yay工具并安装linuxqq\"><a class=\"anchor\" href=\"#安装yay工具并安装linuxqq\">#</a> 安装 yay 工具并安装 linuxqq</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://aur.archlinux.org/yay.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> yay</span><br><span class=\"line\">makepkg -si</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"编写rclocal\"><a class=\"anchor\" href=\"#编写rclocal\">#</a> 编写 rc.local</h2>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/lib/systemd/system/rc-local.service</span><br><span class=\"line\">---</span><br><span class=\"line\">#/usr/lib/systemd/system/rc-local.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=\"写下描述\" </span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">ExecStart=/etc/rc.local start #在这里你可以看到开机执行脚本的位置</span><br><span class=\"line\">TimeoutSec=0</span><br><span class=\"line\">StandardInput=tty</span><br><span class=\"line\">RemainAfterExit=yes</span><br><span class=\"line\">SysVStartPriority=99</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/rc.local</span><br><span class=\"line\">---</span><br><span class=\"line\">#/bin/bash</span><br><span class=\"line\">sudo pacman -Syu</span><br><span class=\"line\">exit 0</span><br><span class=\"line\"></span><br><span class=\"line\">chmod 777 /etc/rc.local</span><br><span class=\"line\">systemctl enable rc.local.service</span><br></pre></td></tr></tbody></table></figure>",
            "tags": [
                "linux",
                "arch",
                "pacman"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/174137/",
            "url": "http://maxshiroi.top/ug/174137/",
            "title": "vmwarewin7shrink",
            "date_published": "2023-01-14T09:41:37.000Z",
            "content_html": "<p>通常在我们创建虚拟机时往往并不清楚需要多少空间，等到后期才会发现分配了很多空间实际上用不到。这时候就要想办法缩小虚拟机所占用的空间了。<br>\n根据我这次缩小空间的经历，我十分不推荐使用快照功能。因为这会让你虚拟机当前处在快照模式，与原来的文件关系不大（就是处理起来更麻烦了。）。<br>\n如果你像我一样只是用 vmware 来存放如企鹅，钉钉，腾讯会议，微信这种垃圾的话，那么可以参照我的方法。</p>\n<h1 id=\"缩小空间占用\"><a class=\"anchor\" href=\"#缩小空间占用\">#</a> 缩小空间占用。</h1>\n<h2 id=\"0首先查看磁盘类型\"><a class=\"anchor\" href=\"#0首先查看磁盘类型\">#</a> 0. 首先查看磁盘类型</h2>\n<p>使用文本编辑器打开虚拟机根目录下的 xxx.vmdk 文件，查看 # Extent description 下面的内容第三块是否为 SPARSE 。不是则需要进行转换。如下图：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s001.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s002.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s003.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s004.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s005.vmdk\"</span><br><span class=\"line\">RW 4521984 SPARSE \"Windows 7 x64-cl1-s006.vmdk\"</span><br></pre></td></tr></tbody></table></figure>\n<p>如果你在创建虚拟机选择的是动态分配磁盘文件并拆分成多个的话这里就是 SPARSE。</p>\n<h2 id=\"1确保没有快照\"><a class=\"anchor\" href=\"#1确保没有快照\">#</a> 1. 确保没有快照</h2>\n<p>确保虚拟机内没有快照。虚拟机目录下只有一个 xxx.vmdk 以及从属的 s00x.vmdk。如果有快照没法处理，则可以执行克隆操作到其他盘进行处理。</p>\n<h2 id=\"2尽可能缩小虚拟机内部所占用的空间\"><a class=\"anchor\" href=\"#2尽可能缩小虚拟机内部所占用的空间\">#</a> 2. 尽可能缩小虚拟机内部所占用的空间</h2>\n<blockquote>\n<p>参考<a href=\"https://blog.csdn.net/CoutCodes/article/details/104975783\">【Win10 C 盘压缩卷问题解答】：无法将卷压缩到超出任何不可移动的文件所在点</a></p>\n</blockquote>\n<p>进入虚拟机，进行以下处理：</p>\n<ul>\n<li>关闭休眠功能 *</li>\n<li>关闭虚拟内存并删除虚拟内存文件 *</li>\n<li>虚拟机内进行空间整理，磁盘清理</li>\n<li>处理其他文件</li>\n</ul>\n<p>注意后面带星号的处理完成所有步骤后要重新打开 (建议)，不然可能会影响性能。</p>\n<p>此时你需要确定你缩小后的 c 盘空间大小，这也决定着后面动态磁盘缩小的操作。我确定缩小后的空间为 22GiB。</p>\n<h2 id=\"3-重启到pe系统使用diskgenius缩小c盘空间\"><a class=\"anchor\" href=\"#3-重启到pe系统使用diskgenius缩小c盘空间\">#</a> 3. 重启到 pe 系统使用 Diskgenius 缩小 c 盘空间。</h2>\n<h3 id=\"使用微pe制作iso文件\"><a class=\"anchor\" href=\"#使用微pe制作iso文件\">#</a> 使用微 pe 制作 iso 文件</h3>\n<ol>\n<li>打开</li>\n</ol>\n<h3 id=\"添加硬件cddvd设备使用创建的iso文件\"><a class=\"anchor\" href=\"#添加硬件cddvd设备使用创建的iso文件\">#</a> 添加硬件 CD/DVD 设备，使用创建的 iso 文件。</h3>\n<h3 id=\"vmware设置光驱启动\"><a class=\"anchor\" href=\"#vmware设置光驱启动\">#</a> <a href=\"https://blog.csdn.net/syf442/article/details/5067832\">VMWare 设置光驱启动</a></h3>\n<h2 id=\"4-减小vmware虚拟机虚拟磁盘大小\"><a class=\"anchor\" href=\"#4-减小vmware虚拟机虚拟磁盘大小\">#</a> 4. 减小 VMware 虚拟机虚拟磁盘大小</h2>\n<blockquote>\n<p>此处内容来自：<a href=\"https://blog.csdn.net/HayPinF/article/details/108252631\">减小 VMware 虚拟机虚拟磁盘大小</a></p>\n</blockquote>\n<p>在 VMware 里虚拟机的所有编号了的  <code>.*s001.*.vmdk</code>  片段虚拟磁盘文件是虚拟化的虚拟机最大空间（Maximum Size)，就比如我的 Win7 虚拟机的 Maximum Size 是 40GiB（1GiB=1024MiB，1GB=1000MB），虚拟机生成了  <code>.*s001~s011.vmdk</code>  共 11 个虚拟机磁盘文件 vmdk，该虚拟机的 \"Windows 7 x64-cl1.vmdk\" 中详实记录了这 11 个 vmdk 文件（从而进行各分片虚拟磁盘文件的按名索引）：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extent description</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s001.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s002.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s003.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s004.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s005.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s006.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s007.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s008.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s009.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s010.vmdk\"</span><br><span class=\"line\">RW 655360 SPARSE \"Windows 7 x64-cl1-s011.vmdk\"</span><br></pre></td></tr></tbody></table></figure>\n<p>vmdk 文件的 \"8323072\" 数字表示簇，2 簇 = 1KiB，则这 11 个 vmdk 文件对应了 ((10×8323072)/2/1024/1024)+(655360/2/1024/1024)=10×3.96875GiB+0.3125Gib=40GiB，刚好。</p>\n<p>我们所要做的就是通过改变这里的文件个数从而达到缩小 vmdk 磁盘大小的目的。<br>\n已知 40GiB 对应的簇大小为 10×8323072+655360=83886080。即一个 G 的簇大小为 2097152 (/2=1048576)。<br>\n我们确定一下自己压缩后的大小。就比如我要压缩到 22G，得出簇的总大小为 2097152×22=46137344，这个数可以拆为五个 8323072 加上一个 46137344-(8323072×5)=4521984。即 (8323072×5)+4521984=46137344。<br>\n因此上面的文件就可以改成下面这样：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extent description</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s001.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s002.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s003.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s004.vmdk\"</span><br><span class=\"line\">RW 8323072 SPARSE \"Windows 7 x64-cl1-s005.vmdk\"</span><br><span class=\"line\">RW 4521984 SPARSE \"Windows 7 x64-cl1-s006.vmdk\"</span><br></pre></td></tr></tbody></table></figure>\n<p>记得备份 \"Windows 7 x64-cl1.vmdk\"，处理完成保存即可。</p>\n<h2 id=\"5重新启动虚拟机\"><a class=\"anchor\" href=\"#5重新启动虚拟机\">#</a> 5. 重新启动虚拟机</h2>\n<p>此时你会发现虚拟机的磁盘大小已经变成 22G 了。教程结束。</p>\n",
            "tags": [
                "vmware",
                "win7",
                "capacity",
                "shrink"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/082913/",
            "url": "http://maxshiroi.top/ug/082913/",
            "title": "WSL2迁移以及空间回收。",
            "date_published": "2022-11-19T00:29:13.000Z",
            "content_html": "<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"../img/wsl2move/20221119083153.png\" fancybox=\"true\"></div></div>  \n<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>如果你按照正常方式在设置里移动 wsl 的话就会发现报错，本篇文章向您介绍如何正确迁移以及回收空间。</p>\n<h1 id=\"移动\"><a class=\"anchor\" href=\"#移动\">#</a> 移动</h1>\n<p>在 Windows 的 PowerShell 中输入:</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --<span class=\"built_in\">help</span></span><br></pre></td></tr></tbody></table></figure>\n<p>可以看到关于这个命令的使用帮助说明：</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法: wsl.exe [参数] [选项...] [命令行]</span><br><span class=\"line\"> </span><br><span class=\"line\">用于运行 Linux 二进制文件的参数:</span><br><span class=\"line\"> </span><br><span class=\"line\">    如果未提供命令行，wsl.exe 将启动默认的 shell。</span><br><span class=\"line\">    --exec, -e &lt;命令行&gt;</span><br><span class=\"line\">        执行指定的命令而不使用默认的 Linux shell。</span><br><span class=\"line\">    --</span><br><span class=\"line\">        按原样传递剩余的命令行。</span><br><span class=\"line\">选项:</span><br><span class=\"line\">    --distribution, -d &lt;分发版&gt;</span><br><span class=\"line\">        运行指定的分发。</span><br><span class=\"line\">    --user, -u &lt;用户名&gt;</span><br><span class=\"line\">        以指定用户身份运行。</span><br><span class=\"line\">用于管理适用于 Linux 的 Windows 子系统的参数:</span><br><span class=\"line\"> </span><br><span class=\"line\">    --export &lt;分发版&gt; &lt;文件名&gt;</span><br><span class=\"line\">        将分发导出到 tar 文件。</span><br><span class=\"line\">        对于标准输出，文件名可以是 -。</span><br><span class=\"line\">    --import &lt;分发版&gt; &lt;安装位置&gt; &lt;文件名&gt; [选项]</span><br><span class=\"line\">        将指定的 tar 文件作为新分发进行导入。</span><br><span class=\"line\">        对于标准输入，文件名可以是 -。</span><br><span class=\"line\">        选项:</span><br><span class=\"line\">            --version &lt;版本&gt;</span><br><span class=\"line\">                指定用于新分发的版本。</span><br><span class=\"line\">    --list, -l [选项]</span><br><span class=\"line\">        列出分发。</span><br><span class=\"line\">        选项:</span><br><span class=\"line\">            --all</span><br><span class=\"line\">                列出所有分发，包括当前正在</span><br><span class=\"line\">                安装或卸载的分发。</span><br><span class=\"line\">            --running</span><br><span class=\"line\">                只列出当前正在运行的分发。</span><br><span class=\"line\">            --quiet, -q</span><br><span class=\"line\">                只显示分发名称。</span><br><span class=\"line\">            --verbose, -v</span><br><span class=\"line\">                显示有关所有分发的详细信息。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-default, -s &lt;分发版&gt;</span><br><span class=\"line\">        将分发设置为默认值。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-default-version &lt;版本&gt;</span><br><span class=\"line\">        更改新分发的默认安装版本。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-version &lt;分发版&gt; &lt;版本&gt;</span><br><span class=\"line\">        更改指定分发的版本。</span><br><span class=\"line\">    --shutdown</span><br><span class=\"line\">        立即终止所有正在运行的分发和 WSL <span class=\"number\">2</span> 轻型工具虚拟机。</span><br><span class=\"line\">    --terminate, -t &lt;分发版&gt;</span><br><span class=\"line\">        终止指定的分发。</span><br><span class=\"line\">    --unregister &lt;分发版&gt;</span><br><span class=\"line\">        注销分发。</span><br><span class=\"line\">    --<span class=\"built_in\">help</span></span><br><span class=\"line\">        显示用法信息。</span><br></pre></td></tr></tbody></table></figure>\n<p>这里我们使用到 export 、unregister 和 import 几个选项就可以实现迁移。</p>\n<ol>\n<li>终止正在运行的分发或虚拟机：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --shutdown</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>查看已安装的 wsl 名称：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --list --all</span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">适用于 Linux 的 Windows 子系统分发:</span><br><span class=\"line\">Debian (默认)</span><br><span class=\"line\">kali-linux</span><br><span class=\"line\">Ubuntu</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>对需要迁移的分发或虚拟机导出（我要迁移 kali-linux）：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --export kali-linux D:\\kali</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>卸载分发版或虚拟机（如果是要重装系统或换机器安装，这一步可以省略，但是要将上一步导出的文件保存好）<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --unregister kali-linux</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>导入新的分发版或虚拟机：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --import kali-linux D:\\wsl\\kali D:\\kali</span><br></pre></td></tr></tbody></table></figure>\n</li>\n</ol>\n<h1 id=\"压缩\"><a class=\"anchor\" href=\"#压缩\">#</a> 压缩</h1>\n<p>等待导入后你会发现移动的其实是 vhdx 文件，那么就可以对这个文件进行回收空间。</p>\n<ol>\n<li>以管理员身份运行 cmd，输入 diskpart 命令按回车。</li>\n<li>使用以下命令选择你的 userdata.vhdx</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select vdisk file = \"D:\\wsl\\ext4.vhdx\"</span><br></pre></td></tr></tbody></table></figure>\n<p>如果提示</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DiskPart successfully selected the virtual disk file.</span><br></pre></td></tr></tbody></table></figure>\n<p>就说明成功了。</p>\n<ol start=\"3\">\n<li>输入  <code>compact vdisk</code>  来压缩。</li>\n</ol>\n<h1 id=\"bug\"><a class=\"anchor\" href=\"#bug\">#</a> bug</h1>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ERROR: <span class=\"title\">Wsl</span>/<span class=\"title\">Service</span>/<span class=\"title\">CreateInstance</span>/<span class=\"title\">ERROR_FILE_NOT_FOUND</span></span></span><br></pre></td></tr></tbody></table></figure>\n<p>打开命令行，在命令行中输入</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --list --all</span><br><span class=\"line\">wsl.exe --unregister xxx</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"摘抄\"><a class=\"anchor\" href=\"#摘抄\">#</a> 摘抄</h1>\n<p><a href=\"https://blog.csdn.net/zhys2007/article/details/110958577\">WSL2 迁移方法</a><br>\n<a href=\"https://blog.csdn.net/y17854117512/article/details/119214442?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;utm_relevant_index=1\">解决 Win10 子系统的 Ubuntu 被删除后，重新安装出现找不到系统路径</a></p>\n",
            "tags": [
                "linux",
                "wsl2",
                "Hyper-v"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/204350/",
            "url": "http://maxshiroi.top/ug/204350/",
            "title": "通过diskpart工具压缩userdata.vhdx来解决磁盘占用过多问题",
            "date_published": "2022-11-18T12:43:50.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>当你安装了 WSA 后随着你的使用，你会发现占用的空间越来越大。即使你把不需要的安卓程序卸载了之后，却依然满满的霸占着你的 C 盘。你只能眼睁睁地看他慢慢变大却无能为力。当然本篇文章的目的就是帮你解决这个问题。</p>\n<h1 id=\"移动wsa到其他盘符\"><a class=\"anchor\" href=\"#移动wsa到其他盘符\">#</a> 移动 WSA 到其他盘符</h1>\n<blockquote>\n<p>你利用你聪明的头脑打开了百度并使用灵巧的双手在搜索框里输入 WSA 磁盘空间过大。很快你便看到了一种解决方式.</p>\n</blockquote>\n<ol>\n<li>打开设置 - 程序 - 已安装的程序，找到 WSA</li>\n</ol>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/Windowssubsystemforandroidcompression/20221118205416.png\" fancybox=\"true\"></div></div> \n<ol start=\"2\">\n<li>点击后面三个点选择移动。<br>\n稍等一会就会帮你把 WSA 移动到对应的盘符了。</li>\n</ol>\n<h1 id=\"使用diskpart工具压缩\"><a class=\"anchor\" href=\"#使用diskpart工具压缩\">#</a> 使用 diskpart 工具压缩</h1>\n<ol>\n<li>以管理员身份运行 cmd，输入 diskpart 命令按回车。</li>\n<li>使用以下命令选择你的 userdata.vhdx</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select vdisk file = \"D:\\WpSystem\\S-<span class=\"number\">1</span>-<span class=\"number\">5</span>-<span class=\"number\">21</span>-<span class=\"number\">3846526574</span>-<span class=\"number\">1502088438</span>-<span class=\"number\">2560978845</span>-<span class=\"number\">1001</span>\\AppData\\Local\\Packages\\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\\LocalCache\\userdata.vhdx\"</span><br></pre></td></tr></tbody></table></figure>\n<p>如果提示</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DiskPart successfully selected the virtual disk file.</span><br></pre></td></tr></tbody></table></figure>\n<p>就说明成功了。</p>\n<ol start=\"3\">\n<li>输入  <code>compact vdisk</code>  来压缩。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DiskPart has encountered an error: The specified file is encrypted and the user does not have the ability to decrypt it.</span><br><span class=\"line\">See the System Event Log for more information.</span><br></pre></td></tr></tbody></table></figure>\n<p>这个就说明你没有权限压缩这个文件。<br>\n为了解决这个问题我百度了一晚上，最后发现，只要你把这个文件复制走，就会提示</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/Windowssubsystemforandroidcompression/20221118210314.png\" fancybox=\"true\"></div></div>  \n<p>这里选择是，然后就会复制走。<br>\n这个时候你再看你复制的文件就会发现上面的小黄锁已经不见了。</p>\n<ol start=\"4\">\n<li>重新选择 userdata.vhdx 文件</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select vdisk file = \"D:\\userdata.vhdx\"</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>重新输入命令  <code>compact vdisk</code>  进行压缩，如果出现下面的提示那就说明压缩成功了。</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DISKPART&gt; <span class=\"built_in\">compact</span> vdisk</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">100</span> percent completed</span><br><span class=\"line\"></span><br><span class=\"line\">DiskPart successfully compacted the virtual disk file.</span><br><span class=\"line\"></span><br><span class=\"line\">DISKPART&gt;</span><br></pre></td></tr></tbody></table></figure>\n<p>此时再看你复制出来的文件，就会发现大小缩小了很多，压缩成功了。<br>\n接着只需要剪切拷贝出来的文件，替换掉原来的文件就可以了。</p>\n<h1 id=\"成果\"><a class=\"anchor\" href=\"#成果\">#</a> 成果</h1>\n<p><strong>压缩前：</strong></p>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/Windowssubsystemforandroidcompression/20221118204548.png\" fancybox=\"true\"></div></div>  \n</blockquote>\n<p><strong>压缩后：</strong></p>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/Windowssubsystemforandroidcompression/20221118210939.png\" fancybox=\"true\"></div></div>  </blockquote>\n",
            "tags": [
                "wsa",
                "vhd",
                "vhdx",
                "diskpart"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/152935/",
            "url": "http://maxshiroi.top/ug/152935/",
            "title": "随机图片API",
            "date_published": "2022-11-16T07:29:35.000Z",
            "content_html": "<h1 id=\"随机图片api\"><a class=\"anchor\" href=\"#随机图片api\">#</a> 随机图片 API</h1>\n<blockquote>\n<p>都有时效性，失效不管 233</p>\n</blockquote>\n<h2 id=\"二次元\"><a class=\"anchor\" href=\"#二次元\">#</a> 二次元</h2>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://iw233.cn/API/Random.php\" alt=\"https://iw233.cn/API/Random.php\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://iw233.cn/API/Random.php</span></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.paugram.com/wallpaper\" alt=\"https://api.paugram.com/wallpaper\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.paugram.com/wallpaper</span></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://www.dmoe.cc/random.php\" alt=\"https://www.dmoe.cc/random.php\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://www.dmoe.cc/random.php</span></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.mtyqx.cn/api/random.php\" alt=\"https://api.mtyqx.cn/api/random.php\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.mtyqx.cn/api/random.php</span></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.yimian.xyz/img?type=moe\" alt=\"https://api.yimian.xyz/img?type=moe\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.yimian.xyz/img?type=moe</span></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.ixiaowai.cn/api/api.php\" alt=\"https://api.ixiaowai.cn/api/api.php\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.ixiaowai.cn/api/api.php</span></div></div>\n<p class=\"gallery\" data-height=\"480\"></p>\n<h2 id=\"三次元\"><a class=\"anchor\" href=\"#三次元\">#</a> 三次元</h2>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.btstu.cn/sjbz/api.php\" alt=\"https://api.btstu.cn/sjbz/api.php\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.btstu.cn/sjbz/api.php</span></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.paugram.com/bing/\" alt=\"https://api.paugram.com/bing/ 必应每日壁纸\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.paugram.com/bing/ 必应每日壁纸</span></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.ixiaowai.cn/gqapi/gqapi.php\" alt=\"https://api.ixiaowai.cn/gqapi/gqapi.php\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.ixiaowai.cn/gqapi/gqapi.php</span></div></div>\n<p class=\"gallery\" data-height=\"480\"></p>\n<h2 id=\"menhara酱\"><a class=\"anchor\" href=\"#menhara酱\">#</a> menhara 酱</h2>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.ixiaowai.cn/mcapi/mcapi.php\" alt=\"https://api.ixiaowai.cn/mcapi/mcapi.php\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.ixiaowai.cn/mcapi/mcapi.php</span></div></div>\n<p class=\"gallery\" data-height=\"480\"></p>\n<h2 id=\"eeedog\"><a class=\"anchor\" href=\"#eeedog\">#</a> eeedog</h2>\n<blockquote>\n<p>这个有点复杂建议自己去看看<br>\n<a href=\"https://www.eee.dog/tech/rand-pic-api.html\"> eeedog</a> 我随意放一个随机图床</p>\n</blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"https://api.yimian.xyz/img?type=imgbed\" alt=\"https://api.yimian.xyz/img?type=imgbed\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">https://api.yimian.xyz/img?type=imgbed</span></div></div>\n<p class=\"gallery\" data-height=\"480\"></p>\n<hr>\n<h1 id=\"本地\"><a class=\"anchor\" href=\"#本地\">#</a> 本地</h1>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154554.png\" alt=\"女人\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">女人</span></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154625.png\" alt=\"女人\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">女人</span></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154652.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154713.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154721.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154729.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154737.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154746.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154914.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154922.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154928.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154935.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154945.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116154953.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116155005.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116155015.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116155023.png\" fancybox=\"true\"></div></div>  \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/pictureshow/20221116155031.png\" fancybox=\"true\"></div></div>  \n<p class=\"gallery\"></p>\n",
            "tags": [
                "pic",
                "img",
                "api",
                "random",
                "wallpaper"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/204417/",
            "url": "http://maxshiroi.top/ug/204417/",
            "title": "在Debian系linux上通过apt的方式安装plex媒体中心",
            "date_published": "2022-11-02T12:44:17.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>plex 是一个包含订阅制的个人媒体中心，可以在你的智能设备：Phone / Android TV / Windows / MAC OS 等在线使用专用的客户端来浏览你存储在 nas 上的影片。</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/linuxplexguide/20221102204637.png\" fancybox=\"true\"></div></div>  \n<p>如果你付费订阅则会支持更多的功能如在线硬解码 / 使用 dashboard 来控制设备 / 使用 plexamp 来播放音乐。当然免费的功能已经足够我们使用。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<ol>\n<li>首先更新</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update &amp;&amp; sudo apt upgrade</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>安装 apt-transport-https 包</li>\n</ol>\n<blockquote>\n<p>要将 Plex 包安装到树莓派上，需要添加官方的 Plex 包仓库。这个包允许 “apt” 包管理器通过 Plex 仓库使用的 “https” 协议来检索包。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install apt-transport-https</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>把 Plex 仓库添加到 apt 源</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class=\"line\"><span class=\"built_in\">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo <span class=\"built_in\">tee</span> /etc/apt/sources.list.d/plexmediaserver.list</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>再次更新</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>一行命令安装 Plex</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install plexmediaserver</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"使用plex\"><a class=\"anchor\" href=\"#使用plex\">#</a> 使用 Plex</h1>\n<p>打开  <code>Your IP:32400/web</code>  来登录并配置你自己的 Plex 服务器</p>\n<h2 id=\"在安卓设备上安装plex和plexamp软件\"><a class=\"anchor\" href=\"#在安卓设备上安装plex和plexamp软件\">#</a> 在安卓设备上安装 plex 和 plexamp 软件。</h2>\n<blockquote>\n<p>不保证时效性，若失效请自行查找。</p>\n</blockquote>\n<ul>\n<li>plex 软件开心版<a href=\"https://apkmody.io/apps/plex\">点我下载</a></li>\n</ul>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/linuxplexguide/image.png.png\" fancybox=\"true\"></div></div>  \n<ul>\n<li>plexamp 软件开心版<a href=\"https://forum.mobilism.me/viewtopic.php?f=1332&amp;t=4970093\">点我下载</a></li>\n</ul>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/linuxplexguide/20221102210820.png\" fancybox=\"true\"></div></div>  \n<ul>\n<li>symfonium 这个没开心版，但是界面好看。</li>\n</ul>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/linuxplexguide/20221102210737.png\" fancybox=\"true\"></div></div> \n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/linuxplexguide/20221102210803.png\" fancybox=\"true\"></div></div>  \n<h2 id=\"安装wangyiyun插件来自动匹配音乐封面和歌词\"><a class=\"anchor\" href=\"#安装wangyiyun插件来自动匹配音乐封面和歌词\">#</a> 安装 Wangyiyun 插件来自动匹配音乐封面和歌词。</h2>\n<ol>\n<li>使用 git clone 下载。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo git <span class=\"built_in\">clone</span> https://github.com/timmy0209/WangYiYun.bundle.git /usr/lib/plexmediaserver/Resources/Plug-ins-f4cdfea9c/WangYiYun.bundle</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>重启 plex</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart plexmediaserver</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>直接在音乐源里勾选 wangyiyun 即可。</li>\n</ol>\n",
            "tags": [
                "media center",
                "plex",
                "emby",
                "jellyfin",
                "视频",
                "音乐"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/101622/",
            "url": "http://maxshiroi.top/ug/101622/",
            "title": "解决mysql第一次安装后改密码的各种问题",
            "date_published": "2022-10-19T02:16:22.000Z",
            "content_html": "<h1 id=\"如何重置mysql密码\"><a class=\"anchor\" href=\"#如何重置mysql密码\">#</a> 如何重置 mysql 密码？</h1>\n<p>按照提示，alter user。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'123456'</span>;</span><br></pre></td></tr></tbody></table></figure>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/WebBackcreat1/20221019100609.png\" fancybox=\"true\"></div></div>  \n<p>哈哈快乐报错。</p>\n<p>更改密码复杂度。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_length=1;</span><br></pre></td></tr></tbody></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1193 (HY000): Unknown system variable <span class=\"string\">'validate_password_policy'</span></span><br></pre></td></tr></tbody></table></figure>\n<p>很快乐。</p>\n<p>那就先查看密码规范：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW VARIABLES LIKE <span class=\"string\">'validate_password%'</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></tbody></table></figure>\n<p>套娃呢是吧。</p>\n<p>解决方法：<br>\n重置一个和随机密码差不多的就可以了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'qazWsx&gt;+&amp;3ed'</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>已经提示成功了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'qazWsx&gt;+&amp;3ed'</span>;</span><br><span class=\"line\">Query OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></tbody></table></figure>\n<p>更改密码复杂度：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.length=6;</span><br></pre></td></tr></tbody></table></figure>\n<p>修改密码并退出：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'123456'</span>;</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></tbody></table></figure>\n<p>然后就可以愉快重启登陆了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld</span><br><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></tbody></table></figure>\n",
            "tags": [
                "linux",
                "mysql",
                "passwd"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211932/",
            "url": "http://maxshiroi.top/ug/211932/",
            "title": "在centos中部署后端程序。",
            "date_published": "2022-10-16T13:19:32.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>其实部署很简单，重要的地方在于部署时出现差错后该如何进行处理。</p>\n</blockquote>\n<h1 id=\"nginx的安装\"><a class=\"anchor\" href=\"#nginx的安装\">#</a> Nginx 的安装</h1>\n<p>使用源码编译安装：</p>\n<ol>\n<li>访问<a href=\"https://nginx.org/en/download.html\"> Nginx</a> 官网，复制最新版本链接。wget 到本地目录。</li>\n</ol>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/WebBackcreat1/20221016212408.png\" fancybox=\"true\"></div></div>  \n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nginx.org/download/nginx-1.23.1.tar.gz ~/</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>解压出来。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.23.1.tar.gz</span><br><span class=\"line\">// 如果这里是 *.tar.bz2 的话则使用 -jxvf</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>安装编译所需要的前置。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>进入解压出来的文件夹，编译安装。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.23.1</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>nginx 的启动和关闭</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx/sbin</span><br><span class=\"line\">// 启动nginx</span><br><span class=\"line\">./nginx</span><br><span class=\"line\">// 关闭nginx</span><br><span class=\"line\">./nginx -s stop</span><br><span class=\"line\">// 关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>创建目录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /var/temp/nginx -p</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>建议在执行前先使用 netstat -aux | grep 80 查看是否有端口占用 80。</p>\n</blockquote>\n<ol start=\"7\">\n<li>开机自启 * 还没写完\n<ol>\n<li>编辑文件</li>\n</ol>\n <figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /lib/systemd/system/</span><br><span class=\"line\">vim nginx.service</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>添加内容</li>\n</ol>\n <figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit] </span><br><span class=\"line\">Description=nginx </span><br><span class=\"line\">service After=network.target </span><br><span class=\"line\">[Service] </span><br><span class=\"line\">Type=forking </span><br><span class=\"line\">ExecStart=/usr/local/nginx/sbin/nginx </span><br><span class=\"line\">ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=<span class=\"literal\">true</span> </span><br><span class=\"line\">[Install] </span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">// 解释</span><br><span class=\"line\">[Unit]:服务的说明</span><br><span class=\"line\">Description:描述服务</span><br><span class=\"line\">After:描述服务类别</span><br><span class=\"line\">[Service]服务运行参数的设置</span><br><span class=\"line\">Type=forking是后台运行的形式</span><br><span class=\"line\">ExecStart为服务的具体运行命令</span><br><span class=\"line\">ExecReload为重启命令</span><br><span class=\"line\">ExecStop为停止命令</span><br><span class=\"line\">PrivateTmp=True表示给服务分配独立的临时空间</span><br><span class=\"line\">注意：[Service]的启动、重启、停止命令全部要求使用绝对路径</span><br><span class=\"line\">[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>保存退出</li>\n<li>启动</li>\n</ol>\n <figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start nginx.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx.service</span><br><span class=\"line\">systemctl status nginx.service</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>233</li>\n</ol>\n<h1 id=\"编译安装-apache\"><a class=\"anchor\" href=\"#编译安装-apache\">#</a> 编译安装 apache</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update</span><br><span class=\"line\"></span><br><span class=\"line\">yum install -y gcc-c++</span><br><span class=\"line\">yum install -y expat-devel pcre-devel</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-1.6.5.tar.gz</span><br><span class=\"line\">tar -zxvf apr-1.6.5.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> apr-1.6.5</span><br><span class=\"line\">./configure --prefix=/usr/local/apr</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://dlcdn.apache.org//apr/apr-util-1.6.3.tar.gz</span><br><span class=\"line\">tar -zxvf apr-util-1.6.3.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> apr-util</span><br><span class=\"line\">./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/bin/apr-1-config</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://nchc.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz</span><br><span class=\"line\">tar -zxvf pcre-8.45.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> pcre-8.45</span><br><span class=\"line\">./configure --prefix=/usr/local/pcre --with-apr=/usr/local/apr/bin/apr-1-config</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://mirrors.aliyun.com/apache/httpd/httpd-2.4.57.tar.gz</span><br><span class=\"line\">tar -zxvf httpd-2.4.57.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> httpd-2.4.57</span><br><span class=\"line\">./configure --prefix=/usr/local/httpd --with-pcre=/usr/local/pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util</span><br><span class=\"line\"><span class=\"built_in\">cp</span> /usr/local/httpd/bin/apachectl /etc/init.d/httpd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">'\\nexport PATH=/usr/local/apache/bin:/usr/local/apache/lib:$PATH\\n'</span> &gt;&gt; /etc/profile &amp;&amp; <span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"#chkconfig:2345 64 36\"</span> &gt; /etc/rc.d/init.d/httpd</span><br><span class=\"line\"></span><br><span class=\"line\">chkconfig --add httpd</span><br><span class=\"line\">chkconfig httpd on</span><br><span class=\"line\"></span><br><span class=\"line\">vim /usr/local/apache/conf/httpd.conf</span><br><span class=\"line\">unsharp <span class=\"comment\">#ServerName www.example.com:80</span></span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start httpd</span><br><span class=\"line\">firewall-cmd --add-port=80/tcp</span><br><span class=\"line\">firewall-cmd --add-port=443/tcp</span><br><span class=\"line\"><span class=\"comment\">#systemctl stop firewalld</span></span><br><span class=\"line\"><span class=\"comment\">#systemctl disable firewalld</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">php</span><br><span class=\"line\">yum -y install epel-release</span><br><span class=\"line\">yum update</span><br><span class=\"line\">yum -y install php-mcrypt libmcrypt libmcrypt-devel  autoconf  freetype gd jpegsrc libmcrypt libpng libpng-devel libjpeg libxml2 libxml2-devel zlib curl curl-devel openssl openssl-devel sqlite-devel</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-6.7.0-1.el7.x86_64.rpm</span><br><span class=\"line\">yum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-devel-6.7.0-1.el7.x86_64.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">wget https://www.php.net/distributions/php-8.2.5.tar.gz</span><br><span class=\"line\">tar -zxvf php-8.2.5.tar.gz</span><br><span class=\"line\"><span class=\"built_in\">cd</span> php-8.2.5</span><br><span class=\"line\">./configure --prefix=/usr/local/php8/ --with-config-file-path=/usr/local/php8/etc/ --with-apxs2=/usr/local/httpd/bin/apxs --enable-mbstring --with-curl -with-gd --enable-fpm --enable-mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd</span><br><span class=\"line\">./configure \\</span><br><span class=\"line\">--prefix=/usr/local/php8 \\</span><br><span class=\"line\">--with-config-file-path=/usr/local/php8/etc \\</span><br><span class=\"line\">--with-apxs2=/usr/local/httpd/bin/apxs \\</span><br><span class=\"line\">--with-mysql-sock=/usr/local/mysql/mysql.sock \\</span><br><span class=\"line\">--with-mysqli \\</span><br><span class=\"line\">--with-zlib \\</span><br><span class=\"line\">--with-curl \\</span><br><span class=\"line\">--with-gd \\</span><br><span class=\"line\">--with-jpeg-dir \\</span><br><span class=\"line\">--with-png-dir \\</span><br><span class=\"line\">--with-freetype-dir \\</span><br><span class=\"line\">--with-openssl \\</span><br><span class=\"line\">--enable-mbstring \\</span><br><span class=\"line\">--enable-xml \\</span><br><span class=\"line\">--enable-session \\</span><br><span class=\"line\">--enable-ftp \\</span><br><span class=\"line\">--enable-pdo \\</span><br><span class=\"line\">--enable-tokenizer \\</span><br><span class=\"line\">--enable-mysqlnd \\</span><br><span class=\"line\">--enable-fpm \\</span><br><span class=\"line\">--with-pdo-mysql=mysqlnd \\</span><br><span class=\"line\">--with-mysqli=mysqlnd \\</span><br><span class=\"line\">--enable-zip</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">echo</span> -e  <span class=\"string\">'\\nexport PATH=/usr/local/php8/bin:/usr/local/php8/sbin:$PATH\\n'</span> &gt;&gt; /etc/profile &amp;&amp; <span class=\"built_in\">source</span> /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">php-fpm -t</span><br><span class=\"line\"></span><br><span class=\"line\">出现如下提示则正常：</span><br><span class=\"line\">[18-Apr-2023 10:12:57] NOTICE: configuration file /usr/local/php8/etc/php-fpm.conf <span class=\"built_in\">test</span> is successful</span><br><span class=\"line\"></span><br><span class=\"line\">使用如下命令启动php</span><br><span class=\"line\">/etc/init.d/php-fpm</span><br><span class=\"line\">关闭</span><br><span class=\"line\">pkill php-fpm</span><br><span class=\"line\"></span><br><span class=\"line\">vi /usr/local/httpd/conf/httpd.conf</span><br><span class=\"line\"></span><br><span class=\"line\">1、查看是否已经添加了，如果没有在loadModule处添加 ，正确安装后，应该已经有了</span><br><span class=\"line\">LoadModule php7_module modules/libphp7.so </span><br><span class=\"line\">2、 在&lt;IfModule dir_module&gt;模块添加index.php</span><br><span class=\"line\">&lt;IfModule dir_module&gt;    </span><br><span class=\"line\">DirectoryIndex index.html index.php</span><br><span class=\"line\">&lt;/IfModule&gt; </span><br><span class=\"line\">3、找到：</span><br><span class=\"line\">AddType  application/x-compress .Z</span><br><span class=\"line\">AddType application/x-gzip .gz .tgz</span><br><span class=\"line\">添加如下内容</span><br><span class=\"line\">AddType application/x-httpd-php-source .phps</span><br><span class=\"line\">AddType application/x-httpd-php .php</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart httpd</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/httpd/htdocs/</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"&lt;?php phpinfo(); ?&gt;\"</span> &gt; index.php</span><br></pre></td></tr></tbody></table></figure>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/WebBackcreat1/20230421154601.png\" fancybox=\"true\"></div></div>\n<h1 id=\"mysql-的安装\"><a class=\"anchor\" href=\"#mysql-的安装\">#</a> Mysql 的安装</h1>\n<ol>\n<li>先安装 wget  <code>yum install wget</code> 。</li>\n<li>下载并安装 mysql。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum -y localinstall mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum -y install mysql-community-server</span><br></pre></td></tr></tbody></table></figure>\n<ol>\n<li>启动 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 启动mysql</span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\">// 写入开机启动</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br></pre></td></tr></tbody></table></figure>\n<ol>\n<li>查找日志并找到临时密码。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /var/log/mysqld.log</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/WebBackcreat1/20221019082932.png\" fancybox=\"true\"></div></div>  \n</blockquote>\n<ol>\n<li>登录 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">// 密码则为查找到的临时密码。</span><br><span class=\"line\">password:</span><br></pre></td></tr></tbody></table></figure>\n<ol>\n<li>修改密码</li>\n</ol>\n<blockquote>\n<p>后面专门说这傻逼 mysql 改密码。</p>\n</blockquote>\n<ol>\n<li>重启 mysql 服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>重启后就可以正常使用 mysql 了。</p>\n</blockquote>\n<h1 id=\"httpdphp安装\"><a class=\"anchor\" href=\"#httpdphp安装\">#</a> httpd/php 安装</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yum update &amp;&amp; sudo yum upgrade</span><br><span class=\"line\">systemctl status httpd</span><br><span class=\"line\">sudo yum install httpd</span><br><span class=\"line\">systemctl start httpd</span><br><span class=\"line\">service mysql start</span><br><span class=\"line\">yum install php php-devel</span><br><span class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/</span><br><span class=\"line\">vi test.php</span><br><span class=\"line\">------</span><br><span class=\"line\">&lt;?php phpinfo();?&gt;</span><br><span class=\"line\">------</span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></tbody></table></figure>\n<p>打开浏览器访问<br>\n localhost/test.php<br>\n 出现 php 信息就成功了。</p>\n<h1 id=\"安装pma\"><a class=\"anchor\" href=\"#安装pma\">#</a> 安装 pma</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip</span><br><span class=\"line\">unzip phpMyAdmin-5.2.1-all-languages.zip</span><br><span class=\"line\"><span class=\"built_in\">mv</span> phpMyAdmin-5.2.1-all-languages pma</span><br><span class=\"line\">yum install php-mysqli</span><br><span class=\"line\"><span class=\"built_in\">cd</span> pma</span><br><span class=\"line\"><span class=\"built_in\">cp</span> config.sample.inc.php config.inc.php</span><br></pre></td></tr></tbody></table></figure>\n<p>打开浏览器访问<br>\n localhost/pma<br>\n 提示登陆就成功了。</p>\n",
            "tags": [
                "linux",
                "centos",
                "web",
                "nginx",
                "mysql"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/085248/",
            "url": "http://maxshiroi.top/ug/085248/",
            "title": "CTF：Upload-Labs-Linux",
            "date_published": "2022-10-10T00:52:48.000Z",
            "content_html": "<h1 id=\"题目预览\"><a class=\"anchor\" href=\"#题目预览\">#</a> 题目预览：</h1>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/Upload-Labs-Linux/20221010085420.png\" fancybox=\"true\"></div></div>  \n<h1 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<ol>\n<li>开控制台</li>\n<li>关闭 javascript\n<blockquote>\n<p>设置 - 偏好设置 - 调试程序<br>\n删除 <code>onsubmit=\"return.checkFile()\"</code></p>\n</blockquote>\n</li>\n<li>新建一个文件里面写入 <code>&lt;?php @eval($_POST['123']);?&gt;</code></li>\n<li>后缀名改为 php 上传到网站，显示出图片后右键复制链接。</li>\n<li>打开 antsword，add 一个 url 地址为图片链接，密码为 123，加密 base64.</li>\n<li>点击链接就能发现根目录有个 flag 文件了。</li>\n</ol>\n",
            "tags": [
                "ctf",
                "buuctf",
                "antsword"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/082833/",
            "url": "http://maxshiroi.top/ug/082833/",
            "title": "linuxlearn2",
            "date_published": "2022-09-27T00:28:33.000Z",
            "content_html": "<hr>\n<p>title: linuxlearn2<br>\ndate: 2022-10-18 11:16:47<br>\ntags:</p>\n<ul>\n<li>diff</li>\n<li>sudoers</li>\n<li>passwd</li>\n<li>usermod</li>\n<li>linux</li>\n</ul>\n<hr>\n<ul>\n<li>diff 命令<br>\n diff 参数 文件 1 文件 2 &gt; 新文件</li>\n</ul>\n<p>netstat -ano | grep \"80\"</p>\n<ul>\n<li>\n<p>sudoers<br>\n% 开头表示用户组<br>\n权限:<br>\n/sbin:<br>\n 该目录下的命令通常只有管理员才可以运行<br>\n /bin：<br>\n下的命令管理员和一般的用户都可以使用。<br>\n/usr/sbin：<br>\n这个目录表示系统命令的位置<br>\n /usr/bin:<br>\n 存放一些用户命令，如 led (控制 LED 灯的)。</p>\n</li>\n<li>\n<p>passwd<br>\n 创建用户权限<br>\n /etc/passwd<br>\n 用户名：口令：用户标识号：组标识号：注释性描述：主目录：登录 Shell<br>\nuseradd -u uid</p>\n</li>\n<li>\n<p>usermod &amp; groupmod<br>\n// 修改用户所属组<br>\n usermod -g 用户组 用户名<br>\n // 修改用户 ID<br>\nusermod -u UID 用户名<br>\n // 修改组 ID<br>\nusermod -g GID 组名</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://maxshiroi.top/ug/175233/",
            "url": "http://maxshiroi.top/ug/175233/",
            "title": "Linux入门学习0",
            "date_published": "2022-09-22T09:52:33.000Z",
            "content_html": "<h1 id=\"linux系统目录结构\"><a class=\"anchor\" href=\"#linux系统目录结构\">#</a> linux 系统目录结构</h1>\n<blockquote>\n<p>在 linux 中，所有都是以文件的形式存储和管理的。</p>\n</blockquote>\n<h2 id=\"bin\"><a class=\"anchor\" href=\"#bin\">#</a> /bin</h2>\n<blockquote>\n<p>Binary 存放经常使用的命令。</p>\n</blockquote>\n<h2 id=\"sbin\"><a class=\"anchor\" href=\"#sbin\">#</a> /sbin</h2>\n<blockquote>\n<p>super Binary 超级用户命令存放的目录。</p>\n</blockquote>\n<h2 id=\"home\"><a class=\"anchor\" href=\"#home\">#</a> /home</h2>\n<blockquote>\n<p>用户目录</p>\n</blockquote>\n<h2 id=\"root\"><a class=\"anchor\" href=\"#root\">#</a> /root</h2>\n<blockquote>\n<p>系统管理员目录</p>\n</blockquote>\n<h2 id=\"etc\"><a class=\"anchor\" href=\"#etc\">#</a> /etc</h2>\n<blockquote>\n<p>管理系统配置文件</p>\n</blockquote>\n<h2 id=\"usr\"><a class=\"anchor\" href=\"#usr\">#</a> /usr</h2>\n<blockquote>\n<p>类似于 windows 下 Programfiles 目录，</p>\n</blockquote>\n<h2 id=\"boot\"><a class=\"anchor\" href=\"#boot\">#</a> /boot</h2>\n<blockquote>\n<p>启动所使用的核心文件都会存放在这里。</p>\n</blockquote>\n<h2 id=\"proc\"><a class=\"anchor\" href=\"#proc\">#</a> /proc</h2>\n<blockquote>\n<p>内存映射</p>\n</blockquote>\n<h2 id=\"srv\"><a class=\"anchor\" href=\"#srv\">#</a> /srv</h2>\n<blockquote>\n<p>services 的缩写，用于存放服务启动所需要的数据</p>\n</blockquote>\n<h2 id=\"sys\"><a class=\"anchor\" href=\"#sys\">#</a> /sys</h2>\n<blockquote>\n<p>系统文件</p>\n</blockquote>\n<h2 id=\"tmp\"><a class=\"anchor\" href=\"#tmp\">#</a> /tmp</h2>\n<blockquote>\n<p>是 temporary (临时) 的缩写，存放临时 / 缓存文件，可当作回收站使用。</p>\n</blockquote>\n<h2 id=\"dev\"><a class=\"anchor\" href=\"#dev\">#</a> /dev</h2>\n<blockquote>\n<p>device 的缩写，类似于 windows 的设备管理器。</p>\n</blockquote>\n<h2 id=\"mnt\"><a class=\"anchor\" href=\"#mnt\">#</a> /mnt</h2>\n<blockquote>\n<p>linux 用于挂载可移动设备（临时）的目录。</p>\n</blockquote>\n<h2 id=\"opt\"><a class=\"anchor\" href=\"#opt\">#</a> /opt</h2>\n<blockquote>\n<p>主机额外安装的软件存放的目录</p>\n</blockquote>\n<h2 id=\"var\"><a class=\"anchor\" href=\"#var\">#</a> /var</h2>\n<blockquote>\n<p>存放经常被修改的目录或文件，比如日志（*.log）。</p>\n</blockquote>\n<h2 id=\"lib\"><a class=\"anchor\" href=\"#lib\">#</a> /lib</h2>\n<blockquote>\n<p>存放系统基本的动态链接库。</p>\n</blockquote>\n<h1 id=\"权限数字意思详解\"><a class=\"anchor\" href=\"#权限数字意思详解\">#</a> 权限数字意思详解</h1>\n<p>我们首先打开控制台在任意位置输入 ll, 就能看到当前文件夹下所有类型的信息。我们只取其中的前十位来进行结束.</p>\n<blockquote>\n<p>dr-xr-xr-x.</p>\n</blockquote>\n<h2 id=\"第一位\"><a class=\"anchor\" href=\"#第一位\">#</a> 第一位</h2>\n<blockquote>\n<p>第一位表示类型</p>\n</blockquote>\n<ul>\n<li>d directory 表示目录</li>\n<li>b block 块文件</li>\n<li>c char 字符文件</li>\n<li>- file 普通文件</li>\n<li>l link 链接</li>\n<li>etc.</li>\n</ul>\n<h2 id=\"后面九位\"><a class=\"anchor\" href=\"#后面九位\">#</a> 后面九位</h2>\n<blockquote>\n<p>后面九位表示了文件的类型，对应的位置如果是 <code>-</code>  则表示没有对应的权限.</p>\n</blockquote>\n<table>\n    <tbody><tr><th>\n        </th><td colspan=\"3\">前三位</td>\n        <td colspan=\"3\">中间三位</td>\n        <td colspan=\"3\">后三位</td>\n    \n    </tr><tr align=\"center\">\n        <td colspan=\"3\">创建者</td>\n        <td colspan=\"3\">同组用户</td>\n        <td colspan=\"3\">其他用户</td>\n    </tr>\n    <tr align=\"center\">\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n    </tr>\n    <tr align=\"center\">\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n    </tr>\n</tbody></table>\n<p>下面来看一个实例:</p>\n<p>如果一个文件的权限为 755, 则代表什么意思？</p>\n<p>我们只需要把 755 按位转换为二进制，对应位为 0 则表示没有这个权限.</p>\n<table>\n<thead>\n<tr>\n<th>7</th>\n<th>5</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>111</td>\n<td>101</td>\n<td>101</td>\n</tr>\n</tbody>\n</table>\n<p>用人的语言表述:</p>\n<blockquote>\n<p>对于创建者：可以读取，可以更改，可以执行.<br>\n 对于同组人员：可以读取，不能更改，可以执行.<br>\n 对于其他成员：可以读取，不能更改，可以执行.</p>\n</blockquote>\n",
            "tags": [
                "linux",
                "目录",
                "指令",
                "权限"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/120738/",
            "url": "http://maxshiroi.top/ug/120738/",
            "title": "shortcutforshoka",
            "date_published": "2022-09-21T04:07:38.000Z",
            "content_html": "<figure class=\"highlight java\"><figcaption><span>java</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span> (System.in);</span><br><span class=\"line\"><span class=\"comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></span><br><span class=\"line\">System.out.println (in.nextLine ());</span><br><span class=\"line\">System.out.println (<span class=\"string\">\"Hello\"</span> + <span class=\"string\">\"world.\"</span>);</span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">{% media audio %}</span><br><span class=\"line\">- title: 列表 1</span><br><span class=\"line\">  list:</span><br><span class=\"line\">    - https://music.163.com/#/playlist?id=2943811283</span><br><span class=\"line\">    - https://music.163.com/#/playlist?id=2297706586</span><br><span class=\"line\">- title: 列表 2</span><br><span class=\"line\">  list:</span><br><span class=\"line\">    - https://music.163.com/#/playlist?id=2031842656</span><br><span class=\"line\">{% endmedia %}</span><br></pre></td></tr></tbody></table></figure>\n<p>原本用于日语汉字假名注音，但别的注音也可以。<br>\n为了兼容性，采用 markdown-it-ruby 的基本格式： <ruby>文字<rp> (</rp><rt>注音</rt><rp>)</rp></ruby> ，并且为了兼容表格，将分隔符由 | 换成了 ^ 。<br>\n注音分隔基于 furigana-markdown-it 显示说明看这里</p>\n<p><ruby>取<rp> (</rp><rt>と</rt><rp>)</rp> り<rt></rt>返<rp> (</rp><rt>かえ</rt><rp>)</rp> す<rt></rt></ruby>\t取とり返かえす<br>\n<ruby>可愛<rp> (</rp><rt>かわい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可愛かわいい犬いぬ<br>\n<ruby>可<rp> (</rp><rt>か</rt><rp>)</rp> 愛<rp> (</rp><rt>わい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可か愛わいい犬いぬ<br>\n<ruby>アクセラレータ<rp> (</rp><rt>accelerator</rt><rp>)</rp></ruby>\tアクセラレータ accelerator<br>\n<ruby>accelerator<rp>(</rp><rt>アクセラレータ</rt><rp>)</rp></ruby>\taccelerator アクセラレータ<br>\n<ruby>食<rp> (</rp><rt>た</rt><rp>)</rp> べる<rt></rt></ruby>\t食たべる<br>\n<ruby>食べる<rp> (</rp><rt>たべる</rt><rp>)</rp></ruby>\t食べるたべる<br>\n<ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby>\tあ●い●う●え●お●<br>\n<ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby>\tあ❤い❤う❤え❤お❤<br>\n<ruby>常用账号<rp> (</rp><rt>contact</rt><rp>)</rp></ruby>\t常用账号 contact</p>\n",
            "tags": [
                "短链",
                "测试"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/164658/",
            "url": "http://maxshiroi.top/ug/164658/",
            "title": "解决windows资源管理器无法自动刷新等问题",
            "date_published": "2022-09-20T08:46:58.000Z",
            "content_html": "<blockquote>\n<p>有时候在使用资源管理器新建文件的时候发现无法自动刷新，每次都需要手动刷新才会出现。这同样也导致了 chrome 在保存文件时会卡住一段时间。</p>\n</blockquote>\n<h1 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h1>\n<p>其实解决方法很简单，关掉你映射的所有网络驱动器即可恢复。据说这是 windows 的一个 bug，取消掉网络驱动器映射便解决了这个问题。</p>\n",
            "tags": [
                "win",
                "explorer.exe",
                "autorefresh"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222828/",
            "url": "http://maxshiroi.top/ug/222828/",
            "title": "vmware安装好后配置centos网络",
            "date_published": "2022-09-19T14:28:28.000Z",
            "content_html": "<h1 id=\"更改-ifcfg-ens33-文件\"><a class=\"anchor\" href=\"#更改-ifcfg-ens33-文件\">#</a> 更改 ifcfg-ens33 文件</h1>\n<blockquote>\n<p>编辑配置文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>需要添加 / 修改的地方</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=<span class=\"built_in\">yes</span></span><br><span class=\"line\">IPADDR=192.168.xx.xx</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br><span class=\"line\">GATEWAY=192.168.204.2</span><br><span class=\"line\">DNS1=8.8.8.8</span><br><span class=\"line\">DNS2=114.114.114.114</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"编辑-resolvconf-文件\"><a class=\"anchor\" href=\"#编辑-resolvconf-文件\">#</a> 编辑 resolv.conf 文件</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/resolv.conf</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>添加如下内容</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Generated by NetworkManager</span></span><br><span class=\"line\">search localdomain</span><br><span class=\"line\">nameserver 8.8.8.8</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"重启网卡\"><a class=\"anchor\" href=\"#重启网卡\">#</a> 重启网卡</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service network restart</span><br></pre></td></tr></tbody></table></figure>\n",
            "tags": [
                "linux",
                "centos",
                "network",
                "vmware"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/002853/",
            "url": "http://maxshiroi.top/ug/002853/",
            "title": "在你的 linux nas 上安装一个种子下载器吧！",
            "date_published": "2022-08-28T16:28:53.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>Transmission 是一款流行的 BT 下载软件，比其他客户端使用更少的资源，守护程序非常适合服务器，并且可以通过桌面 GUI、Web 界面和终端程序进行远程控制，支持本地对等发现、完全加密、DHT、µTP、PEX 和 Magnet Link 等。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p>这有啥好说的，直接 apt 一把梭：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install transmission-daemon</span><br></pre></td></tr></tbody></table></figure>\n<p>不过在更改配置前，建议先关一下服务，以防万一：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop transmission-daemon</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<ol>\n<li>transmission 的配置文件在  <code>/etc/transmission-daemon/settings.json</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/transmission-daemon/settings.json</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>主要需要看看下面这几项：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">\"download-dir\"</span>: <span class=\"string\">\"/home/pi/complete\"</span>, <span class=\"comment\"># 下载目录 </span></span><br><span class=\"line\"><span class=\"string\">\"incomplete-dir\"</span>: <span class=\"string\">\"/home/pi/incomplete\"</span>, <span class=\"comment\"># 下载未完成文件目录</span></span><br><span class=\"line\"><span class=\"string\">\"rpc-authentication-required\"</span>: <span class=\"literal\">false</span>, <span class=\"comment\"># 懒得配置密码直接把验证关掉。</span></span><br><span class=\"line\"><span class=\"string\">\"rpc-host-whitelist-enabled\"</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"string\">\"rpc-port\"</span>: 9091, <span class=\"comment\"># 默认 Web 访问端口，这个可以根据需要修改一下。</span></span><br><span class=\"line\"><span class=\"string\">\"rpc-whitelist-enabled\"</span>: <span class=\"literal\">false</span>, <span class=\"comment\"># 白名单开关</span></span><br><span class=\"line\"><span class=\"string\">\"utp-enabled\"</span>: <span class=\"literal\">true</span> <span class=\"comment\"># 允许 Web 登录</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>修改完成后启动 daemon：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start transmission-daemon</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>浏览器打开 127.0.0.1:9091 查看效果：</li>\n</ol>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/transmission/20220920213841.png\" fancybox=\"true\"></div></div>  \n<h1 id=\"安装第三方主题\"><a class=\"anchor\" href=\"#安装第三方主题\">#</a> 安装第三方主题</h1>\n<p>下载并执行 TWC 中文界面安装脚本</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh</span><br><span class=\"line\">bash install-tr-control-cn.sh</span><br></pre></td></tr></tbody></table></figure>\n<p>按 数字 1 然后回车安装。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt; <span class=\"string\">2022-08-29 00:27:53 &gt;&gt; 安装脚本执行完成。如遇到问题请查看：https://github.com/ronggang/transmission-web-control/wiki</span></span><br><span class=\"line\"><span class=\"string\">&lt;&lt; 2022</span>-08-29 00:27:53 &gt;&gt; == 结束 ==</span><br></pre></td></tr></tbody></table></figure>\n<p>弹出如上提示则安装成功，返回 web 界面刷新即可。</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/transmission/20220920213753.png\" fancybox=\"true\"></div></div>",
            "tags": [
                "transmission",
                "torrent",
                "下载器",
                "nas"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/234236/",
            "url": "http://maxshiroi.top/ug/234236/",
            "title": "解决Windows直接访问WSL2路径并直接进行读写操作,权限不足的问题",
            "date_published": "2022-08-28T15:42:36.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>初次安装 WSL Ubuntu 时，一般都会设置默认登录用户，当你通过 windows 访问该文件夹时，如果访问的 Ubuntu 目录的权限用户时你的默认用户，你可以对其进行修改。但是如果你访问的时 root 权限的用户，则会出现如权限不足，permission deny 报错。</p>\n<h1 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\wangj\\AppData\\Local\\Microsoft\\WindowsApps\\debian.exe config --default-user root</span><br></pre></td></tr></tbody></table></figure>\n<p>修改完成后，记得重启 wsl：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --shutdown</span><br></pre></td></tr></tbody></table></figure>\n<p>10s 后，在执行 wsl 命令，然后再次测试，看是否可行。</p>\n",
            "tags": [
                "wsl",
                "权限不足",
                "vscode"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222543/",
            "url": "http://maxshiroi.top/ug/222543/",
            "title": "部署完hexo后还应该准备哪些工作",
            "date_published": "2022-08-28T14:25:43.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>上一回我们讲到了如何部署 hexo 到 github 上，并简单的向 repo 里推送了你的博客。这一回我们简单的来完善你的博客。</p>\n<h1 id=\"0主题配置\"><a class=\"anchor\" href=\"#0主题配置\">#</a> 0. 主题配置</h1>\n<ul>\n<li>old:<br>\n<a href=\"https://shoka.lostyu.me/computer-science/note/theme-shoka-doc/display/\" title=\"Click Me\">shoka</a><br>\n<a href=\"https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md\" title=\"matery\">matery</a></li>\n<li>new<br>\n<a href=\"https://xaoxuu.com/wiki/stellar/#start\" title=\"stellar\">stellar</a><br>\n<a href=\"https://volantis.js.org/v6/getting-started/\" title=\"volantis\">volantis</a></li>\n</ul>\n<h1 id=\"1备份hexo源文件到-backup-分支\"><a class=\"anchor\" href=\"#1备份hexo源文件到-backup-分支\">#</a> 1. 备份 Hexo 源文件到 Backup 分支</h1>\n<p>由于种种原因我们总会更改自己的工作环境或者一顿操作猛如虎，将自己博客的源文件一通收拾，然后就没有然后了。<br>\n所以建议大家创建好博客记得把源文件也一同备份到 Github 上以防万一。</p>\n<h2 id=\"创建backup分支\"><a class=\"anchor\" href=\"#创建backup分支\">#</a> 创建 backup 分支</h2>\n<ol>\n<li>打开你 GitHub repo 的页面，点击左上角的分支选项。</li>\n<li>点击 View all branches，然后点击右上角的 New branch。</li>\n<li>Branch name：backup，Branch source：master</li>\n<li>create branch。</li>\n</ol>\n<h2 id=\"将backup分支切换为默认分支\"><a class=\"anchor\" href=\"#将backup分支切换为默认分支\">#</a> 将 backup 分支切换为默认分支</h2>\n<blockquote>\n<p>我也不知道为什么要这么做，但是不这么做最后一步就没法 push 了 😦</p>\n</blockquote>\n<h2 id=\"将repo-clone到本地\"><a class=\"anchor\" href=\"#将repo-clone到本地\">#</a> 将 repo clone 到本地</h2>\n<ol>\n<li>直接在博客根目录下执行这个命令：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> <span class=\"string\">'你的repo'</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>将克隆过来 repo 里的 <code>.git</code>  文件夹拷贝到博客根目录。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r ./<span class=\"string\">'你的repo'</span> ./</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>依次执行以下指令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">'Backup'</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"报错\"><a class=\"anchor\" href=\"#报错\">#</a> 报错</h2>\n<p>可能会提示如下错误</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access <span class=\"string\">'https://github.com/xxx/xxx.github.io.git/'</span>: GnuTLS recv error (-110): The TLS connection was non-properly terminated.</span><br></pre></td></tr></tbody></table></figure>\n<p>执行下面的指令即可正常推送</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> git.proxy</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"还原\"><a class=\"anchor\" href=\"#还原\">#</a> 还原</h2>\n<ol>\n<li>克隆 backup 分支到本地</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> -b backup https://github.com/maxshiro/maxshiro.github.io.git</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>安装依赖</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"2-博客加密\"><a class=\"anchor\" href=\"#2-博客加密\">#</a> 2. 博客加密</h1>\n<ul>\n<li>有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。</li>\n<li>这在 wordpress，emlog 或其他博客系统中都很容易实现，然而 hexo 除外。😦</li>\n<li>为了解决这个问题，我们需要安装 “hexo-blog-encrypt” 扩展。</li>\n</ul>\n<h2 id=\"安装指令\"><a class=\"anchor\" href=\"#安装指令\">#</a> 安装指令</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-blog-encrypt</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"快速使用\"><a class=\"anchor\" href=\"#快速使用\">#</a> 快速使用</h2>\n<p>将 password 标签添加到您的 Front-matter 里，就像这样：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: xxx</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2022-08-26 17:34:59</span><br><span class=\"line\">password: 233</span><br><span class=\"line\">tags: xxx</span><br><span class=\"line\">---</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"特性\"><a class=\"anchor\" href=\"#特性\">#</a> 特性</h2>\n<ul>\n<li>一旦你输入了正确的密码，它就会被存储在本地浏览器的 localStorage 中。按个按钮，密码将会被清空。若博客中有脚本，它将被正确地执行。</li>\n<li>支持按标签加密。</li>\n<li>所有的核心功能都是由原生的 API 所提供的。在 Node.js 中，我们使用 Crypto。在浏览器中，我们使用 Web Crypto API。</li>\n<li>PBKDF2，SHA256 被用作复制密钥，AES256-CBC 被用作加解密，我们还使用 HMAC 来验证密文的来源，并确保其纠正。</li>\n<li>广泛地使用 Promise 来进行异步操作，从而确保线程不被杜塞。</li>\n<li>过时的浏览器将无法正常显示，因此，请升级您的浏览器。</li>\n</ul>\n<h1 id=\"3-博客加速\"><a class=\"anchor\" href=\"#3-博客加速\">#</a> 3. 博客加速</h1>\n<blockquote>\n<p>于 2022 年 11 月测试 vercel.app 已经被墙了，但是还可以通过自备域名的方式。</p>\n</blockquote>\n<p>使用 Vercel 加速 Hexo 博客访问速度。<br>\n如果你想让您的博客更快的更新，那么可以采取这种方法的同时，也可以加速你的博客。<br>\n该方法适用于已经使用我的方法将博客源文件备份到了 github 的。</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<ol>\n<li><a href=\"http://xn--vercel-oi2ls3t.com\">打开 vercel.com</a>, 这个域名没有被墙。登陆的时候选择 github 方式。<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/hexoplugin/20221116141135.png\" fancybox=\"true\"></div></div>  \n</li>\n<li>创建新项目，选择 git 仓库中已存在的项目，然后选 Deploy。</li>\n<li>创建完成后就可以通过  <code>你项目名称.vercel.app</code>  访问了。但是目前 vercel.app 已经被墙了，所以还需要在设置里添加自己的域名。</li>\n<li>切换到自己的域名控制台里添加一条 cname 记录，指向这个地址  <code>cname-china.vercel-dns.com</code>  。</li>\n<li>将 Git Branch 里的内容改为存放自己博客备份的分支，比如我的就是 backup 分支。同时也可以将分配给你的二级域名也改成这个分支。<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/hexoplugin/20221116144428.png\" fancybox=\"true\"></div></div>  \n</li>\n<li>切换到 Git 项目，将 Production Branch 也更改为 backup 分支。<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/hexoplugin/20221116144502.png\" fancybox=\"true\"></div></div>  \n</li>\n<li>此时如果你的 backup 分支如果有更新，那么 vercel 会自动克隆你的源文件然后编译更新 cache。</li>\n<li>使用这种方法独立于 github page。只有当你 hexo d 之后源博客才会更新。</li>\n</ol>\n<h2 id=\"保护博客源码内容\"><a class=\"anchor\" href=\"#保护博客源码内容\">#</a> 保护博客源码内容</h2>\n<p>如果你认为这种方式要更好一些，当然你也可以选择直接关掉 github page 并将仓库设置为 private，这样别人就无法轻易获取您博客的源代码了。</p>\n<h1 id=\"写作流程\"><a class=\"anchor\" href=\"#写作流程\">#</a> 写作流程</h1>\n<h2 id=\"第一次使用\"><a class=\"anchor\" href=\"#第一次使用\">#</a> 第一次使用</h2>\n<ol>\n<li>安装 nodejs，git，hexo，npm</li>\n<li>git clone 仓库链接</li>\n<li>cd 到目录然后 cnpm install</li>\n<li>撰写博客</li>\n</ol>\n<h2 id=\"通过github-page\"><a class=\"anchor\" href=\"#通过github-page\">#</a> 通过 github page</h2>\n<ol>\n<li>撰写博客</li>\n<li>保存到 github。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">'Backup'</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>生成并提交网页。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 生成静态网页</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">// 生成目录文件</span><br><span class=\"line\">hexo algolia</span><br><span class=\"line\">// 打开本地服务器预览</span><br><span class=\"line\">hexo s</span><br><span class=\"line\">// 提交到github page</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>等待网页更新。</li>\n</ol>\n<h2 id=\"通过vercelcom\"><a class=\"anchor\" href=\"#通过vercelcom\">#</a> <a href=\"http://xn--vercel-2u3sdu.com\">通过 vercel.com</a></h2>\n<ol>\n<li>撰写博客</li>\n<li>保存到 github。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">'Backup'</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>等待网页更新。</li>\n</ol>\n",
            "tags": [
                "plugin",
                "hexo",
                "backup"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/212907/",
            "url": "http://maxshiroi.top/ug/212907/",
            "title": "Centos安装MatrixSynapseChat简易教程",
            "date_published": "2022-08-28T13:29:07.000Z",
            "content_html": "<h2 id=\"先安装前置\"><a class=\"anchor\" href=\"#先安装前置\">#</a> 先安装前置</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libtiff-devel libjpeg-devel libzip-devel freetype-devel libwebp-devel libxml2-devel libxslt-devel libpq-devel python3-virtualenv libffi-devel openssl-devel python3-devel</span><br><span class=\"line\">yum groupinstall <span class=\"string\">\"Development Tools\"</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"使用root账户接入您的centos找到合适的位置开始操作\"><a class=\"anchor\" href=\"#使用root账户接入您的centos找到合适的位置开始操作\">#</a> 使用 root 账户接入您的 centos，找到合适的位置开始操作</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> syn</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"依次执行以下指令\"><a class=\"anchor\" href=\"#依次执行以下指令\">#</a> 依次执行以下指令</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv -p python3 ./env &amp;&amp; <span class=\"built_in\">source</span> ./env/bin/activate</span><br><span class=\"line\">python3 -m pip install --upgrade pip &amp;&amp; python3 -m pip install --upgrade setuptools &amp;&amp; python3 -m pip install psycopg2-binary</span><br><span class=\"line\">python3 -m pip install matrix-synapse                         //安装synapse</span><br><span class=\"line\">python3 -m pip install -U matrix-synapse                    //更新synapse</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"将下列指令拷贝到控制台执行自动生成homeserveryaml\"><a class=\"anchor\" href=\"#将下列指令拷贝到控制台执行自动生成homeserveryaml\">#</a> 将下列指令拷贝到控制台执行，自动生成 homeserver.yaml</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m synapse.app.homeserver \\</span><br><span class=\"line\">    --server-name im.axro.top \\</span><br><span class=\"line\">    --config-path homeserver.yaml \\</span><br><span class=\"line\">    --generate-config \\</span><br><span class=\"line\">    --report-stats=no</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"编辑生成homeserveryaml\"><a class=\"anchor\" href=\"#编辑生成homeserveryaml\">#</a> 编辑生成 <code>homeserver.yaml</code></h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enable_registration: <span class=\"literal\">true</span></span><br><span class=\"line\">suppress_key_server_warning: <span class=\"literal\">true</span></span><br><span class=\"line\">bind_addresses: [<span class=\"string\">'::1'</span>, <span class=\"string\">'0.0.0.0'</span>]</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"启动关闭服务器\"><a class=\"anchor\" href=\"#启动关闭服务器\">#</a> 启动 / 关闭服务器</h2>\n<h4 id=\"注意要先进入虚拟python环境\"><a class=\"anchor\" href=\"#注意要先进入虚拟python环境\">#</a> 注意要先进入虚拟 python 环境</h4>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ./env/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\">synctl start</span><br><span class=\"line\">synctl stop</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"退出虚拟环境\"><a class=\"anchor\" href=\"#退出虚拟环境\">#</a> 退出虚拟环境</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deactivate</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"配置反代\"><a class=\"anchor\" href=\"#配置反代\">#</a> 配置反代</h2>\n<p>进入宝塔面板新建静态网站，配置 ssl，配置反向代理地址为 <code>https://localhost:8008</code> , 保存即可.</p>\n",
            "tags": [
                "nextcloud",
                "聊天室",
                "python"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211502/",
            "url": "http://maxshiroi.top/ug/211502/",
            "title": "解决linux下挂载其他linux硬盘的问题并创建smb局域网共享",
            "date_published": "2022-08-28T13:15:02.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>之前用来当作小型服务器的笔记本终于被我给淘汰了。已经关机了好久。最近买了块 <code>SATA</code>  硬盘盒，想要将这台笔记本内的数据备份出来并把硬盘用作其他用途。一切连接好后发现无法挂载，遂百度了一会查出了如下方法...</p>\n</blockquote>\n<h1 id=\"故障复现\"><a class=\"anchor\" href=\"#故障复现\">#</a> 故障复现</h1>\n<ol>\n<li>连接 linux 系统，提示插入硬盘. <code>/dev</code>  分区下出现硬盘编号</li>\n<li>执行如下指令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> backup</span><br><span class=\"line\">mount /dev/sdc/ /backup/</span><br></pre></td></tr></tbody></table></figure>\n<p>报错</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount: unknown filesystem <span class=\"built_in\">type</span> <span class=\"string\">'LVM2_member'</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"解决方法-debian系\"><a class=\"anchor\" href=\"#解决方法-debian系\">#</a> 解决方法 //Debian 系</h1>\n<ol>\n<li>执行如下指令安装 lvm2 并扫描查看以挂载的磁盘</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lvm2</span><br><span class=\"line\">sudo vgscan</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>发现如下字样后找到对应的 <code>xxx</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Found volume group <span class=\"string\">\"xxx\"</span> using metadata <span class=\"built_in\">type</span> lvm2</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>设为活动状态并查看可挂载的分区</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vgchange -ay xxx</span><br><span class=\"line\">sudo lvs</span><br><span class=\"line\">LV     VG   Attr   LSize  Origin Snap%  Move Log Copy%  Convert</span><br><span class=\"line\">data        xxx             -wi-a-              34.19G      </span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>挂载对应分区</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/xxx/data/ /backup/</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>至此已经解决了问题，如果你还想把这块硬盘里的数据共享出去，比如共享给局域网内的 windows 主机，那就接着看..</p>\n</blockquote>\n<h1 id=\"设置smb\"><a class=\"anchor\" href=\"#设置smb\">#</a> 设置 SMB</h1>\n<ol>\n<li>先更新一下</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>安装 Samba 服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install samba samba-common</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>配置共享目录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新建目录</span><br><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> /home/db</span><br><span class=\"line\">// 更改目录权限</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> 777 /home/db/ -R</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>添加账户</li>\n</ol>\n<blockquote>\n<p>要注意添加的账户需要是系统内已存在的账户</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 后面的pi为系统的用户名</span><br><span class=\"line\">sudo smbpasswd -a pi</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>输入两次密码后创建成功</p>\n</blockquote>\n<ul>\n<li>创建系统账户</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// -m参数为添加/home/username目录,username更改为你要创建的用户名.</span><br><span class=\"line\">sudo useradd -m username</span><br><span class=\"line\">// 更改账户密码</span><br><span class=\"line\">sudo passwd username</span><br><span class=\"line\">// 删除用户</span><br><span class=\"line\">sudo userdel -r username</span><br><span class=\"line\">// 更改登录zhanghu</span><br><span class=\"line\">su -username</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>配置 samba</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 建议先备份一下</span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> /etc/samba/smb.conf /etc/samba/smb.conf.bak</span><br><span class=\"line\">// 编辑</span><br><span class=\"line\">sudo vim /etc/samba/smb.conf</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>在文件最后添加</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[database] </span><br><span class=\"line\">    comment = 23333333  <span class=\"comment\"># 描述</span></span><br><span class=\"line\">\tpath = /home/db/    <span class=\"comment\"># 目录</span></span><br><span class=\"line\">\tpublic = <span class=\"built_in\">yes</span>        <span class=\"comment\"># 是否允许guest用户访问</span></span><br><span class=\"line\">\twritable = <span class=\"built_in\">yes</span>      <span class=\"comment\"># 是否允许读写</span></span><br><span class=\"line\">\tworkgroup = WORKGROUP  <span class=\"comment\"># 工作组</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>重启 samba 服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service smbd restart</span><br></pre></td></tr></tbody></table></figure>\n<p>然后在 windows 里面映射就行了</p>\n<h1 id=\"借鉴摘抄\"><a class=\"anchor\" href=\"#借鉴摘抄\">#</a> 借鉴 (摘抄)</h1>\n<p><a href=\"https://blog.csdn.net/mvp_Dawn/article/details/105847485\" title=\"ubuntu 20.04 安装配置Samba服务，Windows 和 linux协同工作\">ubuntu 20.04 安装配置 Samba 服务，Windows 和 linux 协同工作</a></p>\n",
            "tags": [
                "linux",
                "运维",
                "smb"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211224/",
            "url": "http://maxshiroi.top/ug/211224/",
            "title": "Switch模拟器的安装使用以及游戏文件获取和处理。",
            "date_published": "2022-08-28T13:12:24.000Z",
            "content_html": "<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/ns/1.gif\" fancybox=\"true\"></div></div>\n<h1 id=\"引子\"><a class=\"anchor\" href=\"#引子\">#</a> 引子</h1>\n<blockquote>\n<p>本篇文章起源于之前我想玩 mega39 而写，现在我对这些内容有了新的理解，再次进行更改记录。</p>\n</blockquote>\n<p><strong>Ryujinx 和 yuzu 模拟器任选一个即可。如果游戏运行有问题再尝试另外一个</strong></p>\n<h1 id=\"配置要求\"><a class=\"anchor\" href=\"#配置要求\">#</a> 配置要求</h1>\n<blockquote>\n<p><code>ryujinx</code>  和  <code>yuzu</code>  都适用。</p>\n</blockquote>\n<h2 id=\"软体\"><a class=\"anchor\" href=\"#软体\">#</a> 软体:</h2>\n<blockquote>\n<p>建议运行 Windows 10 1803 或较新版本以获得最佳性能。这里仅列出 Win10 64 位 要求.</p>\n<p>如果你要在 linux 下使用则建议您找找其他的教程，我目前还没有使用 linux 的机器。</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>硬体要求适用于所有 Switch 游戏.</p>\n</blockquote>\n<h2 id=\"cpu\"><a class=\"anchor\" href=\"#cpu\">#</a> CPU:</h2>\n<blockquote>\n<p>任何支持 FMA 指令集的 x86_64 CPU。 建议使用 6 个或更多线程。</p>\n</blockquote>\n<ul>\n<li>最小: Intel Core i5-4430 / AMD Ryzen 3 1200</li>\n<li>推荐: Intel Core i5-10400 / AMD Ryzen 5 3600</li>\n</ul>\n<h2 id=\"专用显示卡\"><a class=\"anchor\" href=\"#专用显示卡\">#</a> 专用显示卡:</h2>\n<p><strong>必须使用 OpenGL 4.6 或 Vulkan 1.1 兼容硬件和驱动程序。 推荐使用支持半浮点以及 4GB 显示内存。</strong></p>\n<blockquote>\n<p>大多数游戏都可以在 Fermi 系列（400 系列）或更高版本的 Nvidia GPU 上运行，但强烈建议至少使用 Pascal（1000 系列）。</p>\n</blockquote>\n<ul>\n<li>最小: NVIDIA GeForce GT 1030 2GB / AMD Radeon RX 550 2GB</li>\n<li>推荐: NVIDIA GeForce GTX 1650 4GB / AMD Radeon RX Vega 56 8GB</li>\n</ul>\n<h2 id=\"集成显示卡\"><a class=\"anchor\" href=\"#集成显示卡\">#</a> 集成显示卡:</h2>\n<blockquote>\n<p>集成显卡的性能表现很差。 独立显卡能够在所有场景中产生更好的效果。 这里列出 iGPU 支持。</p>\n</blockquote>\n<ul>\n<li>最小: Intel HD Graphics 520 / AMD Radeon Vega 3</li>\n<li>推荐: Intel UHD Graphics 750 / AMD Radeon Vega 7</li>\n</ul>\n<h2 id=\"内存\"><a class=\"anchor\" href=\"#内存\">#</a> 内存:</h2>\n<blockquote>\n<p>因为集成 GPU 调用内存作为显存 (VRAM)，所以在此配置中的内存要求要高些。</p>\n</blockquote>\n<ul>\n<li>最小专用显卡内存: 8GB</li>\n<li>最小集成显卡内存: 12GB</li>\n<li>推荐: 16GB</li>\n</ul>\n<hr>\n<h1 id=\"安装前\"><a class=\"anchor\" href=\"#安装前\">#</a> 安装前</h1>\n<blockquote>\n<p>如果你已经有了 Switch 则可以提取自己的。我就不具体写教程了。可以看看 Ryujinx 官方提供的。</p>\n</blockquote>\n<ul>\n<li>\n<p>prod.key 导出:<a href=\"https://github.com/Ryujinx/Ryujinx/wiki/Keys\">https://github.com/Ryujinx/Ryujinx/wiki/Keys</a></p>\n</li>\n<li>\n<p>固件导出:<a href=\"https://github.com/Ryujinx/Ryujinx/wiki/Firmware-Dumping-Guide-(hbmenu-&amp;-Goldleaf)\">https://github.com/Ryujinx/Ryujinx/wiki/Firmware-Dumping-Guide-(hbmenu-&amp;-Goldleaf)</a></p>\n</li>\n</ul>\n<h1 id=\"下载安装-yuzu-软件\"><a class=\"anchor\" href=\"#下载安装-yuzu-软件\">#</a> 下载安装 yuzu 软件。</h1>\n<blockquote>\n<p>下列操作建议在科学上网环境下进行.</p>\n</blockquote>\n<ol>\n<li>去 <a href=\"https://yuzu-emu.org/\">https://yuzu-emu.org/</a> 下载最新的 yuzu 模拟器。并运行软体.\n<blockquote>\n<p>我在下方的链接里也放了捐赠版也就是 EA，但是版本不会经常更新。如果安装出现问题可以试试。<br>\nyuzu EA 版本还支持多人联机的功能，但是需要你使用梯子才可以比较好的使用。</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>yuzu Early Access 这个版本是只有捐赠用户才可以使用，如果条件支持可以去支持一波.</li>\n<li>普通版本已经足够使用.</li>\n</ul>\n<ol start=\"2\">\n<li>由于安装的时候会连接 Github 服务器下载文件，因此强烈建议使用全局科学上网.</li>\n<li>安装完成后直接启动，提示缺少 key 文件，选 OK :</li>\n</ol>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/ns/20220920215251.png\" fancybox=\"true\"></div></div>  \n</blockquote>\n<ol>\n<li>\n<p>然后会跳出提示框问是否帮助改进 yuzu , 我们点 no.</p>\n</li>\n<li>\n<p>此时已经完成安装了模拟器本体，不过想要正常运行游戏还需要做以下操作</p>\n</li>\n<li>\n<p>执行工具栏中的  <code>文件</code>  -&gt;  <code>Open yuzu Folder</code>  打开 yuzu 软件自动创建的目录，然后在下方的链接里找到 key 文件夹，下载  <code>prod.keys</code>  文件扔进 keys 文件夹内.</p>\n</li>\n<li>\n<p>然后再次打开 yuzu 就不会再弹出刚才的对话框了.</p>\n</li>\n</ol>\n<h1 id=\"下载安装-ryujinx-软件\"><a class=\"anchor\" href=\"#下载安装-ryujinx-软件\">#</a> 下载安装 Ryujinx 软件</h1>\n<blockquote>\n<p>同样下列操作建议在科学上网环境下进行.</p>\n</blockquote>\n<ol>\n<li>打开 <a href=\"https://ryujinx.org/\">https://ryujinx.org/</a> ，选择上方 Download 下载最新编译版本解压。并运行软体.\n<blockquote>\n<p><a href=\"https://github.com/Ryujinx/Ryujinx/actions\">Action</a> 如果你有能力可以直接到 Ryujin 模拟器 github 获取最新测试版的编译版本。</p>\n</blockquote>\n</li>\n<li>打开 <a href=\"https://darthsternie.net/switch-firmwares/\">https://darthsternie.net/switch-firmwares/</a> ，下载最新的固件到本地备用。</li>\n<li>在模拟器最上方依次点击 <code>File</code>  →  <code>Open Ryujinx Folder</code> 。</li>\n<li>进入 system 文件夹，在下方的链接里找到 key 文件夹，下载  <code>prod.keys</code>  文件扔进 keys 文件夹内.</li>\n<li>在模拟器最上方依次点击  <code>Tools</code>  →  <code>Install Firmware</code>  →  <code>Install a firmware from XCI or ZIP</code> , 选择刚才下载的固件文件点击  <code>open</code> 。\n<ol>\n<li>若出现报错，如下图所示，是因为  <code>prod.keys</code>  文件与  <code>Firmware</code>  不匹配，prod.keys 文件要与 Firmware 匹配才可以安装成功，因此你若想安装新的 firmware，则需要你自己去找对应的 prod.keys\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/ns/20221107165255.png\" fancybox=\"true\"></div></div>  \n</blockquote>\n</li>\n</ol>\n</li>\n<li>添加游戏目录，依次点击  <code>Options</code>  →  <code>Settings</code>  ，打开设置，在  <code>General</code>  选项卡，点击  <code>Add</code></li>\n<li>在弹出的窗口中选择你的游戏目录，然后点击右下角的  <code>Add</code> ，然后点击 <code>Save</code> 。</li>\n</ol>\n<hr>\n<h1 id=\"模拟器设置yuzu和ryujinx部分内容通用有区别我会标注出来\"><a class=\"anchor\" href=\"#模拟器设置yuzu和ryujinx部分内容通用有区别我会标注出来\">#</a> 模拟器设置（yuzu 和 ryujinx 部分内容通用，有区别我会标注出来）</h1>\n<p>执行  <code>模拟(E)</code>  -&gt;  <code>Configure...</code>  打开 yuzu 设置.</p>\n<h2 id=\"通用选单\"><a class=\"anchor\" href=\"#通用选单\">#</a> 通用选单</h2>\n<ul>\n<li>Interface 下第一项（interface language）可以更改显示语言，建议先把这个改为中文。</li>\n<li>勾选  <code>多核 CPU 仿真</code>  可在一定程度上改进性能.</li>\n<li><code>运行速度限制</code>  更改到 100% 可解决某些游戏没有帧数限制导致游戏速度异常。</li>\n<li>网络选单下可以填写你注册 yuzu 网站后的令牌以此来进行联机。</li>\n</ul>\n<h2 id=\"系统选单\"><a class=\"anchor\" href=\"#系统选单\">#</a> 系统选单</h2>\n<ul>\n<li>在 系统 选单，系统 选项卡，系统设置 框架内根据需要设置  <code>语言</code> ， <code>地区</code>  和  <code>时区</code> ，这里推荐  <code>中文</code> ， <code>中国</code> ， <code>中文</code>  不然默认语言看不懂 (</li>\n<li>配置选项卡可以更改个人信息但是没什么用。</li>\n<li>网络选项卡若要使用联机服务则需要选择一种连接方式，通常是以太网或者 WLAN。这取决于你当前使用什么方式上网。</li>\n</ul>\n<h2 id=\"图形选单\"><a class=\"anchor\" href=\"#图形选单\">#</a> 图形选单</h2>\n<ul>\n<li><code>API</code>  任意选择，N 卡选 Vulkan 有时候也更好。</li>\n<li>如果你的设备是笔记本，那你需要更改  <code>设备</code>  为自己的独立显卡。</li>\n</ul>\n<h2 id=\"控制选单\"><a class=\"anchor\" href=\"#控制选单\">#</a> 控制选单</h2>\n<ul>\n<li><code>输入设备</code>  内可以选择自己的手柄 / 控制器。唯一需要注意的是 switch 按键的 ab/xy 按键是反过来的，建议游玩的时候别看手柄。</li>\n<li>最后点击  <code>OK</code>  即可完成配置...</li>\n</ul>\n<h1 id=\"下载游戏\"><a class=\"anchor\" href=\"#下载游戏\">#</a> 下载游戏</h1>\n<blockquote>\n<p>我发现<a href=\"https://xxxxx520.com/\" title=\"Switch520\"> Switch520</a> 这里的游戏下载没那么多门槛要会员什么什么的，不过都是百度网盘，建议整一个百度网盘会员.(现在有插件可以实现免会员高速下载，有空我再写写：P)</p>\n</blockquote>\n<p>文中提到的文件可以到这个链接：<strong><a href=\"https://maxshiro-my.sharepoint.com/:f:/g/personal/maxshiroi_maxshiro_onmicrosoft_com/El4X0CVz-TBKqO0k_-_BWRcBt4uT7Tf-gVJtrKdPhbyP5A?e=IUlqdf\" title=\"Sharepoint\">Sharepoint</a></strong> 里面下载获取。</p>\n<p>下载 xxx.xci 文件，这就是游戏本体了。将这个游戏本体放到任意文件夹内 (不要有中文) . 双击 yuzu 模拟器中间，选择你放 xci 文件的那个文件夹打开，然后你就会发现游戏已经加载出来了。双击打开爽玩吧～</p>\n<h1 id=\"处理-switch-游戏文件\"><a class=\"anchor\" href=\"#处理-switch-游戏文件\">#</a> 处理 Switch 游戏文件</h1>\n<p>switch 可以下载到的文件有很多种，因此有些时候我们下载得到的文件并不是 xci 或者 nsp 这样的可执行文件。这种时候就需要自己转换游戏文件格式。</p>\n<h2 id=\"常见的几种格式\"><a class=\"anchor\" href=\"#常见的几种格式\">#</a> 常见的几种格式</h2>\n<ul>\n<li><code>xci</code> ：可以理解 XCI 文件直接从卡带提取的文件，而 XCI 整合版（整合了游戏升级补丁 + DLC 的版本是最方便的 推荐下载）</li>\n<li><code>xcz</code> : 是 xci 压缩后的文件，需要转换为 xci 才可以正常使用。</li>\n<li><code>nsp</code> : nsp 相当于正版系统数字游戏，nsp 没有整合版，当您看到文件名称有  <code>000</code>  或者  <code>v0</code>  说明是本体。而文件名中带有  <code>Updata</code>  的则为升级补丁，带有  <code>DLC</code>  字样则为扩展游戏内容的额外内容。</li>\n<li><code>nsz</code> : 有些 DLC 或者升级补丁会打包为 nsz 文件，打包的时候可以忽略，如果是游戏文件则您需要转换为 nsp 文件才可以运行。</li>\n</ul>\n<h2 id=\"四种格式之间转换\"><a class=\"anchor\" href=\"#四种格式之间转换\">#</a> 四种格式之间转换。</h2>\n<blockquote>\n<p>使用 NSCB 软件进行打包等操作，我获取到的适配 15.0.0 版本的。这软件有时效性，因此如果不能正常使用则需要更新。<br>\n<a href=\"https://wwb.lanzoum.com/iVl9f0dw6svg\">NSCB</a></p>\n</blockquote>\n<h1 id=\"emusak-ui-软件\"><a class=\"anchor\" href=\"#emusak-ui-软件\">#</a> EmuSAK UI 软件</h1>\n<blockquote>\n<p>使用此软件可以更方便的管理你电脑上现有的模拟器以及游戏，还可以获取最新的 prod.key 等文件。<br>\n<a href=\"https://github.com/CapitaineJSparrow/emusak-ui\">https://github.com/CapitaineJSparrow/emusak-ui</a></p>\n</blockquote>\n<p>EmuSAK UI 功能一览：</p>\n<ul>\n<li>添加并管理电脑上的多个 switch 模拟器 (单机或者联机版 ryujinx)</li>\n<li>找到并列出电脑中的 switch 游戏</li>\n<li>展示本地着色器缓存 &amp; emusak 在线着色器缓存 (如果本地缓存较少可以下载在线缓存)</li>\n<li>更新固件</li>\n<li>更新 prod keys 密钥</li>\n<li>给下载游戏存档</li>\n<li>下载着色器缓存</li>\n<li>下载 mod 模组</li>\n<li>一键分享电脑中的着色器缓存 (shader cache)</li>\n</ul>\n",
            "tags": [
                "switch",
                "animal crossing",
                "Project Diva",
                "Miku",
                "Mega39",
                "emulater",
                "yuzu",
                "ryujinx"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/210724/",
            "url": "http://maxshiroi.top/ug/210724/",
            "title": "【虚拟Vocal】 Synthesize V 初代整合",
            "date_published": "2022-08-28T13:07:24.000Z",
            "content_html": "<h1 id=\"软件介绍\"><a class=\"anchor\" href=\"#软件介绍\">#</a> 软件介绍</h1>\n<p>Synthesizer V 是 Dreamtonics 开发的系列歌声合成软件，它结合了强大的歌声合成引擎和直观灵活的用户界面，只需绘制旋律并注入歌词，即可轻松创作原创歌曲。</p>\n<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>当你想要摆脱 Vocaloid 软件的支配，想要试试其他同类型的软件。您肯定会搜到这个软件。但是很不幸，当您点开官网查看售价，显然单个声库加 pro 版软件 899 的价格让您打了退堂鼓。<br>\n  您只好把思路转向搜索 crack 版本软件。又很不幸，这个软件 crack 版的本体和声库都很难寻找。<br>\n  在这里恭喜您找到了这篇文章。可万幸中的不幸就是，我也没有这个软件的 V2 破解版。但是我找到了 V1 的破解版，在此提供给大家。</p>\n<h1 id=\"关于软件\"><a class=\"anchor\" href=\"#关于软件\">#</a> 关于软件</h1>\n<p>软件的获取来源是 GitHUB 用户 <code>CJLU</code>  的 <code>Synthesizer-V-FE</code> , 版本为 1.8.0，所有功能正常使用。链接地址：<a href=\"https://github.com/CJLU-source/Synthesizer-V-FE\" title=\"给特何不\">给特何不</a></p>\n<h1 id=\"关于声库\"><a class=\"anchor\" href=\"#关于声库\">#</a> 关于声库</h1>\n<p>目前手头上只有这几个声库：</p>\n<h2 id=\"eng-英语\"><a class=\"anchor\" href=\"#eng-英语\">#</a> Eng (英语)</h2>\n<ul>\n<li>爱莲娜芙缇 (女)</li>\n</ul>\n<h2 id=\"zh-中文\"><a class=\"anchor\" href=\"#zh-中文\">#</a> Zh (中文)</h2>\n<ul>\n<li>苍穹 (女)</li>\n<li>赤羽 (女)</li>\n<li>海伊 (女)</li>\n<li>诗岸 (女)</li>\n</ul>\n<h2 id=\"jp-日文\"><a class=\"anchor\" href=\"#jp-日文\">#</a> JP (日文)</h2>\n<ul>\n<li>闇音レンリ (女)</li>\n<li>玄武 (男)</li>\n</ul>\n<h1 id=\"下载地址-包含全部内容\"><a class=\"anchor\" href=\"#下载地址-包含全部内容\">#</a> 下载地址 （包含全部内容）</h1>\n<blockquote>\n<p>特殊原因暂不提供 😦<br>\n(其实是文件丢了</p>\n</blockquote>\n",
            "tags": [
                "Vocal",
                "AI",
                "歌声合成"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/205944/",
            "url": "http://maxshiroi.top/ug/205944/",
            "title": "Win11 安装 WSA 简易教程",
            "date_published": "2022-08-28T12:59:44.000Z",
            "content_html": "<blockquote>\n<p>微软终于在昨天上线了 WSA 的测试版本，此次只有美国地区上线了。因此如果你的 Win11 系统为美区的话，可以直接点击 <a href=\"https://www.microsoft.com/store/productId/9P3395VX91NR\" title=\"这个链接\">这个链接</a> 进行安装。如果非美区那就接着看步骤吧</p>\n</blockquote>\n<blockquote>\n<p>bug 还是有很多，首先是 WSA 无法调用 GPU, 这就导致很多 3d 游戏会很卡，实测明日方舟帧数不到 20 帧。然后安装 WSA 要启用 Hyper-V 即微软的虚拟机平台，打开这个会导致无法再安装和使用其他安卓模拟器。和市面上大多数安卓模拟器相比，微软这个 WSA 是 ARM 翻译运行的，安卓版本更高 (Android 11), 可以运行 ARM 程序。与系统集成度更好 (虽然目前还没有实现 WSL 那样的文件访问) 而模拟器大多都为 Android x86 项目改的，因此最高只能到 Android 9.</p>\n</blockquote>\n<blockquote>\n<p>如果你是想尝尝鲜，试试这个新功能那我还是推荐试一试。如果你主要想拿来打游戏，日常使用的话那还是更推荐安卓模拟器一些.</p>\n</blockquote>\n<h1 id=\"开启虚拟化\"><a class=\"anchor\" href=\"#开启虚拟化\">#</a> 开启虚拟化</h1>\n<blockquote>\n<p>PS: 如果之前你有禁用过 Hyper-V 的话记得使用管理员权限打开 Powershell 然后通过这个指令这个指令重新打开，不记得有没有那就跳过:</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bcdedit /set hypervisorlaunchtype auto</span><br></pre></td></tr></tbody></table></figure>\n<ol>\n<li>打开开始菜单，直接搜索控制面板，然后打开.</li>\n<li>找到  <code>程序和功能</code>  - <code>启用或关闭 Windows 功能</code>  并点击打开，会弹出一个窗口.</li>\n<li>在弹出窗口里面勾选  <code>Hyper-V</code> 、 <code>Windows 虚拟机监控程序平台</code> 、 <code>适用于 Linux 的 Windows 子系统</code> 、 <code>虚拟机平台</code>  这几项，然后点击确定。系统会自动查找更新并安装.</li>\n<li>等待重启过后就可以进行下一步了.</li>\n</ol>\n<h1 id=\"安装本体\"><a class=\"anchor\" href=\"#安装本体\">#</a> 安装本体</h1>\n<ol>\n<li>首先复制上面那个链接.</li>\n<li><a href=\"https://store.rg-adguard.net/\" title=\"安装包抓包\">安装包抓包</a>，点开这个网址，将第一步复制的链接粘贴到搜索框，右边选择  <code>slow</code>  然后点对勾.</li>\n<li>找到最下面名为  <code>MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle</code>  的一项，注意大小为  <code>1.21GB</code>  , 直接点击进行一个下载.</li>\n<li>找到你下载的文件，然后右键  <code>开始按钮</code>  选择  <code>Windows 终端 (管理员)</code></li>\n<li>然后会打开 Powershell 窗口，在里面输入指令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add-appxpackage <span class=\"string\">\"你下载文件的完整路径\"</span> </span><br><span class=\"line\"><span class=\"comment\"># example</span></span><br><span class=\"line\">add-appxpackage <span class=\"string\">\"D:\\download\\MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle\"</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>等他跑完以后就会在开始菜单里出现  <code>Windows Subsystem for Android™</code>  点击打开是下面这个界面就说明安装成功了.</li>\n</ol>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/wsa/20220920220234.png\" fancybox=\"true\"></div></div>  \n<h1 id=\"安装apk\"><a class=\"anchor\" href=\"#安装apk\">#</a> 安装 apk</h1>\n<ol>\n<li>点击文件后面的按钮会自动启动 WSA, 等打开后下面的 ip 地址会刷新。此时我们将开发人员模式打开.</li>\n<li>安装 ADB, 下载 <a href=\"https://nas.axro.top/index.php/s/frYxCHg7FfabNEY\" title=\"这个文件\">这个文件</a> 然后解压到任意目录，然后打开解压出来的文件夹，名称为  <code>platform-tools</code> .</li>\n<li>按住 <code>Shift</code>  键右击文件夹的空白处，选择 <code>显示更多选项</code>  - <code>在此处打开 Powershell 窗口(s)</code> , 然后在打开的窗口内依次输入以下指令:</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb connect 127.0.0.1:58526 <span class=\"comment\">#这个 127.0.0.1:58526 为你的开发人员选项那一栏里显示的地址.</span></span><br><span class=\"line\"><span class=\"comment\"># 第一次可能会失败, 再输入一次就可以了.</span></span><br><span class=\"line\">adb install -r xxx.apk</span><br><span class=\"line\"><span class=\"comment\"># 这个指令为安装 apk, 将 xxx 替换为你要安装的 apk 文件名称.</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>显示安装完成就会出现在你的开始菜单里，然后直接点击进行一个打开.</li>\n</ol>\n<h1 id=\"qa\"><a class=\"anchor\" href=\"#qa\">#</a> Q&amp;A</h1>\n",
            "tags": [
                "Android",
                "Hyper-V",
                "WSA"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/124600/",
            "url": "http://maxshiroi.top/ug/124600/",
            "title": "【VMware】解决新版本的VMware虚拟机无法正常在旧版本的Windows上安装VMware Tools",
            "date_published": "2022-08-25T04:46:00.000Z",
            "content_html": "<h1 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h1>\n<p>因为学习需要，要求安装 <code>Windows server 2008 R2</code> 。安装时一切正常，但是到了安装 <code>VMware Tools</code>  时，弹出了下列提示：</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/vmwarebug/20220920220101.png\" fancybox=\"true\"></div></div>  \n<h1 id=\"其后\"><a class=\"anchor\" href=\"#其后\">#</a> 其后</h1>\n<p>我尝试百度搜索了解决办法，导致这种情况的大概解释为：</p>\n<blockquote>\n<p>原来，微软更新了驱动程序的签名算法，从 2019 年初开始，逐步弃用 SHA-1，改为 SHA-2。个人推测新版的 VMCI 驱动用的是 SHA-2 签名，而 <code>win7</code>  不支持 SHA-2 签名，所以出现了这个问题。</p>\n</blockquote>\n<p>那么怎么办呢？</p>\n<blockquote>\n<p>可以从 <code>Microsoft Update Catalog</code>  下载 <code>KB4474419</code>  和  <code>KB4490628</code>  这两个补丁，然后安装到 <code>win7</code>  虚拟机中。在没有成功安装 <code>VMware Tools</code>  的情况下，传文件不太方便，可以用虚拟机里浏览器访问下载页面，然后直接在虚拟机里下载安装。</p>\n</blockquote>\n<p>可是在 <code>winserver</code>  虚拟机里很难进行操作更别说老旧的 IE 操作更不方便，而且 <code>windows server</code>  的网络管理大家也都知道，会拦截所有地址。所以直到最后我也没法访问到微软的补丁界面。</p>\n<h1 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<p>我直接搜索了 <code>VMware Tools</code> ，到其官网上找到了旧版本的 <code>Tools</code>  镜像文件，随后直接对其进行一个挂载，这时直接弹出了自动运行窗口，进行一顿下一步下一步之后，成功将其安装到了虚拟机内。</p>\n<h1 id=\"旧版本下载地址\"><a class=\"anchor\" href=\"#旧版本下载地址\">#</a> 旧版本下载地址</h1>\n<p><a href=\"https://packages.vmware.com/tools/releases/10.3.5/windows/\" title=\"点我去官网下载\">点我去官网下载</a><br>\n打开以后下载大小为 <code>114M</code>  的映像文件，然后手动挂载到虚拟机上，便会自动运行。</p>\n<p>转载需注明出处！</p>\n",
            "tags": [
                "vmware",
                "bug"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/205645/",
            "url": "http://maxshiroi.top/ug/205645/",
            "title": "使用树莓派4B+Docker Openwrt实现旁路由",
            "date_published": "2022-04-26T12:56:45.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<blockquote>\n<p>普通路由器往往受限于硬体性能而缺乏很多功能。但是其拥有多网口和无线功能的支持相对较强。为了能实现更多实用功能并且利用上已经吃灰了很久的树莓派，打算用树莓派来当作旁路由.</p>\n</blockquote>\n<h1 id=\"硬体\"><a class=\"anchor\" href=\"#硬体\">#</a> 硬体</h1>\n<h2 id=\"路由\"><a class=\"anchor\" href=\"#路由\">#</a> 路由</h2>\n<ul>\n<li>我使用的是小米路由 3G (下面称为 <code>R3G</code> ). 当时购买的是小米路由 4 版本，但是其缺乏很多功能。就比如说非常实用的 usb 接口。有了 usb 接口以后就可以愉快刷机了。所以我收到货就直接退货换了 R3G...</li>\n<li>R3G 优点是有一个 usb3.0 的接口，所以可以直接拿它来挂载移动硬盘也是没问题的。还有 256M 的闪存。缺点是只有两个 RJ45LAN 口，一个 RJ45WAN 口足够家用。所以后来我又白嫖了我哥在外地买的一台 TPlink 五口交换机解决了网口不够的问题...</li>\n<li>如果你和我一样拥有 R3G. 我建议刷写不死鸟 breed 搭配<a href=\"https://opt.cn2qq.com/padavan/\" title=\"hiboyhiboyhiboy\"> hiboyhiboyhiboy</a> 的固件，来实现更多功能...</li>\n</ul>\n<h2 id=\"树莓派\"><a class=\"anchor\" href=\"#树莓派\">#</a> 树莓派</h2>\n<ul>\n<li>树莓派 4B 我购买的是 4G 内存版本。采用 5V3A,Type-C 供电接口，你甚至可以用一个充电宝和一根 Type-C 线来给树莓派供电。两个 MicroHDMI 接口支持 4K 视频输出。一个极为先进的 3.5mm 音频接口。四个 Type-A USB 接口，其中分为两个 usb2.0 协议，两个 USB3.0 协议。一个千兆 RJ45 网口。另外机器还自带 wifi 模块，就是别指望这个 wifi 信号有多好了...</li>\n<li>我在购买时还一并购买了一张 32G 闪迪的 SD 卡，以及适用于 4B 的九层亚克力外壳。有一说一，这个外壳属实好看...</li>\n<li>不过如果拿它刷 openwrt 只来当作路由器实在大材小用。所以我采用 OPENFANS 和<a href=\"http://www.pifan.org.cn/\" title=\"树莓派爱好者基地\">树莓派爱好者基地</a>联合编译的<a href=\"https://github.com/openfans-community-offical/Debian-Pi-Aarch64\" title=\"Debian-Pi-Aarch64\"> Debian-Pi-Aarch64</a> 来使用</li>\n</ul>\n<h1 id=\"软体\"><a class=\"anchor\" href=\"#软体\">#</a> 软体</h1>\n<h2 id=\"准备\"><a class=\"anchor\" href=\"#准备\">#</a> 准备</h2>\n<ul>\n<li>从上方给出的链接下载<a href=\"https://github.com/openfans-community-offical/Debian-Pi-Aarch64\" title=\"Debian-Pi-Aarch64\"> Debian-Pi-Aarch64</a>, 我这里使用的是没有图形界面的增强版，即 <code>2021-06-11-OPENFANS-Debian-Buster-Aarch64-ext4-v2021-2.0-U6-Release.img.xz</code></li>\n<li>百度搜索 Rufus, 下载到本地</li>\n</ul>\n<h2 id=\"安装-debian-pi-aarch64\"><a class=\"anchor\" href=\"#安装-debian-pi-aarch64\">#</a> 安装 Debian-Pi-Aarch64</h2>\n<ol>\n<li>将 SD 卡接入读卡器连接电脑。注意提前备份 SD 卡的数据，接下来的操作会清除 SD 卡内的全部数据.</li>\n<li>打开 Rufus 软体，在 <code>设备</code> 一栏内选择你的 SD 卡，在 <code>引导类型选择</code> 栏里面单击后面的 <code>选择</code> 按钮，选择你下载的 xz 文件</li>\n<li>单击下面的 <code>开始</code> 按钮即可开始刷写。大概三四分钟后即可刷写成功。请耐心等待...</li>\n<li>刷写完成后在任务栏上将 SD 卡弹出，即可拔下读卡器。将 SD 卡插入树莓派里面即可.</li>\n<li>将树莓派的 LAN 口与路由器的 LAN 口连接，为树莓派接入电源。此时树莓派会自行重启三次左右，以完成基本配置。此时可以喝杯咖啡等待三分钟左右.</li>\n<li>电脑登入路由器控制页面，查找树莓派的 ip, 我这里查到的是 <code>192.168.0.90</code> , 接下来的教程将以这个地址为准...</li>\n<li>如果您使用的是 Win10 系统，那么可以直接按下 <code>Windows徽标键</code>  + <code>R</code> , 输入 <code>CMD</code>  指令单击回车来打开 <code>CMD</code> , 使用 <code>SSH</code>  的方式连入树莓派。当然你也可以使用其他第三方软件来实现.</li>\n<li>使用 <code>ssh -p 22 pi@192.168.0.90</code>  指令来接入树莓派，如果没有出错的话接下来会弹出提示，输入 <code>yes</code>  并按下回车即可。当你看见 password 时，直接输入默认密码 <code>raspberry</code> , 按下回车即可连入树莓派.</li>\n<li>更新一下就可以正常使用了</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"配置-debian-pi-aarch64\"><a class=\"anchor\" href=\"#配置-debian-pi-aarch64\">#</a> 配置 Debian-Pi-Aarch64</h2>\n<p><strong>如果自己会配置那么这步可以跳过了</strong></p>\n<blockquote>\n<p>可以参考<a href=\"https://gitee.com/openfans-community/Debian-Pi-Aarch64#3%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E\" title=\"这里\">这里</a>来配置</p>\n</blockquote>\n<h3 id=\"切换账户\"><a class=\"anchor\" href=\"#切换账户\">#</a> 切换账户</h3>\n<p><code>su</code>  或者 <code>sudo -i</code></p>\n<h3 id=\"更改账户的密码\"><a class=\"anchor\" href=\"#更改账户的密码\">#</a> 更改账户的密码</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 使用下面指令来更改pi用户的密码</span><br><span class=\"line\">// 重复输入两次即可</span><br><span class=\"line\">sudo passwd pi</span><br><span class=\"line\"></span><br><span class=\"line\">// 使用这个指令来更改root账户的密码</span><br><span class=\"line\">sudo passwd root</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"挂载smb硬盘\"><a class=\"anchor\" href=\"#挂载smb硬盘\">#</a> 挂载 smb 硬盘</h3>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> db</span><br><span class=\"line\">mount -o username=xxx,password=xxx,dir_mode=0777,file_mode=0777 //192.168.0.15/database /db</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装-openwrt\"><a class=\"anchor\" href=\"#安装-openwrt\">#</a> 安装 Openwrt</h2>\n<blockquote>\n<p>在安装之前首先开启 docker 服务并设置开机自动启动</p>\n</blockquote>\n<ul>\n<li>启用和运行 Docker 服务</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 开机自动启动Docker服务</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> docker.service</span><br><span class=\"line\"></span><br><span class=\"line\">// 启动Docker服务</span><br><span class=\"line\">systemctl start docker.service</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">######</span></span><br><span class=\"line\"></span><br><span class=\"line\">// 停止Docker服务</span><br><span class=\"line\">systemctl stop docker.service</span><br><span class=\"line\"></span><br><span class=\"line\">// 禁止Docker服务开机启动</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> docker.service</span><br></pre></td></tr></tbody></table></figure>\n<ol>\n<li>打开网卡混杂模式</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ip <span class=\"built_in\">link</span> <span class=\"built_in\">set</span> eth0 promisc on</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>创建网络</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker network create -d macvlan --subnet=192.168.0.0/24 --gateway=192.168.0.1 -o parent=eth0 macnet </span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>使用 <code>sudo ifconfig</code>  命令查看树莓派 <code>eth0</code>  网卡的参数来更改<br>\n <code>--subnet</code>  参数改为树莓派所处网段<br>\n <code>--gateway</code>  参数改为树莓派所处网段的网关</p>\n</blockquote>\n<ul>\n<li>使用 <code>docker network ls</code>  查看创建好的网络</li>\n</ul>\n<ol start=\"3\">\n<li>拉取 Openwrt 镜像</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull registry.cn-shanghai.aliyuncs.com/suling/openwrt:latest </span><br></pre></td></tr></tbody></table></figure>\n<ul>\n<li>执行 <code>docker images</code>  命令查看现存镜像</li>\n</ul>\n<ol start=\"4\">\n<li>创建并启动容器</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --restart always --name openwrt -d --network macnet --privileged registry.cn-shanghai.aliyuncs.com/suling/openwrt:latest /sbin/init </span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p><code>--restart always</code>  参数表示容器退出时始终重启，使服务尽量保持始终可用；<br>\n <code>--name openwrt</code>  参数定义了容器的名称；<br>\n <code>-d</code>  参数定义使容器运行在 <code>Daemon</code>  模式；<br>\n <code>--network macnet</code>  参数定义将容器加入 <code>maxnet</code>  网络；<br>\n <code>--privileged</code>  参数定义容器运行在特权模式下；<br>\n <code>registry.cn-shanghai.aliyuncs.com/suling/openwrt:latest</code>  为 Docker 镜像名，因容器托管在阿里云 Docker 镜像仓库内，所以在镜像名中含有阿里云仓库信息；<br>\n <code>/sbin/init</code>  定义容器启动后执行的命令。</p>\n</blockquote>\n<ul>\n<li>可以使用 <code>docker ps -a</code>  命令查看当前运行的容器</li>\n</ul>\n<blockquote>\n<p>若容器运行信息 <code>STATUS</code>  列为 <code>UP</code>  状态，则说明容器运行正常。</p>\n</blockquote>\n<ol start=\"5\">\n<li>进入容器并修改相关参数</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker <span class=\"built_in\">exec</span> -it openwrt bash</span><br></pre></td></tr></tbody></table></figure>\n<ul>\n<li>编辑 <code>OpenWrt</code>  的网络配置文件：</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/config/network</span><br></pre></td></tr></tbody></table></figure>\n<ul>\n<li>更改 LAN 口设置</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config interface <span class=\"string\">'lan'</span></span><br><span class=\"line\">        option <span class=\"built_in\">type</span> <span class=\"string\">'bridge'</span></span><br><span class=\"line\">        option ifname <span class=\"string\">'eth0'</span></span><br><span class=\"line\">        option proto <span class=\"string\">'static'</span></span><br><span class=\"line\">        option ipaddr <span class=\"string\">'192.168.0.2'</span></span><br><span class=\"line\">        option netmask <span class=\"string\">'255.255.255.0'</span></span><br><span class=\"line\">        option ip6assign <span class=\"string\">'60'</span></span><br><span class=\"line\">        option gateway <span class=\"string\">'192.168.0.1'</span></span><br><span class=\"line\">        option broadcast <span class=\"string\">'192.168.0.255'</span></span><br><span class=\"line\">        option dns <span class=\"string\">'192.168.0.1'</span></span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p><code>option ipaddr</code>  为 OpenWrt 的 IP 地址，可以根据自己喜好修改，我这里定义为了 <code>192.168.0.2</code></p>\n</blockquote>\n<ul>\n<li>重启网络</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/network restart</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>进入控制面板</li>\n</ol>\n<blockquote>\n<p>打开电脑的浏览器，使用自己定义的地址进入。我这里是 <code>192.168.0.2</code> <br>\n 用户名: <code>root</code> <br>\n 密码: <code>password</code></p>\n</blockquote>\n<ol start=\"7\">\n<li>关闭 DHCP 服务</li>\n</ol>\n<blockquote>\n<p>在 \"网络 - 接口 - Lan - 修改\" 界面中，勾选下方的 \"忽略此接口 (不在此接口提供 DHCP 服务)\", 并 \"保存 &amp; 应用\".</p>\n</blockquote>\n<h2 id=\"修复宿主机网络\"><a class=\"anchor\" href=\"#修复宿主机网络\">#</a> 修复宿主机网络</h2>\n<p>OpenWrt 容器运行后，宿主机内可能无法正常连接外部网络，需要修改宿主机的 <code>/etc/network/interfaces</code>  文件以修复：</p>\n<ol>\n<li>备份并编辑文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> /etc/network/interfaces /etc/network/interfaces.bak <span class=\"comment\"># 备份文件</span></span><br><span class=\"line\">nano /etc/network/interfaces <span class=\"comment\"># 编辑文件</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>向文件末尾添加</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">auto eth0</span><br><span class=\"line\">iface eth0 inet manual</span><br><span class=\"line\"></span><br><span class=\"line\">auto macvlan</span><br><span class=\"line\">iface macvlan inet static</span><br><span class=\"line\">  address 192.168.0.90</span><br><span class=\"line\">  netmask 255.255.255.0</span><br><span class=\"line\">  gateway 192.168.0.1</span><br><span class=\"line\">  dns-nameservers 192.168.0.1</span><br><span class=\"line\">  pre-up ip <span class=\"built_in\">link</span> add macvlan <span class=\"built_in\">link</span> eth0 <span class=\"built_in\">type</span> macvlan mode bridge</span><br><span class=\"line\">  post-down ip <span class=\"built_in\">link</span> del macvlan <span class=\"built_in\">link</span> eth0 <span class=\"built_in\">type</span> macvlan mode bridge</span><br></pre></td></tr></tbody></table></figure>\n<ul>\n<li>修改后重启树莓派，之后树莓派的局域网 IP 地址将会固定为 <code>/etc/network/interfaces</code>  文件中 <code>address</code>  参数中的地址.</li>\n</ul>\n<h1 id=\"鸣谢摘抄\"><a class=\"anchor\" href=\"#鸣谢摘抄\">#</a> 鸣谢 (摘抄)</h1>\n<p><a href=\"https://mlapp.cn/376.html\" title=\"在Docker 中运行 OpenWrt 旁路网关\">在 Docker 中运行 OpenWrt 旁路网关</a></p>\n",
            "tags": [
                "树莓派",
                "docker",
                "openwrt",
                "router"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/133537/",
            "url": "http://maxshiroi.top/ug/133537/",
            "title": "使用 Hexo 程序部署博客到githubpage上",
            "date_published": "2022-04-17T05:35:37.000Z",
            "content_html": "<h1 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h1>\n<p>Hexo 程序使用 node.js 程序编写，因此需要现在环境机上部署 node.js，git 只用来推送。</p>\n<blockquote>\n<p><strong>什么是 Node.js</strong>：一个运行 javascript (JS) 的环境。Hexo 是一个 javascript (JS) 语言的程序。一般 JS 运行在浏览器中，但是也有一种非浏览器环境也可以运行 JS。这个环境是 Node.js</p>\n</blockquote>\n<blockquote>\n<p><strong>什么是 Git</strong>：一个版本控制软件。Hexo 博客源码由纯文本构成，管理纯文本项目的最好办法之一就是使用 Git。还记得 word 里面的历史记录和版本回退功能么？简单的来说，Git 就提供了类似功能，只不过更强大。</p>\n</blockquote>\n<blockquote>\n<p>本文章使用 fedora 系 linux 操作。</p>\n</blockquote>\n<h2 id=\"安装-git\"><a class=\"anchor\" href=\"#安装-git\">#</a> 安装 git</h2>\n<p>使用 yum 指令进行安装：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su</span><br><span class=\"line\">yum install git-core <span class=\"comment\"># 坏习惯，请减少使用root用户</span></span><br></pre></td></tr></tbody></table></figure>\n<p>查看是否安装成功：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># git --version</span></span><br><span class=\"line\">git version 1.8.3.1</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装-nodejs\"><a class=\"anchor\" href=\"#安装-nodejs\">#</a> 安装 node.js</h2>\n<p>直接 yum 一把梭</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install nodejs</span><br></pre></td></tr></tbody></table></figure>\n<p>然后查看版本：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># node -v</span></span><br><span class=\"line\">v16.14.2</span><br></pre></td></tr></tbody></table></figure>\n<p>顺便看看 npm 版本：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># npm -v</span></span><br><span class=\"line\">8.5.0</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置本体\"><a class=\"anchor\" href=\"#配置本体\">#</a> 配置本体</h1>\n<h2 id=\"hexo\"><a class=\"anchor\" href=\"#hexo\">#</a> hexo</h2>\n<p>如果你没有使用加速等工具的话，这里建议将 npm 源改到淘宝：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry http://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure>\n<p>使用 npm 指令安装：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure>\n<p>看看安装好了没：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># hexo -v</span></span><br><span class=\"line\">hexo-cli: 4.3.0</span><br><span class=\"line\">os: linux 3.10.0-1160.31.1.el7.x86_64 CentOS Linux 7 (Core)</span><br><span class=\"line\">node: 16.14.2</span><br><span class=\"line\">...</span><br><span class=\"line\">ngtcp2: 0.1.0-DEV</span><br><span class=\"line\">nghttp3: 0.1.0-DEV</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装server\"><a class=\"anchor\" href=\"#安装server\">#</a> 安装 server</h2>\n<p>如果你想在本地预览博客的话，可以安装下。其实装不装都无所谓。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo hexo-server</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装推送插件\"><a class=\"anchor\" href=\"#安装推送插件\">#</a> 安装推送插件</h2>\n<p>这个推送插件是后面要推送到 <code>github page</code>  上要使用的插件。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"创建博客\"><a class=\"anchor\" href=\"#创建博客\">#</a> 创建博客</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [你的博客名字]</span><br><span class=\"line\"><span class=\"built_in\">cd</span> [你的博客名字]</span><br><span class=\"line\">npm install</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>如果你已经备份过想要还原，则只需要做到这一步就已经可以了。但是如果想要推送还需要再看下面的配置 git 项。</p>\n</blockquote>\n<h1 id=\"本地预览博客\"><a class=\"anchor\" href=\"#本地预览博客\">#</a> 本地预览博客</h1>\n<p>上面已经生成好了基本博客，可以使用 <code>ls</code>  命令查看下是否正确生成了文件<br>\n下面是 hexo 博客的基本结构。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\"> ├── _config.yml <span class=\"comment\"># 网站配置信息</span></span><br><span class=\"line\"> ├── package.json <span class=\"comment\"># 应用程序信息</span></span><br><span class=\"line\"> ├── scaffolds <span class=\"comment\"># 模板文件夹</span></span><br><span class=\"line\"> ├── node_modules <span class=\"comment\"># 生成博客后编译出来的文件。主要看这个是否生成成功了。</span></span><br><span class=\"line\"> ├── <span class=\"built_in\">source</span> <span class=\"comment\"># 存放用户资源</span></span><br><span class=\"line\"> |   ├── _drafts</span><br><span class=\"line\"> |   └── _posts</span><br><span class=\"line\"> └── themes <span class=\"comment\"># 主题文件夹</span></span><br></pre></td></tr></tbody></table></figure>\n<p>如果确认没什么问题便可以进行生成步骤了。</p>\n<ol>\n<li>测试本地生成博客</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成一篇文章，注意要在blog的目录下。</span></span><br><span class=\"line\">hexo new <span class=\"string\">\"文章名\"</span></span><br><span class=\"line\"><span class=\"comment\"># 生成静态网页</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"comment\"># 打开本地服务器</span></span><br><span class=\"line\">hexo s</span><br></pre></td></tr></tbody></table></figure>\n<p>此时你可以打开  <code>[博客地址]:4000</code>  来查看效果了。<br>\n如果确认没问题，便可以继续操作。</p>\n<h1 id=\"备份还原\"><a class=\"anchor\" href=\"#备份还原\">#</a> 备份还原</h1>\n<p>博客部署完成后或是以后工作中难免需要更换环境，这里也简单说一下备份还原的流程。</p>\n<h2 id=\"本地备份还原\"><a class=\"anchor\" href=\"#本地备份还原\">#</a> 本地备份还原</h2>\n<p>本地备份还原是对主要文件自行压缩拷贝后导出，然后覆盖进行还原</p>\n<blockquote>\n<p>需要备份的文件列表如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">|-- .gitignore</span><br><span class=\"line\">|-- _config.yml</span><br><span class=\"line\">|-- package-lock.json</span><br><span class=\"line\">|-- package.json</span><br><span class=\"line\">|-- scaffolds</span><br><span class=\"line\">|-- <span class=\"built_in\">source</span></span><br><span class=\"line\">`-- themes</span><br></pre></td></tr></tbody></table></figure>\n<p>将这些文件考出来后则备份完成。</p>\n<h2 id=\"可能会出现的问题\"><a class=\"anchor\" href=\"#可能会出现的问题\">#</a> 可能会出现的问题</h2>\n<p>如果当你完成还原，进行 <code>hexo g</code>  命令提示如下错误：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@LAPTOP-N4RDFRJ0:/mnt/d/Program/hexo/blog<span class=\"comment\"># npm install --save bulma-stylus</span></span><br><span class=\"line\">npm ERR! code FETCH_ERROR</span><br><span class=\"line\">npm ERR! errno FETCH_ERROR</span><br><span class=\"line\">npm ERR! invalid json response body at https://registry.npmjs.org/browserslist reason: Unexpected end of JSON input</span><br><span class=\"line\"></span><br><span class=\"line\">npm ERR! A complete <span class=\"built_in\">log</span> of this run can be found <span class=\"keyword\">in</span>:</span><br><span class=\"line\">npm ERR!     /root/.npm/_logs/2022-08-23T09_22_43_977Z-debug.log</span><br></pre></td></tr></tbody></table></figure>\n<p>执行这条命令即可：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm cache clean --force</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置远端\"><a class=\"anchor\" href=\"#配置远端\">#</a> 配置远端</h1>\n<p>我将博客部署到了 github 上，所以你要先去 github.com 上注册一个账户。并创建一个仓库。</p>\n<h2 id=\"初始化-git\"><a class=\"anchor\" href=\"#初始化-git\">#</a> 初始化 git</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init git</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>如果提示 <code>Couldn't find an alternative telinit implementation to spawn.</code>  不用管，直接下一步。</p>\n</blockquote>\n<h2 id=\"配置-ssh\"><a class=\"anchor\" href=\"#配置-ssh\">#</a> 配置 ssh</h2>\n<ol>\n<li>配置登录信息</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"你的git用户名\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"你的git登录邮箱\"</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>生成 ssh keygen</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"你的git登录邮箱\"</span></span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>如果弹出了很多内容，直接进行一个回车跳过。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/root/.ssh/id_rsa): </span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br><span class=\"line\">... // 直接回车跳过</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>复制密钥</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /root/.ssh/id_rsa.pub</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>将里面显示的所有内容复制。</p>\n</blockquote>\n<ol start=\"4\">\n<li>登录 github</li>\n</ol>\n<ul>\n<li>头像</li>\n<li>Settings</li>\n<li>SSH and GPG keys</li>\n<li>New SSH key</li>\n<li>将复制的内容粘贴到 Keys 框里</li>\n<li>Add SSH key</li>\n</ul>\n<ol start=\"5\">\n<li>测试链接是否成功</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ssh -T git@github.com</span></span><br><span class=\"line\">Hi maxshiro! You<span class=\"string\">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置推送\"><a class=\"anchor\" href=\"#配置推送\">#</a> 配置推送</h1>\n<p>配置完 git 之后便可以配置 hexo 博客的推送地址了，下面以我的为例。</p>\n<ol>\n<li>首先 cd 到当前目录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>编辑配置文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi _config.yml</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>移动到 deploy 天机如下内容</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    reop: git@github.com:maxshiro/maxshiro.github.io.git <span class=\"comment\">#这个地址可以到你的repo那里获得。</span></span><br><span class=\"line\">    branch: main <span class=\"comment\">#这个branch就是仓库的默认目录了。</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"推送博客\"><a class=\"anchor\" href=\"#推送博客\">#</a> 推送博客</h1>\n<p>已经测试并生成过博客了，所以可以直接推送。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清理之前生成的文件</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"><span class=\"comment\"># 生成静态网页</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"comment\"># 推送到github repo</span></span><br><span class=\"line\">hexo d</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"结语\"><a class=\"anchor\" href=\"#结语\">#</a> 结语</h1>\n<p>此时你已经完成了 hexo 博客的基本配置。</p>\n",
            "tags": [
                "hexo",
                "guide"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro's Blog",
    "subtitle": "A blog for learn.",
    "icon": "http://maxshiroi.top/images/favicon.ico",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/ug/100353/",
            "url": "http://maxshiroi.top/ug/100353/",
            "title": "dvwa安装指引",
            "date_published": "2023-03-07T02:03:53.000Z",
            "content_html": "<h1 id=\"启动nginx\"><a class=\"anchor\" href=\"#启动nginx\">#</a> 启动 nginx</h1>\n<h2 id=\"service-nginx-startcd-varwwwhtmlvim-hellohtml\"><a class=\"anchor\" href=\"#service-nginx-startcd-varwwwhtmlvim-hellohtml\">#</a> service nginx start<br />\ncd /var/www/html<br />\nvim hello.html</h2>\n<p>Helloworld!<br />\n// 访问虚拟机地址。</p>\n<p>mysql&gt; create database dvwa;<br />\nQuery OK, 1 row affected (0.00 sec)</p>\n<p>mysql&gt; create user dvwa@localhost identified by 'p@ssw0rd';<br />\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; grant all on dvwa.* to dvwa@localhost;<br />\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; flush privileges;<br />\nQuery OK, 0 rows affected (0.00 sec)</p>\n",
            "tags": [
                "linux",
                "mysql",
                "kali",
                "dvwa",
                "fedora"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/140206/",
            "url": "http://maxshiroi.top/ug/140206/",
            "title": "Arch安装使用指导",
            "date_published": "2023-02-24T06:02:06.000Z",
            "content_html": "<h1 id=\"前期准备\"><a class=\"anchor\" href=\"#前期准备\">#</a> 前期准备</h1>\n<p>在创建好虚拟机后，需要打开虚拟机设置，将  <code>firmware type</code>  更改为  <code>efi</code> ，以便后续操作。</p>\n<h1 id=\"检查网络设置和-ssh-连接\"><a class=\"anchor\" href=\"#检查网络设置和-ssh-连接\">#</a> 检查网络设置和 SSH 连接</h1>\n<p>以下是检查网络设置和 SSH 连接的操作步骤：</p>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 检查系统启动方式</span><br><span class=\"line\">ls /sys/firmware/efi/efivars</span><br><span class=\"line\"></span><br><span class=\"line\"># 检查网络是否通畅</span><br><span class=\"line\">ping baidu.com</span><br><span class=\"line\"></span><br><span class=\"line\"># 更改密码并远程连接</span><br><span class=\"line\">passwd</span><br><span class=\"line\"></span><br><span class=\"line\"># 查看 IP 地址</span><br><span class=\"line\">ip addr</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用ssh连接\"><a class=\"anchor\" href=\"#使用ssh连接\">#</a> 使用 ssh 连接</h1>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -p <span class=\"number\">22</span> root@<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">204</span>.<span class=\"number\">130</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"分区挂载\"><a class=\"anchor\" href=\"#分区挂载\">#</a> 分区挂载</h1>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 查看已存在的硬盘</span><br><span class=\"line\">lsblk</span><br><span class=\"line\"># 使用cfdisk创建分区</span><br><span class=\"line\">cfdisk /dev/nvme0n1</span><br><span class=\"line\"># 创建如下三个</span><br><span class=\"line\">Device           Start      End  Sectors  Size Type</span><br><span class=\"line\">/dev/nvme0n1p1    2048  1026047  1024000  500M EFI System</span><br><span class=\"line\">/dev/nvme0n1p2 1026048  9414655  8388608    4G Linux swap</span><br><span class=\"line\">/dev/nvme0n1p3 9414656 83884031 74469376 35.5G Linux filesystem</span><br><span class=\"line\"># 分别格式化</span><br><span class=\"line\"># 格式化EFI启动分区为fat32格式</span><br><span class=\"line\">mkfs.fat -F32 /dev/nvme0n1p1</span><br><span class=\"line\"># 格式化根目录为xfs文件系统</span><br><span class=\"line\">mkfs.xfs -f /dev/nvme0n1p3</span><br><span class=\"line\"># 格式化swap文件系统</span><br><span class=\"line\">mkswap /dev/nvme0n1p2</span><br><span class=\"line\">swapon /dev/nvme0n1p2</span><br><span class=\"line\"># 挂载</span><br><span class=\"line\"># 挂载根分区到mnt</span><br><span class=\"line\">mount /dev/nvme0n1p3 /mnt</span><br><span class=\"line\"># 新建EFI分区并挂载</span><br><span class=\"line\">mkdir -p /mnt/boot/EFI</span><br><span class=\"line\">mount /dev/nvme0n1p1 /mnt/boot/EFI</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 使用下面命令下载并安装系统</span><br><span class=\"line\">pacstrap -i /mnt base base-devel vim linux linux-firmware</span><br><span class=\"line\"># 生成 fstab 文件并检查</span><br><span class=\"line\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class=\"line\">cat /mnt/etc/fstab</span><br><span class=\"line\"># 切换系统目录</span><br><span class=\"line\">arch-chroot /mnt</span><br><span class=\"line\"># 更改时区，设置UTC</span><br><span class=\"line\">ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class=\"line\">hwclock --systohc --utc</span><br><span class=\"line\"># 更改local并生成locale信息</span><br><span class=\"line\">vim /etc/locale.gen</span><br><span class=\"line\"># 找到合适的地区去掉前面的#</span><br><span class=\"line\">locale-gen</span><br><span class=\"line\"># 将语言信息写入locale.conf</span><br><span class=\"line\">echo LANG=en_GB.UTF-8 &gt; /etc/locale.conf</span><br><span class=\"line\"># 配置网络</span><br><span class=\"line\">vim /etc/hostname</span><br><span class=\"line\">----</span><br><span class=\"line\">archlinux</span><br><span class=\"line\"># 直接写入自己的主机名</span><br><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\">----</span><br><span class=\"line\">127.0.0.1   localhost</span><br><span class=\"line\">::1         localhost</span><br><span class=\"line\">127.0.1.1   archlinux.localdomain archlinux</span><br><span class=\"line\"># archlinux就是自己的主机名</span><br><span class=\"line\"># 安装相关包</span><br><span class=\"line\">pacman -S grub efibootmgr efivar networkmanager intel-ucode</span><br><span class=\"line\"># 配置grub</span><br><span class=\"line\">grub-install /dev/sda</span><br><span class=\"line\">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class=\"line\"># 激活并启用NetworkManager</span><br><span class=\"line\">systemctl enable NetworkManager</span><br><span class=\"line\"># 更改密码</span><br><span class=\"line\">passwd</span><br><span class=\"line\"># 卸载挂载，重启</span><br><span class=\"line\">exit</span><br><span class=\"line\">umount /mnt/boot/EFI</span><br><span class=\"line\">umount /mnt</span><br><span class=\"line\">reboot </span><br></pre></td></tr></table></figure>\n<h1 id=\"安装后\"><a class=\"anchor\" href=\"#安装后\">#</a> 安装后</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置网络，再次联网</span></span><br><span class=\"line\"><span class=\"comment\"># 输入nmtui 选择 “Activate a connection” 回车进入，选择你需要的网络，连接后back返回即可</span></span><br><span class=\"line\"><span class=\"comment\"># 安装 openssh</span></span><br><span class=\"line\">pacman -S openssh</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> sshd</span><br><span class=\"line\">systemctl start sshd</span><br><span class=\"line\">systemctl status sshd</span><br><span class=\"line\"><span class=\"comment\"># 查看ip</span></span><br><span class=\"line\">ip -brief address / addr</span><br><span class=\"line\"><span class=\"comment\"># 修改ssh配置允许root连接</span></span><br><span class=\"line\">vim /etc/ssh/sshd_config</span><br><span class=\"line\">----</span><br><span class=\"line\"><span class=\"comment\"># 将下列的语句值改为yes</span></span><br><span class=\"line\">PermitRootLogin <span class=\"built_in\">yes</span></span><br><span class=\"line\"><span class=\"comment\"># 重启ssh</span></span><br><span class=\"line\">systemctl restart sshd</span><br><span class=\"line\"><span class=\"comment\"># 使用ssh连接</span></span><br><span class=\"line\">ssh -o StrictHostKeyChecking=no root@192.168.204.130</span><br><span class=\"line\"><span class=\"comment\"># 更新</span></span><br><span class=\"line\">pacman -Syu</span><br><span class=\"line\">useradd axro</span><br><span class=\"line\">vi /etc/passwd</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h1 id=\"优化终端\"><a class=\"anchor\" href=\"#优化终端\">#</a> 优化终端</h1>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装zsh，高亮，补全</span><br><span class=\"line\">sudo pacman -S zsh</span><br><span class=\"line\">sudo pacman -S zsh-autosuggestions</span><br><span class=\"line\">sudo pacman -S zsh-syntax-highlighting</span><br><span class=\"line\"># 安装git</span><br><span class=\"line\">sudo pacman -S git</span><br><span class=\"line\"># 使用以下命令配置zsh</span><br><span class=\"line\">autoload -Uz zsh-newuser-install</span><br><span class=\"line\">zsh-newuser-install -f</span><br><span class=\"line\"># 查看是否生成.zshrc</span><br><span class=\"line\">ls -a</span><br><span class=\"line\"># 安装oh my zsh</span><br><span class=\"line\">sh -c &quot;$(curl -fsSL https:#raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br><span class=\"line\"># 在.zshrc中加入以下插件</span><br><span class=\"line\">vim .zshrc</span><br><span class=\"line\">---</span><br><span class=\"line\">ZSH_THEME=&quot;dieter&quot;</span><br><span class=\"line\">alias vi=vim</span><br><span class=\"line\">alias ll=&#x27;ls -l&#x27;</span><br><span class=\"line\">source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class=\"line\">source /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br><span class=\"line\">:wq</span><br><span class=\"line\"># 刷新终端</span><br><span class=\"line\">source .zshrc</span><br><span class=\"line\"># 安装neofetch</span><br><span class=\"line\">sudo pacman -S neofetch</span><br><span class=\"line\">---</span><br><span class=\"line\">11:18:08 axro@axro-arch ~ neofetch</span><br><span class=\"line\">                   -`                    axro@axro-arch</span><br><span class=\"line\">                  .o+`                   --------------</span><br><span class=\"line\">                 `ooo/                   OS: Arch Linux x86_64</span><br><span class=\"line\">                `+oooo:                  Host: VMware20,1 None</span><br><span class=\"line\">               `+oooooo:                 Kernel: 6.2.2-arch1-1</span><br><span class=\"line\">               -+oooooo+:                Uptime: 20 mins</span><br><span class=\"line\">             `/:-:++oooo+:               Packages: 182 (pacman)</span><br><span class=\"line\">            `/++++/+++++++:              Shell: zsh 5.9</span><br><span class=\"line\">           `/++++++++++++++:             Resolution: 1280x800</span><br><span class=\"line\">          `/+++ooooooooooooo/`           Terminal: /dev/pts/0</span><br><span class=\"line\">         ./ooosssso++osssssso+`          CPU: 11th Gen Intel i7-11800H (1) @ 2.304GHz</span><br><span class=\"line\">        .oossssso-````/ossssss+`         GPU: 00:0f.0 VMware SVGA II Adapter</span><br><span class=\"line\">       -osssssso.      :ssssssso.        Memory: 209MiB / 3883MiB</span><br><span class=\"line\">      :osssssss/        osssso+++.</span><br><span class=\"line\">     /ossssssss/        +ssssooo/-</span><br><span class=\"line\">   `/ossssso+/:-        -:/+osssso+-</span><br><span class=\"line\">  `+sso+:-`                 `.-/+oso:</span><br><span class=\"line\"> `++:.                           `-/+/</span><br><span class=\"line\"> .`                                 `/</span><br><span class=\"line\"></span><br><span class=\"line\">11:21:14 axro@axro-arch ~</span><br></pre></td></tr></table></figure>\n<h1 id=\"安装桌面环境\"><a class=\"anchor\" href=\"#安装桌面环境\">#</a> 安装桌面环境</h1>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装xorg-server，xorg-xinit</span><br><span class=\"line\">sudo pacman -S xorg-server xorg-xinit</span><br><span class=\"line\"># 安装显卡驱动</span><br><span class=\"line\">sudo pacman -S xf86-video-vesa # 这里使用的是vmware，请自行找适合自己机器的显卡驱动</span><br><span class=\"line\"># 安装plasma</span><br><span class=\"line\">sudo pacman -S pacman-meta konsole dolphin</span><br><span class=\"line\">sudo pacman -S kde-applications-meta sddm</span><br><span class=\"line\"># 启动kde plasma</span><br><span class=\"line\">sudo systemctl start sddm.service</span><br><span class=\"line\"># 安装字体，更改中文</span><br><span class=\"line\">sudo pacman -S noto-fonts-cjk wqy-microhei</span><br><span class=\"line\"># 安装火狐浏览器</span><br><span class=\"line\">sudo pacman -S firefox</span><br><span class=\"line\"># 使用如下命令打开和关闭网卡</span><br><span class=\"line\">ifconfig ens160 down/up</span><br></pre></td></tr></table></figure>\n<h2 id=\"vmware安装vmwaretools-实现窗口分辨率自适应\"><a class=\"anchor\" href=\"#vmware安装vmwaretools-实现窗口分辨率自适应\">#</a> vmware 安装 vmwaretools 实现窗口分辨率自适应。</h2>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 安装</span><br><span class=\"line\">sudo pacman -Sy gtkmm gtkmm3 net-tools open-vm-tools xf86-video-vmware xf86-input-vmmouse</span><br><span class=\"line\">sudo systemctl enable vmtoolsd.service</span><br><span class=\"line\">sudo systemctl enable vmware-vmblock-fuse.service</span><br><span class=\"line\">sudo reboot</span><br></pre></td></tr></table></figure>\n<h3 id=\"详细请参考\"><a class=\"anchor\" href=\"#详细请参考\">#</a> 详细请参考</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93aWtpLmFyY2hsaW51eGNuLm9yZy93aWtpL1ZNd2FyZS8lRTUlQUUlODklRTglQTMlODVfQXJjaF9MaW51eF8lRTQlQjglQkElRTglOTklOUElRTYlOEIlOUYlRTYlOUMlQkE=\">wiki.archlinuxcn.org</span><br />\n 这里不多赘述。</p>\n<h2 id=\"安装中文输入法\"><a class=\"anchor\" href=\"#安装中文输入法\">#</a> 安装中文输入法</h2>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 安装fcitx5</span><br><span class=\"line\">sudo pacman -S fcitx5-im fcitx5-chinese-addons  fcitx5-rime fcitx5-configtool</span><br><span class=\"line\">// 编辑配置文件</span><br><span class=\"line\">vi /etc/environment</span><br><span class=\"line\">---</span><br><span class=\"line\">GTK_IM_MODULE=fcitx</span><br><span class=\"line\">QT_IM_MODULE=fcitx</span><br><span class=\"line\">XMODIFIERS=@im=fcitx</span><br><span class=\"line\">SDL_IM_MODULE=fcitx</span><br><span class=\"line\"></span><br><span class=\"line\">// 重启，gnome和kde会自动配置</span><br><span class=\"line\">reboot</span><br></pre></td></tr></table></figure>\n<h2 id=\"安装yay工具并安装linuxqq\"><a class=\"anchor\" href=\"#安装yay工具并安装linuxqq\">#</a> 安装 yay 工具并安装 linuxqq</h2>\n<figure class=\"highlight plaintext\"><figcaption><span>zsh</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://aur.archlinux.org/yay.git</span><br><span class=\"line\">cd yay</span><br><span class=\"line\">makepkg -si</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"编写rclocal\"><a class=\"anchor\" href=\"#编写rclocal\">#</a> 编写 rc.local</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/lib/systemd/system/rc-local.service</span><br><span class=\"line\">---</span><br><span class=\"line\">#/usr/lib/systemd/system/rc-local.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=&quot;写下描述&quot; </span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">ExecStart=/etc/rc.local start #在这里你可以看到开机执行脚本的位置</span><br><span class=\"line\">TimeoutSec=0</span><br><span class=\"line\">StandardInput=tty</span><br><span class=\"line\">RemainAfterExit=yes</span><br><span class=\"line\">SysVStartPriority=99</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/rc.local</span><br><span class=\"line\">---</span><br><span class=\"line\">#/bin/bash</span><br><span class=\"line\">sudo pacman -Syu</span><br><span class=\"line\">exit 0</span><br><span class=\"line\"></span><br><span class=\"line\">chmod 777 /etc/rc.local</span><br><span class=\"line\">systemctl enable rc.local.service</span><br></pre></td></tr></table></figure>",
            "tags": [
                "linux",
                "arch",
                "pacman"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/174137/",
            "url": "http://maxshiroi.top/ug/174137/",
            "title": "vmwarewin7shrink",
            "date_published": "2023-01-14T09:41:37.000Z",
            "content_html": "<p>通常在我们创建虚拟机时往往并不清楚需要多少空间，等到后期才会发现分配了很多空间实际上用不到。这时候就要想办法缩小虚拟机所占用的空间了。<br />\n根据我这次缩小空间的经历，我十分不推荐使用快照功能。因为这会让你虚拟机当前处在快照模式，与原来的文件关系不大（就是处理起来更麻烦了。）。<br />\n如果你像我一样只是用 vmware 来存放如企鹅，钉钉，腾讯会议，微信这种垃圾的话，那么可以参照我的方法。</p>\n<h1 id=\"缩小空间占用\"><a class=\"anchor\" href=\"#缩小空间占用\">#</a> 缩小空间占用。</h1>\n<h2 id=\"0首先查看磁盘类型\"><a class=\"anchor\" href=\"#0首先查看磁盘类型\">#</a> 0. 首先查看磁盘类型</h2>\n<p>使用文本编辑器打开虚拟机根目录下的 xxx.vmdk 文件，查看 # Extent description 下面的内容第三块是否为 SPARSE 。不是则需要进行转换。如下图：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s001.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s002.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s003.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s004.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s005.vmdk&quot;</span><br><span class=\"line\">RW 4521984 SPARSE &quot;Windows 7 x64-cl1-s006.vmdk&quot;</span><br></pre></td></tr></table></figure>\n<p>如果你在创建虚拟机选择的是动态分配磁盘文件并拆分成多个的话这里就是 SPARSE。</p>\n<h2 id=\"1确保没有快照\"><a class=\"anchor\" href=\"#1确保没有快照\">#</a> 1. 确保没有快照</h2>\n<p>确保虚拟机内没有快照。虚拟机目录下只有一个 xxx.vmdk 以及从属的 s00x.vmdk。如果有快照没法处理，则可以执行克隆操作到其他盘进行处理。</p>\n<h2 id=\"2尽可能缩小虚拟机内部所占用的空间\"><a class=\"anchor\" href=\"#2尽可能缩小虚拟机内部所占用的空间\">#</a> 2. 尽可能缩小虚拟机内部所占用的空间</h2>\n<blockquote>\n<p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NvdXRDb2Rlcy9hcnRpY2xlL2RldGFpbHMvMTA0OTc1Nzgz\">【Win10 C 盘压缩卷问题解答】：无法将卷压缩到超出任何不可移动的文件所在点</span></p>\n</blockquote>\n<p>进入虚拟机，进行以下处理：</p>\n<ul>\n<li>关闭休眠功能 *</li>\n<li>关闭虚拟内存并删除虚拟内存文件 *</li>\n<li>虚拟机内进行空间整理，磁盘清理</li>\n<li>处理其他文件</li>\n</ul>\n<p>注意后面带星号的处理完成所有步骤后要重新打开 (建议)，不然可能会影响性能。</p>\n<p>此时你需要确定你缩小后的 c 盘空间大小，这也决定着后面动态磁盘缩小的操作。我确定缩小后的空间为 22GiB。</p>\n<h2 id=\"3-重启到pe系统使用diskgenius缩小c盘空间\"><a class=\"anchor\" href=\"#3-重启到pe系统使用diskgenius缩小c盘空间\">#</a> 3. 重启到 pe 系统使用 Diskgenius 缩小 c 盘空间。</h2>\n<h3 id=\"使用微pe制作iso文件\"><a class=\"anchor\" href=\"#使用微pe制作iso文件\">#</a> 使用微 pe 制作 iso 文件</h3>\n<ol>\n<li>打开</li>\n</ol>\n<h3 id=\"添加硬件cddvd设备使用创建的iso文件\"><a class=\"anchor\" href=\"#添加硬件cddvd设备使用创建的iso文件\">#</a> 添加硬件 CD/DVD 设备，使用创建的 iso 文件。</h3>\n<h3 id=\"vmware设置光驱启动\"><a class=\"anchor\" href=\"#vmware设置光驱启动\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3N5ZjQ0Mi9hcnRpY2xlL2RldGFpbHMvNTA2NzgzMg==\">VMWare 设置光驱启动</span></h3>\n<h2 id=\"4-减小vmware虚拟机虚拟磁盘大小\"><a class=\"anchor\" href=\"#4-减小vmware虚拟机虚拟磁盘大小\">#</a> 4. 减小 VMware 虚拟机虚拟磁盘大小</h2>\n<blockquote>\n<p>此处内容来自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0hheVBpbkYvYXJ0aWNsZS9kZXRhaWxzLzEwODI1MjYzMQ==\">减小 VMware 虚拟机虚拟磁盘大小</span></p>\n</blockquote>\n<p>在 VMware 里虚拟机的所有编号了的  <code>.*s001.*.vmdk</code>  片段虚拟磁盘文件是虚拟化的虚拟机最大空间（Maximum Size)，就比如我的 Win7 虚拟机的 Maximum Size 是 40GiB（1GiB=1024MiB，1GB=1000MB），虚拟机生成了  <code>.*s001~s011.vmdk</code>  共 11 个虚拟机磁盘文件 vmdk，该虚拟机的 &quot;Windows 7 x64-cl1.vmdk&quot; 中详实记录了这 11 个 vmdk 文件（从而进行各分片虚拟磁盘文件的按名索引）：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extent description</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s001.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s002.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s003.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s004.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s005.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s006.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s007.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s008.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s009.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s010.vmdk&quot;</span><br><span class=\"line\">RW 655360 SPARSE &quot;Windows 7 x64-cl1-s011.vmdk&quot;</span><br></pre></td></tr></table></figure>\n<p>vmdk 文件的 &quot;8323072&quot; 数字表示簇，2 簇 = 1KiB，则这 11 个 vmdk 文件对应了 ((10×8323072)/2/1024/1024)+(655360/2/1024/1024)=10×3.96875GiB+0.3125Gib=40GiB，刚好。</p>\n<p>我们所要做的就是通过改变这里的文件个数从而达到缩小 vmdk 磁盘大小的目的。<br />\n已知 40GiB 对应的簇大小为 10×8323072+655360=83886080。即一个 G 的簇大小为 2097152 (/2=1048576)。<br />\n我们确定一下自己压缩后的大小。就比如我要压缩到 22G，得出簇的总大小为 2097152×22=46137344，这个数可以拆为五个 8323072 加上一个 46137344-(8323072×5)=4521984。即 (8323072×5)+4521984=46137344。<br />\n因此上面的文件就可以改成下面这样：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Extent description</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s001.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s002.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s003.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s004.vmdk&quot;</span><br><span class=\"line\">RW 8323072 SPARSE &quot;Windows 7 x64-cl1-s005.vmdk&quot;</span><br><span class=\"line\">RW 4521984 SPARSE &quot;Windows 7 x64-cl1-s006.vmdk&quot;</span><br></pre></td></tr></table></figure>\n<p>记得备份 &quot;Windows 7 x64-cl1.vmdk&quot;，处理完成保存即可。</p>\n<h2 id=\"5重新启动虚拟机\"><a class=\"anchor\" href=\"#5重新启动虚拟机\">#</a> 5. 重新启动虚拟机</h2>\n<p>此时你会发现虚拟机的磁盘大小已经变成 22G 了。教程结束。</p>\n",
            "tags": [
                "vmware",
                "win7",
                "capacity",
                "shrink"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/082913/",
            "url": "http://maxshiroi.top/ug/082913/",
            "title": "WSL2迁移以及空间回收。",
            "date_published": "2022-11-19T00:29:13.000Z",
            "content_html": "<p><img data-src=\"../img/wsl2move/20221119083153.png\" alt=\"\" /></p>\n<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>如果你按照正常方式在设置里移动 wsl 的话就会发现报错，本篇文章向您介绍如何正确迁移以及回收空间。</p>\n<h1 id=\"移动\"><a class=\"anchor\" href=\"#移动\">#</a> 移动</h1>\n<p>在 Windows 的 PowerShell 中输入:</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --<span class=\"built_in\">help</span></span><br></pre></td></tr></table></figure>\n<p>可以看到关于这个命令的使用帮助说明：</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法: wsl.exe [参数] [选项...] [命令行]</span><br><span class=\"line\"> </span><br><span class=\"line\">用于运行 Linux 二进制文件的参数:</span><br><span class=\"line\"> </span><br><span class=\"line\">    如果未提供命令行，wsl.exe 将启动默认的 shell。</span><br><span class=\"line\">    --exec, -e &lt;命令行&gt;</span><br><span class=\"line\">        执行指定的命令而不使用默认的 Linux shell。</span><br><span class=\"line\">    --</span><br><span class=\"line\">        按原样传递剩余的命令行。</span><br><span class=\"line\">选项:</span><br><span class=\"line\">    --distribution, -d &lt;分发版&gt;</span><br><span class=\"line\">        运行指定的分发。</span><br><span class=\"line\">    --user, -u &lt;用户名&gt;</span><br><span class=\"line\">        以指定用户身份运行。</span><br><span class=\"line\">用于管理适用于 Linux 的 Windows 子系统的参数:</span><br><span class=\"line\"> </span><br><span class=\"line\">    --export &lt;分发版&gt; &lt;文件名&gt;</span><br><span class=\"line\">        将分发导出到 tar 文件。</span><br><span class=\"line\">        对于标准输出，文件名可以是 -。</span><br><span class=\"line\">    --import &lt;分发版&gt; &lt;安装位置&gt; &lt;文件名&gt; [选项]</span><br><span class=\"line\">        将指定的 tar 文件作为新分发进行导入。</span><br><span class=\"line\">        对于标准输入，文件名可以是 -。</span><br><span class=\"line\">        选项:</span><br><span class=\"line\">            --version &lt;版本&gt;</span><br><span class=\"line\">                指定用于新分发的版本。</span><br><span class=\"line\">    --list, -l [选项]</span><br><span class=\"line\">        列出分发。</span><br><span class=\"line\">        选项:</span><br><span class=\"line\">            --all</span><br><span class=\"line\">                列出所有分发，包括当前正在</span><br><span class=\"line\">                安装或卸载的分发。</span><br><span class=\"line\">            --running</span><br><span class=\"line\">                只列出当前正在运行的分发。</span><br><span class=\"line\">            --quiet, -q</span><br><span class=\"line\">                只显示分发名称。</span><br><span class=\"line\">            --verbose, -v</span><br><span class=\"line\">                显示有关所有分发的详细信息。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-default, -s &lt;分发版&gt;</span><br><span class=\"line\">        将分发设置为默认值。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-default-version &lt;版本&gt;</span><br><span class=\"line\">        更改新分发的默认安装版本。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-version &lt;分发版&gt; &lt;版本&gt;</span><br><span class=\"line\">        更改指定分发的版本。</span><br><span class=\"line\">    --shutdown</span><br><span class=\"line\">        立即终止所有正在运行的分发和 WSL <span class=\"number\">2</span> 轻型工具虚拟机。</span><br><span class=\"line\">    --terminate, -t &lt;分发版&gt;</span><br><span class=\"line\">        终止指定的分发。</span><br><span class=\"line\">    --unregister &lt;分发版&gt;</span><br><span class=\"line\">        注销分发。</span><br><span class=\"line\">    --<span class=\"built_in\">help</span></span><br><span class=\"line\">        显示用法信息。</span><br></pre></td></tr></table></figure>\n<p>这里我们使用到 export 、unregister 和 import 几个选项就可以实现迁移。</p>\n<ol>\n<li>终止正在运行的分发或虚拟机：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --shutdown</span><br></pre></td></tr></table></figure>\n</li>\n<li>查看已安装的 wsl 名称：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --list --all</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">适用于 Linux 的 Windows 子系统分发:</span><br><span class=\"line\">Debian (默认)</span><br><span class=\"line\">kali-linux</span><br><span class=\"line\">Ubuntu</span><br></pre></td></tr></table></figure>\n</li>\n<li>对需要迁移的分发或虚拟机导出（我要迁移 kali-linux）：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --export kali-linux D:\\kali</span><br></pre></td></tr></table></figure>\n</li>\n<li>卸载分发版或虚拟机（如果是要重装系统或换机器安装，这一步可以省略，但是要将上一步导出的文件保存好）<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --unregister kali-linux</span><br></pre></td></tr></table></figure>\n</li>\n<li>导入新的分发版或虚拟机：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --import kali-linux D:\\wsl\\kali D:\\kali</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"压缩\"><a class=\"anchor\" href=\"#压缩\">#</a> 压缩</h1>\n<p>等待导入后你会发现移动的其实是 vhdx 文件，那么就可以对这个文件进行回收空间。</p>\n<ol>\n<li>以管理员身份运行 cmd，输入 diskpart 命令按回车。</li>\n<li>使用以下命令选择你的 userdata.vhdx</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select vdisk file = &quot;D:\\wsl\\ext4.vhdx&quot;</span><br></pre></td></tr></table></figure>\n<p>如果提示</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DiskPart successfully selected the virtual disk file.</span><br></pre></td></tr></table></figure>\n<p>就说明成功了。</p>\n<ol start=\"3\">\n<li>输入  <code>compact vdisk</code>  来压缩。</li>\n</ol>\n<h1 id=\"bug\"><a class=\"anchor\" href=\"#bug\">#</a> bug</h1>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ERROR: <span class=\"title\">Wsl</span>/<span class=\"title\">Service</span>/<span class=\"title\">CreateInstance</span>/<span class=\"title\">ERROR_FILE_NOT_FOUND</span></span></span><br></pre></td></tr></table></figure>\n<p>打开命令行，在命令行中输入</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --list --all</span><br><span class=\"line\">wsl.exe --unregister xxx</span><br></pre></td></tr></table></figure>\n<h1 id=\"摘抄\"><a class=\"anchor\" href=\"#摘抄\">#</a> 摘抄</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3poeXMyMDA3L2FydGljbGUvZGV0YWlscy8xMTA5NTg1Nzc=\">WSL2 迁移方法</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3kxNzg1NDExNzUxMi9hcnRpY2xlL2RldGFpbHMvMTE5MjE0NDQyP3NwbT0xMDAxLjIxMDEuMzAwMS42NjYxLjEmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19yZWxldmFudF90MC5ub25lLXRhc2stYmxvZy0yJTdFZGVmYXVsdCU3RUNUUkxJU1QlN0VkZWZhdWx0LTEtMTE5MjE0NDQyLWJsb2ctMTEwOTAwNTkxLnBjX3JlbGV2YW50X2RlZmF1bHQmYW1wO2RlcHRoXzEtdXRtX3NvdXJjZT1kaXN0cmlidXRlLnBjX3JlbGV2YW50X3QwLm5vbmUtdGFzay1ibG9nLTIlN0VkZWZhdWx0JTdFQ1RSTElTVCU3RWRlZmF1bHQtMS0xMTkyMTQ0NDItYmxvZy0xMTA5MDA1OTEucGNfcmVsZXZhbnRfZGVmYXVsdCZhbXA7dXRtX3JlbGV2YW50X2luZGV4PTE=\">解决 Win10 子系统的 Ubuntu 被删除后，重新安装出现找不到系统路径</span></p>\n",
            "tags": [
                "linux",
                "wsl2",
                "Hyper-v"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/204350/",
            "url": "http://maxshiroi.top/ug/204350/",
            "title": "通过diskpart工具压缩userdata.vhdx来解决磁盘占用过多问题",
            "date_published": "2022-11-18T12:43:50.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>当你安装了 WSA 后随着你的使用，你会发现占用的空间越来越大。即使你把不需要的安卓程序卸载了之后，却依然满满的霸占着你的 C 盘。你只能眼睁睁地看他慢慢变大却无能为力。当然本篇文章的目的就是帮你解决这个问题。</p>\n<h1 id=\"移动wsa到其他盘符\"><a class=\"anchor\" href=\"#移动wsa到其他盘符\">#</a> 移动 WSA 到其他盘符</h1>\n<blockquote>\n<p>你利用你聪明的头脑打开了百度并使用灵巧的双手在搜索框里输入 WSA 磁盘空间过大。很快你便看到了一种解决方式.</p>\n</blockquote>\n<ol>\n<li>打开设置 - 程序 - 已安装的程序，找到 WSA<br />\n<img data-src=\"/img/Windowssubsystemforandroidcompression/20221118205416.png\" alt=\"\" /></li>\n<li>点击后面三个点选择移动。<br />\n稍等一会就会帮你把 WSA 移动到对应的盘符了。</li>\n</ol>\n<h1 id=\"使用diskpart工具压缩\"><a class=\"anchor\" href=\"#使用diskpart工具压缩\">#</a> 使用 diskpart 工具压缩</h1>\n<ol>\n<li>以管理员身份运行 cmd，输入 diskpart 命令按回车。</li>\n<li>使用以下命令选择你的 userdata.vhdx</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select vdisk file = &quot;D:\\WpSystem\\S-<span class=\"number\">1</span>-<span class=\"number\">5</span>-<span class=\"number\">21</span>-<span class=\"number\">3846526574</span>-<span class=\"number\">1502088438</span>-<span class=\"number\">2560978845</span>-<span class=\"number\">1001</span>\\AppData\\Local\\Packages\\MicrosoftCorporationII.WindowsSubsystemForAndroid_8wekyb3d8bbwe\\LocalCache\\userdata.vhdx&quot;</span><br></pre></td></tr></table></figure>\n<p>如果提示</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DiskPart successfully selected the virtual disk file.</span><br></pre></td></tr></table></figure>\n<p>就说明成功了。</p>\n<ol start=\"3\">\n<li>输入  <code>compact vdisk</code>  来压缩。</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DiskPart has encountered an error: The specified file is encrypted and the user does not have the ability to decrypt it.</span><br><span class=\"line\">See the System Event Log for more information.</span><br></pre></td></tr></table></figure>\n<p>这个就说明你没有权限压缩这个文件。<br />\n为了解决这个问题我百度了一晚上，最后发现，只要你把这个文件复制走，就会提示<br />\n<img data-src=\"/img/Windowssubsystemforandroidcompression/20221118210314.png\" alt=\"\" /><br />\n这里选择是，然后就会复制走。<br />\n这个时候你再看你复制的文件就会发现上面的小黄锁已经不见了。</p>\n<ol start=\"4\">\n<li>重新选择 userdata.vhdx 文件</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select vdisk file = &quot;D:\\userdata.vhdx&quot;</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>重新输入命令  <code>compact vdisk</code>  进行压缩，如果出现下面的提示那就说明压缩成功了。</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DISKPART&gt; <span class=\"built_in\">compact</span> vdisk</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"number\">100</span> percent completed</span><br><span class=\"line\"></span><br><span class=\"line\">DiskPart successfully compacted the virtual disk file.</span><br><span class=\"line\"></span><br><span class=\"line\">DISKPART&gt;</span><br></pre></td></tr></table></figure>\n<p>此时再看你复制出来的文件，就会发现大小缩小了很多，压缩成功了。<br />\n接着只需要剪切拷贝出来的文件，替换掉原来的文件就可以了。</p>\n<h1 id=\"成果\"><a class=\"anchor\" href=\"#成果\">#</a> 成果</h1>\n<p><strong>压缩前：</strong></p>\n<blockquote>\n<p><img data-src=\"/img/Windowssubsystemforandroidcompression/20221118204548.png\" alt=\"\" /></p>\n</blockquote>\n<p><strong>压缩后：</strong></p>\n<blockquote>\n<p><img data-src=\"/img/Windowssubsystemforandroidcompression/20221118210939.png\" alt=\"\" /></p>\n</blockquote>\n",
            "tags": [
                "wsa",
                "vhd",
                "vhdx",
                "diskpart"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/152935/",
            "url": "http://maxshiroi.top/ug/152935/",
            "title": "随机图片API",
            "date_published": "2022-11-16T07:29:35.000Z",
            "content_html": "<h1 id=\"随机图片api\"><a class=\"anchor\" href=\"#随机图片api\">#</a> 随机图片 API</h1>\n<blockquote>\n<p>都有时效性，失效不管 233</p>\n</blockquote>\n<h2 id=\"二次元\"><a class=\"anchor\" href=\"#二次元\">#</a> 二次元</h2>\n<p class=\"gallery\" data-height=\"480\"><img data-src=\"https://iw233.cn/API/Random.php\" alt=\"\" title=\"https://iw233.cn/API/Random.php\" /><br />\n<img data-src=\"https://api.paugram.com/wallpaper\" alt=\"\" title=\"https://api.paugram.com/wallpaper\" /><br />\n<img data-src=\"https://www.dmoe.cc/random.php\" alt=\"\" title=\"https://www.dmoe.cc/random.php\" /><br />\n<img data-src=\"https://api.mtyqx.cn/api/random.php\" alt=\"\" title=\"https://api.mtyqx.cn/api/random.php\" /><br />\n<img data-src=\"https://api.yimian.xyz/img?type=moe\" alt=\"\" title=\"https://api.yimian.xyz/img?type=moe\" /><br />\n<img data-src=\"https://api.ixiaowai.cn/api/api.php\" alt=\"\" title=\"https://api.ixiaowai.cn/api/api.php\" /></p>\n<h2 id=\"三次元\"><a class=\"anchor\" href=\"#三次元\">#</a> 三次元</h2>\n<p class=\"gallery\" data-height=\"480\"><img data-src=\"https://api.btstu.cn/sjbz/api.php\" alt=\"\" title=\"https://api.btstu.cn/sjbz/api.php\" /><br />\n<img data-src=\"https://api.paugram.com/bing/\" alt=\"必应每日壁纸\" title=\"https://api.paugram.com/bing/\" /><br />\n<img data-src=\"https://api.ixiaowai.cn/gqapi/gqapi.php\" alt=\"\" title=\"https://api.ixiaowai.cn/gqapi/gqapi.php\" /></p>\n<h2 id=\"menhara酱\"><a class=\"anchor\" href=\"#menhara酱\">#</a> menhara 酱</h2>\n<p class=\"gallery\" data-height=\"480\"><img data-src=\"https://api.ixiaowai.cn/mcapi/mcapi.php\" alt=\"\" title=\"https://api.ixiaowai.cn/mcapi/mcapi.php\" /></p>\n<h2 id=\"eeedog\"><a class=\"anchor\" href=\"#eeedog\">#</a> eeedog</h2>\n<blockquote>\n<p>这个有点复杂建议自己去看看<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWVlLmRvZy90ZWNoL3JhbmQtcGljLWFwaS5odG1s\"> eeedog</span> 我随意放一个随机图床</p>\n</blockquote>\n<p class=\"gallery\" data-height=\"480\"><img data-src=\"https://api.yimian.xyz/img?type=imgbed\" alt=\"\" title=\"https://api.yimian.xyz/img?type=imgbed\" /></p>\n<hr />\n<h1 id=\"本地\"><a class=\"anchor\" href=\"#本地\">#</a> 本地</h1>\n<p class=\"gallery\"><img data-src=\"/img/pictureshow/20221116154554.png\" alt=\"\" title=\"女人\" /><br />\n<img data-src=\"/img/pictureshow/20221116154625.png\" alt=\"\" title=\"女人\" /><br />\n<img data-src=\"/img/pictureshow/20221116154652.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154713.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154721.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154729.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154737.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154746.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154914.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154922.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154928.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154935.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154945.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116154953.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116155005.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116155015.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116155023.png\" alt=\"\" /><br />\n<img data-src=\"/img/pictureshow/20221116155031.png\" alt=\"\" /><br />\n</p>\n",
            "tags": [
                "pic",
                "img",
                "api",
                "random",
                "wallpaper"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/204417/",
            "url": "http://maxshiroi.top/ug/204417/",
            "title": "在Debian系linux上通过apt的方式安装plex媒体中心",
            "date_published": "2022-11-02T12:44:17.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>plex 是一个包含订阅制的个人媒体中心，可以在你的智能设备：Phone / Android TV / Windows / MAC OS 等在线使用专用的客户端来浏览你存储在 nas 上的影片。<br />\n<img data-src=\"/img/linuxplexguide/20221102204637.png\" alt=\"\" /><br />\n如果你付费订阅则会支持更多的功能如在线硬解码 / 使用 dashboard 来控制设备 / 使用 plexamp 来播放音乐。当然免费的功能已经足够我们使用。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<ol>\n<li>首先更新</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update &amp;&amp; sudo apt upgrade</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装 apt-transport-https 包</li>\n</ol>\n<blockquote>\n<p>要将 Plex 包安装到树莓派上，需要添加官方的 Plex 包仓库。这个包允许 “apt” 包管理器通过 Plex 仓库使用的 “https” 协议来检索包。</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install apt-transport-https</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>把 Plex 仓库添加到 apt 源</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class=\"line\"><span class=\"built_in\">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo <span class=\"built_in\">tee</span> /etc/apt/sources.list.d/plexmediaserver.list</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>再次更新</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>一行命令安装 Plex</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install plexmediaserver</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用plex\"><a class=\"anchor\" href=\"#使用plex\">#</a> 使用 Plex</h1>\n<p>打开  <code>Your IP:32400/web</code>  来登录并配置你自己的 Plex 服务器</p>\n<h2 id=\"在安卓设备上安装plex和plexamp软件\"><a class=\"anchor\" href=\"#在安卓设备上安装plex和plexamp软件\">#</a> 在安卓设备上安装 plex 和 plexamp 软件。</h2>\n<blockquote>\n<p>不保证时效性，若失效请自行查找。</p>\n</blockquote>\n<ul>\n<li>plex 软件开心版<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGttb2R5LmlvL2FwcHMvcGxleA==\">点我下载</span><br />\n<img data-src=\"/img/linuxplexguide/image.png.png\" alt=\"\" /></li>\n<li>plexamp 软件开心版<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5tb2JpbGlzbS5tZS92aWV3dG9waWMucGhwP2Y9MTMzMiZhbXA7dD00OTcwMDkz\">点我下载</span><br />\n<img data-src=\"/img/linuxplexguide/20221102210820.png\" alt=\"\" /></li>\n<li>symfonium 这个没开心版，但是界面好看。<br />\n<img data-src=\"/img/linuxplexguide/20221102210737.png\" alt=\"\" /><br />\n<img data-src=\"/img/linuxplexguide/20221102210803.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"安装wangyiyun插件来自动匹配音乐封面和歌词\"><a class=\"anchor\" href=\"#安装wangyiyun插件来自动匹配音乐封面和歌词\">#</a> 安装 Wangyiyun 插件来自动匹配音乐封面和歌词。</h2>\n<ol>\n<li>使用 git clone 下载。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo git <span class=\"built_in\">clone</span> https://github.com/timmy0209/WangYiYun.bundle.git /usr/lib/plexmediaserver/Resources/Plug-ins-f4cdfea9c/WangYiYun.bundle</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>重启 plex</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart plexmediaserver</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>直接在音乐源里勾选 wangyiyun 即可。</li>\n</ol>\n",
            "tags": [
                "media center",
                "plex",
                "emby",
                "jellyfin",
                "视频",
                "音乐"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/101622/",
            "url": "http://maxshiroi.top/ug/101622/",
            "title": "解决mysql第一次安装后改密码的各种问题",
            "date_published": "2022-10-19T02:16:22.000Z",
            "content_html": "<h1 id=\"如何重置mysql密码\"><a class=\"anchor\" href=\"#如何重置mysql密码\">#</a> 如何重置 mysql 密码？</h1>\n<p>按照提示，alter user。</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/img/WebBackcreat1/20221019100609.png\" alt=\"\" /><br />\n哈哈快乐报错。</p>\n<p>更改密码复杂度。</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_length=1;</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1193 (HY000): Unknown system variable <span class=\"string\">&#x27;validate_password_policy&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>很快乐。</p>\n<p>那就先查看密码规范：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW VARIABLES LIKE <span class=\"string\">&#x27;validate_password%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></table></figure>\n<p>套娃呢是吧。</p>\n<p>解决方法：<br />\n重置一个和随机密码差不多的就可以了：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;qazWsx&gt;+&amp;3ed&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>已经提示成功了：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;qazWsx&gt;+&amp;3ed&#x27;</span>;</span><br><span class=\"line\">Query OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></table></figure>\n<p>更改密码复杂度：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.length=6;</span><br></pre></td></tr></table></figure>\n<p>修改密码并退出：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n<p>然后就可以愉快重启登陆了：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld</span><br><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "linux",
                "mysql",
                "passwd"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211932/",
            "url": "http://maxshiroi.top/ug/211932/",
            "title": "在centos中部署后端程序。",
            "date_published": "2022-10-16T13:19:32.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>其实部署很简单，重要的地方在于部署时出现差错后该如何进行处理。</p>\n</blockquote>\n<h1 id=\"nginx的安装\"><a class=\"anchor\" href=\"#nginx的安装\">#</a> Nginx 的安装</h1>\n<p>使用源码编译安装：</p>\n<ol>\n<li>访问<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG93bmxvYWQuaHRtbA==\"> Nginx</span> 官网，复制最新版本链接。wget 到本地目录。</li>\n</ol>\n<blockquote>\n<p><img data-src=\"/img/WebBackcreat1/20221016212408.png\" alt=\"\" /></p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nginx.org/download/nginx-1.23.1.tar.gz ~/</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>解压出来。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.23.1.tar.gz</span><br><span class=\"line\">// 如果这里是 *.tar.bz2 的话则使用 -jxvf</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>安装编译所需要的前置。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>进入解压出来的文件夹，编译安装。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.23.1</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>nginx 的启动和关闭</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx/sbin</span><br><span class=\"line\">// 启动nginx</span><br><span class=\"line\">./nginx</span><br><span class=\"line\">// 关闭nginx</span><br><span class=\"line\">./nginx -s stop</span><br><span class=\"line\">// 关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>创建目录</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /var/temp/nginx -p</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>建议在执行前先使用 netstat -aux | grep 80 查看是否有端口占用 80。</p>\n</blockquote>\n<ol start=\"7\">\n<li>开机自启 * 还没写完\n<ol>\n<li>编辑文件</li>\n</ol>\n <figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /lib/systemd/system/</span><br><span class=\"line\">vim nginx.service</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>添加内容</li>\n</ol>\n <figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit] </span><br><span class=\"line\">Description=nginx </span><br><span class=\"line\">service After=network.target </span><br><span class=\"line\">[Service] </span><br><span class=\"line\">Type=forking </span><br><span class=\"line\">ExecStart=/usr/local/nginx/sbin/nginx </span><br><span class=\"line\">ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=<span class=\"literal\">true</span> </span><br><span class=\"line\">[Install] </span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">// 解释</span><br><span class=\"line\">[Unit]:服务的说明</span><br><span class=\"line\">Description:描述服务</span><br><span class=\"line\">After:描述服务类别</span><br><span class=\"line\">[Service]服务运行参数的设置</span><br><span class=\"line\">Type=forking是后台运行的形式</span><br><span class=\"line\">ExecStart为服务的具体运行命令</span><br><span class=\"line\">ExecReload为重启命令</span><br><span class=\"line\">ExecStop为停止命令</span><br><span class=\"line\">PrivateTmp=True表示给服务分配独立的临时空间</span><br><span class=\"line\">注意：[Service]的启动、重启、停止命令全部要求使用绝对路径</span><br><span class=\"line\">[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>保存退出</li>\n<li>启动</li>\n</ol>\n <figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start nginx.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx.service</span><br><span class=\"line\">systemctl status nginx.service</span><br></pre></td></tr></table></figure>\n</li>\n<li>233</li>\n</ol>\n<h1 id=\"mysql-的安装\"><a class=\"anchor\" href=\"#mysql-的安装\">#</a> Mysql 的安装</h1>\n<ol>\n<li>先安装 wget  <code>yum install wget</code> 。</li>\n<li>下载并安装 mysql。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum -y localinstall mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 启动mysql</span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\">// 写入开机启动</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>查找日志并找到临时密码。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /var/log/mysqld.log</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img data-src=\"/img/WebBackcreat1/20221019082932.png\" alt=\"\" /></p>\n</blockquote>\n<ol start=\"5\">\n<li>登录 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">// 密码则为查找到的临时密码。</span><br><span class=\"line\">password:</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>修改密码</li>\n</ol>\n<blockquote>\n<p>后面专门说这傻逼 mysql 改密码。</p>\n</blockquote>\n<ol start=\"7\">\n<li>重启 mysql 服务</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>重启后就可以正常使用 mysql 了。</p>\n</blockquote>\n",
            "tags": [
                "linux",
                "centos",
                "web",
                "nginx",
                "mysql"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/085248/",
            "url": "http://maxshiroi.top/ug/085248/",
            "title": "CTF：Upload-Labs-Linux",
            "date_published": "2022-10-10T00:52:48.000Z",
            "content_html": "<h1 id=\"题目预览\"><a class=\"anchor\" href=\"#题目预览\">#</a> 题目预览：</h1>\n<p><img data-src=\"/img/Upload-Labs-Linux/20221010085420.png\" alt=\"\" /></p>\n<h1 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<ol>\n<li>开控制台</li>\n<li>关闭 javascript\n<blockquote>\n<p>设置 - 偏好设置 - 调试程序<br />\n删除 <code>onsubmit=&quot;return.checkFile()&quot;</code></p>\n</blockquote>\n</li>\n<li>新建一个文件里面写入 <code>&lt;?php @eval($_POST['123']);?&gt;</code></li>\n<li>后缀名改为 php 上传到网站，显示出图片后右键复制链接。</li>\n<li>打开 antsword，add 一个 url 地址为图片链接，密码为 123，加密 base64.</li>\n<li>点击链接就能发现根目录有个 flag 文件了。</li>\n</ol>\n",
            "tags": [
                "ctf",
                "buuctf",
                "antsword"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/082833/",
            "url": "http://maxshiroi.top/ug/082833/",
            "title": "linuxlearn2",
            "date_published": "2022-09-27T00:28:33.000Z",
            "content_html": "<hr />\n<p>title: linuxlearn2<br />\ndate: 2022-10-18 11:16:47<br />\ntags:</p>\n<ul>\n<li>diff</li>\n<li>sudoers</li>\n<li>passwd</li>\n<li>usermod</li>\n<li>linux</li>\n</ul>\n<hr />\n<ul>\n<li>diff 命令<br />\n diff 参数 文件 1 文件 2 &gt; 新文件</li>\n</ul>\n<p>netstat -ano | grep &quot;80&quot;</p>\n<ul>\n<li>\n<p>sudoers<br />\n% 开头表示用户组<br />\n权限:<br />\n/sbin:<br />\n 该目录下的命令通常只有管理员才可以运行<br />\n /bin：<br />\n下的命令管理员和一般的用户都可以使用。<br />\n/usr/sbin：<br />\n这个目录表示系统命令的位置<br />\n /usr/bin:<br />\n 存放一些用户命令，如 led (控制 LED 灯的)。</p>\n</li>\n<li>\n<p>passwd<br />\n 创建用户权限<br />\n /etc/passwd<br />\n 用户名：口令：用户标识号：组标识号：注释性描述：主目录：登录 Shell<br />\nuseradd -u uid</p>\n</li>\n<li>\n<p>usermod &amp; groupmod<br />\n// 修改用户所属组<br />\n usermod -g 用户组 用户名<br />\n // 修改用户 ID<br />\nusermod -u UID 用户名<br />\n // 修改组 ID<br />\nusermod -g GID 组名</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://maxshiroi.top/ug/155304/",
            "url": "http://maxshiroi.top/ug/155304/",
            "title": "Hello World",
            "date_published": "2022-09-23T07:53:04.734Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "helloworld"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/175233/",
            "url": "http://maxshiroi.top/ug/175233/",
            "title": "Linux入门学习0",
            "date_published": "2022-09-22T09:52:33.000Z",
            "content_html": "<h1 id=\"linux系统目录结构\"><a class=\"anchor\" href=\"#linux系统目录结构\">#</a> linux 系统目录结构</h1>\n<blockquote>\n<p>在 linux 中，所有都是以文件的形式存储和管理的。</p>\n</blockquote>\n<h2 id=\"bin\"><a class=\"anchor\" href=\"#bin\">#</a> /bin</h2>\n<blockquote>\n<p>Binary 存放经常使用的命令。</p>\n</blockquote>\n<h2 id=\"sbin\"><a class=\"anchor\" href=\"#sbin\">#</a> /sbin</h2>\n<blockquote>\n<p>super Binary 超级用户命令存放的目录。</p>\n</blockquote>\n<h2 id=\"home\"><a class=\"anchor\" href=\"#home\">#</a> /home</h2>\n<blockquote>\n<p>用户目录</p>\n</blockquote>\n<h2 id=\"root\"><a class=\"anchor\" href=\"#root\">#</a> /root</h2>\n<blockquote>\n<p>系统管理员目录</p>\n</blockquote>\n<h2 id=\"etc\"><a class=\"anchor\" href=\"#etc\">#</a> /etc</h2>\n<blockquote>\n<p>管理系统配置文件</p>\n</blockquote>\n<h2 id=\"usr\"><a class=\"anchor\" href=\"#usr\">#</a> /usr</h2>\n<blockquote>\n<p>类似于 windows 下 Programfiles 目录，</p>\n</blockquote>\n<h2 id=\"boot\"><a class=\"anchor\" href=\"#boot\">#</a> /boot</h2>\n<blockquote>\n<p>启动所使用的核心文件都会存放在这里。</p>\n</blockquote>\n<h2 id=\"proc\"><a class=\"anchor\" href=\"#proc\">#</a> /proc</h2>\n<blockquote>\n<p>内存映射</p>\n</blockquote>\n<h2 id=\"srv\"><a class=\"anchor\" href=\"#srv\">#</a> /srv</h2>\n<blockquote>\n<p>services 的缩写，用于存放服务启动所需要的数据</p>\n</blockquote>\n<h2 id=\"sys\"><a class=\"anchor\" href=\"#sys\">#</a> /sys</h2>\n<blockquote>\n<p>系统文件</p>\n</blockquote>\n<h2 id=\"tmp\"><a class=\"anchor\" href=\"#tmp\">#</a> /tmp</h2>\n<blockquote>\n<p>是 temporary (临时) 的缩写，存放临时 / 缓存文件，可当作回收站使用。</p>\n</blockquote>\n<h2 id=\"dev\"><a class=\"anchor\" href=\"#dev\">#</a> /dev</h2>\n<blockquote>\n<p>device 的缩写，类似于 windows 的设备管理器。</p>\n</blockquote>\n<h2 id=\"mnt\"><a class=\"anchor\" href=\"#mnt\">#</a> /mnt</h2>\n<blockquote>\n<p>linux 用于挂载可移动设备（临时）的目录。</p>\n</blockquote>\n<h2 id=\"opt\"><a class=\"anchor\" href=\"#opt\">#</a> /opt</h2>\n<blockquote>\n<p>主机额外安装的软件存放的目录</p>\n</blockquote>\n<h2 id=\"var\"><a class=\"anchor\" href=\"#var\">#</a> /var</h2>\n<blockquote>\n<p>存放经常被修改的目录或文件，比如日志（*.log）。</p>\n</blockquote>\n<h2 id=\"lib\"><a class=\"anchor\" href=\"#lib\">#</a> /lib</h2>\n<blockquote>\n<p>存放系统基本的动态链接库。</p>\n</blockquote>\n<h1 id=\"权限数字意思详解\"><a class=\"anchor\" href=\"#权限数字意思详解\">#</a> 权限数字意思详解</h1>\n<p>我们首先打开控制台在任意位置输入 ll, 就能看到当前文件夹下所有类型的信息。我们只取其中的前十位来进行结束.</p>\n<blockquote>\n<p>dr-xr-xr-x.</p>\n</blockquote>\n<h2 id=\"第一位\"><a class=\"anchor\" href=\"#第一位\">#</a> 第一位</h2>\n<blockquote>\n<p>第一位表示类型</p>\n</blockquote>\n<ul>\n<li>d directory 表示目录</li>\n<li>b block 块文件</li>\n<li>c char 字符文件</li>\n<li>- file 普通文件</li>\n<li>l link 链接</li>\n<li>etc.</li>\n</ul>\n<h2 id=\"后面九位\"><a class=\"anchor\" href=\"#后面九位\">#</a> 后面九位</h2>\n<blockquote>\n<p>后面九位表示了文件的类型，对应的位置如果是 <code>-</code>  则表示没有对应的权限.</p>\n</blockquote>\n<table>\n    <th>\n        <td colspan=\"3\">前三位</td>\n        <td colspan=\"3\">中间三位</td>\n        <td colspan=\"3\">后三位</td>\n    </th>\n    <tr align=\"center\">\n        <td colspan=\"3\">创建者</td>\n        <td colspan=\"3\">同组用户</td>\n        <td colspan=\"3\">其他用户</td>\n    </tr>\n    <tr align=\"center\">\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n    </tr>\n    <tr align=\"center\">\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n    </tr>\n</table>\n<p>下面来看一个实例:</p>\n<p>如果一个文件的权限为 755, 则代表什么意思？</p>\n<p>我们只需要把 755 按位转换为二进制，对应位为 0 则表示没有这个权限.</p>\n<table>\n<thead>\n<tr>\n<th>7</th>\n<th>5</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>111</td>\n<td>101</td>\n<td>101</td>\n</tr>\n</tbody>\n</table>\n<p>用人的语言表述:</p>\n<blockquote>\n<p>对于创建者：可以读取，可以更改，可以执行.<br />\n 对于同组人员：可以读取，不能更改，可以执行.<br />\n 对于其他成员：可以读取，不能更改，可以执行.</p>\n</blockquote>\n",
            "tags": [
                "linux",
                "目录",
                "指令",
                "权限"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/120738/",
            "url": "http://maxshiroi.top/ug/120738/",
            "title": "shortcutforshoka",
            "date_published": "2022-09-21T04:07:38.000Z",
            "content_html": "<figure class=\"highlight java\"><figcaption><span>java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span> (System.in);</span><br><span class=\"line\"><span class=\"comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></span><br><span class=\"line\">System.out.println (in.nextLine ());</span><br><span class=\"line\">System.out.println (<span class=\"string\">&quot;Hello&quot;</span> + <span class=\"string\">&quot;world.&quot;</span>);</span><br></pre></td></tr></table></figure>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/playlist?id=2943811283\",\"https://music.163.com/#/playlist?id=2297706586\"]},{\"title\":\"列表 2\",\"list\":[\"https://music.163.com/#/playlist?id=2031842656\"]}]'></div></div>\n<p>原本用于日语汉字假名注音，但别的注音也可以。<br />\n为了兼容性，采用 markdown-it-ruby 的基本格式： <ruby>文字<rp> (</rp><rt>注音</rt><rp>)</rp></ruby> ，并且为了兼容表格，将分隔符由 | 换成了 ^ 。<br />\n注音分隔基于 furigana-markdown-it 显示说明看这里</p>\n<p><ruby>取<rp> (</rp><rt>と</rt><rp>)</rp> り<rt></rt>返<rp> (</rp><rt>かえ</rt><rp>)</rp> す<rt></rt></ruby>\t取とり返かえす<br />\n<ruby>可愛<rp> (</rp><rt>かわい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可愛かわいい犬いぬ<br />\n<ruby>可<rp> (</rp><rt>か</rt><rp>)</rp> 愛<rp> (</rp><rt>わい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可か愛わいい犬いぬ<br />\n<ruby>アクセラレータ<rp> (</rp><rt>accelerator</rt><rp>)</rp></ruby>\tアクセラレータ accelerator<br />\n<ruby>accelerator<rp>(</rp><rt>アクセラレータ</rt><rp>)</rp></ruby>\taccelerator アクセラレータ<br />\n<ruby>食<rp> (</rp><rt>た</rt><rp>)</rp> べる<rt></rt></ruby>\t食たべる<br />\n<ruby>食べる<rp> (</rp><rt>たべる</rt><rp>)</rp></ruby>\t食べるたべる<br />\n<ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby>\tあ●い●う●え●お●<br />\n<ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby>\tあ❤い❤う❤え❤お❤<br />\n<ruby>常用账号<rp> (</rp><rt>contact</rt><rp>)</rp></ruby>\t常用账号 contact</p>\n",
            "tags": [
                "短链",
                "测试"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/164658/",
            "url": "http://maxshiroi.top/ug/164658/",
            "title": "解决windows资源管理器无法自动刷新等问题",
            "date_published": "2022-09-20T08:46:58.000Z",
            "content_html": "<blockquote>\n<p>有时候在使用资源管理器新建文件的时候发现无法自动刷新，每次都需要手动刷新才会出现。这同样也导致了 chrome 在保存文件时会卡住一段时间。</p>\n</blockquote>\n<h1 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h1>\n<p>其实解决方法很简单，关掉你映射的所有网络驱动器即可恢复。据说这是 windows 的一个 bug，取消掉网络驱动器映射便解决了这个问题。</p>\n",
            "tags": [
                "win",
                "explorer.exe",
                "autorefresh"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222828/",
            "url": "http://maxshiroi.top/ug/222828/",
            "title": "vmware安装好后配置centos网络",
            "date_published": "2022-09-19T14:28:28.000Z",
            "content_html": "<h1 id=\"更改-ifcfg-ens33-文件\"><a class=\"anchor\" href=\"#更改-ifcfg-ens33-文件\">#</a> 更改 ifcfg-ens33 文件</h1>\n<blockquote>\n<p>编辑配置文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>需要添加 / 修改的地方</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=<span class=\"built_in\">yes</span></span><br><span class=\"line\">IPADDR=192.168.xx.xx</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br><span class=\"line\">GATEWAY=192.168.204.2</span><br><span class=\"line\">DNS1=8.8.8.8</span><br><span class=\"line\">DNS2=114.114.114.114</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑-resolvconf-文件\"><a class=\"anchor\" href=\"#编辑-resolvconf-文件\">#</a> 编辑 resolv.conf 文件</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>添加如下内容</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Generated by NetworkManager</span></span><br><span class=\"line\">search localdomain</span><br><span class=\"line\">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>\n<h1 id=\"重启网卡\"><a class=\"anchor\" href=\"#重启网卡\">#</a> 重启网卡</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "linux",
                "centos",
                "network",
                "vmware"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/002853/",
            "url": "http://maxshiroi.top/ug/002853/",
            "title": "在你的 linux nas 上安装一个种子下载器吧！",
            "date_published": "2022-08-28T16:28:53.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>Transmission 是一款流行的 BT 下载软件，比其他客户端使用更少的资源，守护程序非常适合服务器，并且可以通过桌面 GUI、Web 界面和终端程序进行远程控制，支持本地对等发现、完全加密、DHT、µTP、PEX 和 Magnet Link 等。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p>这有啥好说的，直接 apt 一把梭：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install transmission-daemon</span><br></pre></td></tr></table></figure>\n<p>不过在更改配置前，建议先关一下服务，以防万一：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop transmission-daemon</span><br></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<ol>\n<li>transmission 的配置文件在  <code>/etc/transmission-daemon/settings.json</code></li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/transmission-daemon/settings.json</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>主要需要看看下面这几项：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&quot;download-dir&quot;</span>: <span class=\"string\">&quot;/home/pi/complete&quot;</span>, <span class=\"comment\"># 下载目录 </span></span><br><span class=\"line\"><span class=\"string\">&quot;incomplete-dir&quot;</span>: <span class=\"string\">&quot;/home/pi/incomplete&quot;</span>, <span class=\"comment\"># 下载未完成文件目录</span></span><br><span class=\"line\"><span class=\"string\">&quot;rpc-authentication-required&quot;</span>: <span class=\"literal\">false</span>, <span class=\"comment\"># 懒得配置密码直接把验证关掉。</span></span><br><span class=\"line\"><span class=\"string\">&quot;rpc-host-whitelist-enabled&quot;</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;rpc-port&quot;</span>: 9091, <span class=\"comment\"># 默认 Web 访问端口，这个可以根据需要修改一下。</span></span><br><span class=\"line\"><span class=\"string\">&quot;rpc-whitelist-enabled&quot;</span>: <span class=\"literal\">false</span>, <span class=\"comment\"># 白名单开关</span></span><br><span class=\"line\"><span class=\"string\">&quot;utp-enabled&quot;</span>: <span class=\"literal\">true</span> <span class=\"comment\"># 允许 Web 登录</span></span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>修改完成后启动 daemon：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start transmission-daemon</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>浏览器打开 127.0.0.1:9091 查看效果：<br />\n<img data-src=\"/img/transmission/20220920213841.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"安装第三方主题\"><a class=\"anchor\" href=\"#安装第三方主题\">#</a> 安装第三方主题</h1>\n<p>下载并执行 TWC 中文界面安装脚本</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh</span><br><span class=\"line\">bash install-tr-control-cn.sh</span><br></pre></td></tr></table></figure>\n<p>按 数字 1 然后回车安装。</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt; <span class=\"string\">2022-08-29 00:27:53 &gt;&gt; 安装脚本执行完成。如遇到问题请查看：https://github.com/ronggang/transmission-web-control/wiki</span></span><br><span class=\"line\"><span class=\"string\">&lt;&lt; 2022</span>-08-29 00:27:53 &gt;&gt; == 结束 ==</span><br></pre></td></tr></table></figure>\n<p>弹出如上提示则安装成功，返回 web 界面刷新即可。<br />\n<img data-src=\"/img/transmission/20220920213753.png\" alt=\"\" /></p>\n",
            "tags": [
                "transmission",
                "torrent",
                "下载器",
                "nas"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/234236/",
            "url": "http://maxshiroi.top/ug/234236/",
            "title": "解决Windows直接访问WSL2路径并直接进行读写操作,权限不足的问题",
            "date_published": "2022-08-28T15:42:36.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>初次安装 WSL Ubuntu 时，一般都会设置默认登录用户，当你通过 windows 访问该文件夹时，如果访问的 Ubuntu 目录的权限用户时你的默认用户，你可以对其进行修改。但是如果你访问的时 root 权限的用户，则会出现如权限不足，permission deny 报错。</p>\n<h1 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\wangj\\AppData\\Local\\Microsoft\\WindowsApps\\debian.exe config --default-user root</span><br></pre></td></tr></table></figure>\n<p>修改完成后，记得重启 wsl：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --shutdown</span><br></pre></td></tr></table></figure>\n<p>10s 后，在执行 wsl 命令，然后再次测试，看是否可行。</p>\n",
            "tags": [
                "wsl",
                "权限不足",
                "vscode"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222543/",
            "url": "http://maxshiroi.top/ug/222543/",
            "title": "部署完hexo后还应该准备哪些工作",
            "date_published": "2022-08-28T14:25:43.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>上一回我们讲到了如何部署 hexo 到 github 上，并简单的向 repo 里推送了你的博客。这一回我们简单的来完善你的博客。</p>\n<h1 id=\"0shoka主题配置\"><a class=\"anchor\" href=\"#0shoka主题配置\">#</a> 0.shoka 主题配置</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">Click Me</span></p>\n</blockquote>\n<h1 id=\"1备份hexo源文件到-backup-分支\"><a class=\"anchor\" href=\"#1备份hexo源文件到-backup-分支\">#</a> 1. 备份 Hexo 源文件到 Backup 分支</h1>\n<p>由于种种原因我们总会更改自己的工作环境或者一顿操作猛如虎，将自己博客的源文件一通收拾，然后就没有然后了。<br />\n所以建议大家创建好博客记得把源文件也一同备份到 Github 上以防万一。</p>\n<h2 id=\"创建backup分支\"><a class=\"anchor\" href=\"#创建backup分支\">#</a> 创建 backup 分支</h2>\n<ol>\n<li>打开你 GitHub repo 的页面，点击左上角的分支选项。</li>\n<li>点击 View all branches，然后点击右上角的 New branch。</li>\n<li>Branch name：backup，Branch source：master</li>\n<li>create branch。</li>\n</ol>\n<h2 id=\"将backup分支切换为默认分支\"><a class=\"anchor\" href=\"#将backup分支切换为默认分支\">#</a> 将 backup 分支切换为默认分支</h2>\n<blockquote>\n<p>我也不知道为什么要这么做，但是不这么做最后一步就没法 push 了 😦</p>\n</blockquote>\n<h2 id=\"将repo-clone到本地\"><a class=\"anchor\" href=\"#将repo-clone到本地\">#</a> 将 repo clone 到本地</h2>\n<ol>\n<li>直接在博客根目录下执行这个命令：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> <span class=\"string\">&#x27;你的repo&#x27;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>将克隆过来 repo 里的 <code>.git</code>  文件夹拷贝到博客根目录。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r ./<span class=\"string\">&#x27;你的repo&#x27;</span> ./</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>依次执行以下指令</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;Backup&#x27;</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></table></figure>\n<h2 id=\"报错\"><a class=\"anchor\" href=\"#报错\">#</a> 报错</h2>\n<p>可能会提示如下错误</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access <span class=\"string\">&#x27;https://github.com/xxx/xxx.github.io.git/&#x27;</span>: GnuTLS recv error (-110): The TLS connection was non-properly terminated.</span><br></pre></td></tr></table></figure>\n<p>执行下面的指令即可正常推送</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> git.proxy</span><br></pre></td></tr></table></figure>\n<h2 id=\"还原\"><a class=\"anchor\" href=\"#还原\">#</a> 还原</h2>\n<ol>\n<li>克隆 backup 分支到本地</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> -b backup https://github.com/maxshiro/maxshiro.github.io.git</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装依赖</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install</span><br></pre></td></tr></table></figure>\n<h1 id=\"2-博客加密\"><a class=\"anchor\" href=\"#2-博客加密\">#</a> 2. 博客加密</h1>\n<ul>\n<li>有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。</li>\n<li>这在 wordpress，emlog 或其他博客系统中都很容易实现，然而 hexo 除外。😦</li>\n<li>为了解决这个问题，我们需要安装 “hexo-blog-encrypt” 扩展。</li>\n</ul>\n<h2 id=\"安装指令\"><a class=\"anchor\" href=\"#安装指令\">#</a> 安装指令</h2>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure>\n<h2 id=\"快速使用\"><a class=\"anchor\" href=\"#快速使用\">#</a> 快速使用</h2>\n<p>将 password 标签添加到您的 Front-matter 里，就像这样：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: xxx</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2022-08-26 17:34:59</span><br><span class=\"line\">password: 233</span><br><span class=\"line\">tags: xxx</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h2 id=\"特性\"><a class=\"anchor\" href=\"#特性\">#</a> 特性</h2>\n<ul>\n<li>一旦你输入了正确的密码，它就会被存储在本地浏览器的 localStorage 中。按个按钮，密码将会被清空。若博客中有脚本，它将被正确地执行。</li>\n<li>支持按标签加密。</li>\n<li>所有的核心功能都是由原生的 API 所提供的。在 Node.js 中，我们使用 Crypto。在浏览器中，我们使用 Web Crypto API。</li>\n<li>PBKDF2，SHA256 被用作复制密钥，AES256-CBC 被用作加解密，我们还使用 HMAC 来验证密文的来源，并确保其纠正。</li>\n<li>广泛地使用 Promise 来进行异步操作，从而确保线程不被杜塞。</li>\n<li>过时的浏览器将无法正常显示，因此，请升级您的浏览器。</li>\n</ul>\n<h1 id=\"3-博客加速\"><a class=\"anchor\" href=\"#3-博客加速\">#</a> 3. 博客加速</h1>\n<blockquote>\n<p>于 2022 年 11 月测试 vercel.app 已经被墙了，但是还可以通过自备域名的方式。</p>\n</blockquote>\n<p>使用 Vercel 加速 Hexo 博客访问速度。<br />\n如果你想让您的博客更快的更新，那么可以采取这种方法的同时，也可以加速你的博客。<br />\n该方法适用于已经使用我的方法将博客源文件备份到了 github 的。</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<ol>\n<li><span class=\"exturl\" data-url=\"aHR0cDovL3huLS12ZXJjZWwtb2kybHMzdC5jb20=\">打开 vercel.com</span>, 这个域名没有被墙。登陆的时候选择 github 方式。<br />\n<img data-src=\"/img/hexoplugin/20221116141135.png\" alt=\"\" /></li>\n<li>创建新项目，选择 git 仓库中已存在的项目，然后选 Deploy。</li>\n<li>创建完成后就可以通过  <code>你项目名称.vercel.app</code>  访问了。但是目前 vercel.app 已经被墙了，所以还需要在设置里添加自己的域名。</li>\n<li>切换到自己的域名控制台里添加一条 cname 记录，指向这个地址  <code>cname-china.vercel-dns.com</code>  。</li>\n<li>将 Git Branch 里的内容改为存放自己博客备份的分支，比如我的就是 backup 分支。同时也可以将分配给你的二级域名也改成这个分支。<br />\n<img data-src=\"/img/hexoplugin/20221116144428.png\" alt=\"\" /></li>\n<li>切换到 Git 项目，将 Production Branch 也更改为 backup 分支。<br />\n<img data-src=\"/img/hexoplugin/20221116144502.png\" alt=\"\" /></li>\n<li>此时如果你的 backup 分支如果有更新，那么 vercel 会自动克隆你的源文件然后编译更新 cache。</li>\n<li>使用这种方法独立于 github page。只有当你 hexo d 之后源博客才会更新。</li>\n</ol>\n<h2 id=\"保护博客源码内容\"><a class=\"anchor\" href=\"#保护博客源码内容\">#</a> 保护博客源码内容</h2>\n<p>如果你认为这种方式要更好一些，当然你也可以选择直接关掉 github page 并将仓库设置为 private，这样别人就无法轻易获取您博客的源代码了。</p>\n<h1 id=\"写作流程\"><a class=\"anchor\" href=\"#写作流程\">#</a> 写作流程</h1>\n<h2 id=\"第一次使用\"><a class=\"anchor\" href=\"#第一次使用\">#</a> 第一次使用</h2>\n<ol>\n<li>安装 nodejs，git，hexo，npm</li>\n<li>git clone 仓库链接</li>\n<li>cd 到目录然后 cnpm install</li>\n<li>撰写博客</li>\n</ol>\n<h2 id=\"通过github-page\"><a class=\"anchor\" href=\"#通过github-page\">#</a> 通过 github page</h2>\n<ol>\n<li>撰写博客</li>\n<li>保存到 github。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;Backup&#x27;</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>生成并提交网页。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 生成静态网页</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">// 生成目录文件</span><br><span class=\"line\">hexo algolia</span><br><span class=\"line\">// 打开本地服务器预览</span><br><span class=\"line\">hexo s</span><br><span class=\"line\">// 提交到github page</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>等待网页更新。</li>\n</ol>\n<h2 id=\"通过vercelcom\"><a class=\"anchor\" href=\"#通过vercelcom\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS12ZXJjZWwtMnUzc2R1LmNvbQ==\">通过 vercel.com</span></h2>\n<ol>\n<li>撰写博客</li>\n<li>保存到 github。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;Backup&#x27;</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>等待网页更新。</li>\n</ol>\n",
            "tags": [
                "plugin",
                "hexo",
                "backup"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/212907/",
            "url": "http://maxshiroi.top/ug/212907/",
            "title": "Centos安装MatrixSynapseChat简易教程",
            "date_published": "2022-08-28T13:29:07.000Z",
            "content_html": "<h2 id=\"先安装前置\"><a class=\"anchor\" href=\"#先安装前置\">#</a> 先安装前置</h2>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libtiff-devel libjpeg-devel libzip-devel freetype-devel libwebp-devel libxml2-devel libxslt-devel libpq-devel python3-virtualenv libffi-devel openssl-devel python3-devel</span><br><span class=\"line\">yum groupinstall <span class=\"string\">&quot;Development Tools&quot;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"使用root账户接入您的centos找到合适的位置开始操作\"><a class=\"anchor\" href=\"#使用root账户接入您的centos找到合适的位置开始操作\">#</a> 使用 root 账户接入您的 centos，找到合适的位置开始操作</h2>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> syn</span><br></pre></td></tr></table></figure>\n<h3 id=\"依次执行以下指令\"><a class=\"anchor\" href=\"#依次执行以下指令\">#</a> 依次执行以下指令</h3>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv -p python3 ./env &amp;&amp; <span class=\"built_in\">source</span> ./env/bin/activate</span><br><span class=\"line\">python3 -m pip install --upgrade pip &amp;&amp; python3 -m pip install --upgrade setuptools &amp;&amp; python3 -m pip install psycopg2-binary</span><br><span class=\"line\">python3 -m pip install matrix-synapse                         //安装synapse</span><br><span class=\"line\">python3 -m pip install -U matrix-synapse                    //更新synapse</span><br></pre></td></tr></table></figure>\n<h2 id=\"将下列指令拷贝到控制台执行自动生成homeserveryaml\"><a class=\"anchor\" href=\"#将下列指令拷贝到控制台执行自动生成homeserveryaml\">#</a> 将下列指令拷贝到控制台执行，自动生成 homeserver.yaml</h2>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m synapse.app.homeserver \\</span><br><span class=\"line\">    --server-name im.axro.top \\</span><br><span class=\"line\">    --config-path homeserver.yaml \\</span><br><span class=\"line\">    --generate-config \\</span><br><span class=\"line\">    --report-stats=no</span><br></pre></td></tr></table></figure>\n<h2 id=\"编辑生成homeserveryaml\"><a class=\"anchor\" href=\"#编辑生成homeserveryaml\">#</a> 编辑生成 <code>homeserver.yaml</code></h2>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enable_registration: <span class=\"literal\">true</span></span><br><span class=\"line\">suppress_key_server_warning: <span class=\"literal\">true</span></span><br><span class=\"line\">bind_addresses: [<span class=\"string\">&#x27;::1&#x27;</span>, <span class=\"string\">&#x27;0.0.0.0&#x27;</span>]</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动关闭服务器\"><a class=\"anchor\" href=\"#启动关闭服务器\">#</a> 启动 / 关闭服务器</h2>\n<h4 id=\"注意要先进入虚拟python环境\"><a class=\"anchor\" href=\"#注意要先进入虚拟python环境\">#</a> 注意要先进入虚拟 python 环境</h4>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> ./env/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\">synctl start</span><br><span class=\"line\">synctl stop</span><br></pre></td></tr></table></figure>\n<h2 id=\"退出虚拟环境\"><a class=\"anchor\" href=\"#退出虚拟环境\">#</a> 退出虚拟环境</h2>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deactivate</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置反代\"><a class=\"anchor\" href=\"#配置反代\">#</a> 配置反代</h2>\n<p>进入宝塔面板新建静态网站，配置 ssl，配置反向代理地址为 <code>https://localhost:8008</code> , 保存即可.</p>\n",
            "tags": [
                "nextcloud",
                "聊天室",
                "python"
            ]
        }
    ]
}
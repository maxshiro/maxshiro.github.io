{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro's Blog",
    "subtitle": "A blog for learn.",
    "icon": "http://maxshiroi.top/images/favicon.ico",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/ug/134329/",
            "url": "http://maxshiroi.top/ug/134329/",
            "title": "vercelspeedup",
            "date_published": "2022-11-16T05:43:29.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://maxshiroi.top/ug/204417/",
            "url": "http://maxshiroi.top/ug/204417/",
            "title": "在Debian系linux上通过apt的方式安装plex媒体中心",
            "date_published": "2022-11-02T12:44:17.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>plex 是一个包含订阅制的个人媒体中心，可以在你的智能设备：Phone / Android TV / Windows / MAC OS 等在线使用专用的客户端来浏览你存储在 nas 上的影片。<br />\n<img data-src=\"/img/linuxplexguide/20221102204637.png\" alt=\"\" /><br />\n如果你付费订阅则会支持更多的功能如在线硬解码 / 使用 dashboard 来控制设备 / 使用 plexamp 来播放音乐。当然免费的功能已经足够我们使用。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<ol>\n<li>首先更新</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update &amp;&amp; sudo apt upgrade</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装 apt-transport-https 包</li>\n</ol>\n<blockquote>\n<p>要将 Plex 包安装到树莓派上，需要添加官方的 Plex 包仓库。这个包允许 “apt” 包管理器通过 Plex 仓库使用的 “https” 协议来检索包。</p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install apt-transport-https</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>把 Plex 仓库添加到 apt 源</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://downloads.plex.tv/plex-keys/PlexSign.key | sudo apt-key add -</span><br><span class=\"line\"><span class=\"built_in\">echo</span> deb https://downloads.plex.tv/repo/deb public main | sudo <span class=\"built_in\">tee</span> /etc/apt/sources.list.d/plexmediaserver.list</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>再次更新</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>一行命令安装 Plex</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install plexmediaserver</span><br></pre></td></tr></table></figure>\n<h1 id=\"使用plex\"><a class=\"anchor\" href=\"#使用plex\">#</a> 使用 Plex</h1>\n<p>打开  <code>Your IP:32400/web</code>  来登录并配置你自己的 Plex 服务器</p>\n<h2 id=\"在安卓设备上安装plex和plexamp软件\"><a class=\"anchor\" href=\"#在安卓设备上安装plex和plexamp软件\">#</a> 在安卓设备上安装 plex 和 plexamp 软件。</h2>\n<blockquote>\n<p>不保证时效性，若失效请自行查找。</p>\n</blockquote>\n<ul>\n<li>plex 软件开心版<span class=\"exturl\" data-url=\"aHR0cHM6Ly9hcGttb2R5LmlvL2FwcHMvcGxleA==\">点我下载</span><br />\n<img data-src=\"/img/linuxplexguide/image.png.png\" alt=\"\" /></li>\n<li>plexamp 软件开心版<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mb3J1bS5tb2JpbGlzbS5tZS92aWV3dG9waWMucGhwP2Y9MTMzMiZhbXA7dD00OTcwMDkz\">点我下载</span><br />\n<img data-src=\"/img/linuxplexguide/20221102210820.png\" alt=\"\" /></li>\n<li>symfonium 这个没开心版，但是界面好看。<br />\n<img data-src=\"/img/linuxplexguide/20221102210737.png\" alt=\"\" /><br />\n<img data-src=\"/img/linuxplexguide/20221102210803.png\" alt=\"\" /></li>\n</ul>\n<h2 id=\"安装wangyiyun插件来自动匹配音乐封面和歌词\"><a class=\"anchor\" href=\"#安装wangyiyun插件来自动匹配音乐封面和歌词\">#</a> 安装 Wangyiyun 插件来自动匹配音乐封面和歌词。</h2>\n<ol>\n<li>使用 git clone 下载。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo git <span class=\"built_in\">clone</span> https://github.com/timmy0209/WangYiYun.bundle.git /usr/lib/plexmediaserver/Resources/Plug-ins-f4cdfea9c/WangYiYun.bundle</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>重启 plex</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart plexmediaserver</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>直接在音乐源里勾选 wangyiyun 即可。</li>\n</ol>\n",
            "tags": [
                "media center",
                "plex",
                "emby",
                "jellyfin",
                "视频",
                "音乐"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/101622/",
            "url": "http://maxshiroi.top/ug/101622/",
            "title": "解决mysql第一次安装后改密码的各种问题",
            "date_published": "2022-10-19T02:16:22.000Z",
            "content_html": "<h1 id=\"如何重置mysql密码\"><a class=\"anchor\" href=\"#如何重置mysql密码\">#</a> 如何重置 mysql 密码？</h1>\n<p>按照提示，alter user。</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;123456&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"/img/WebBackcreat1/20221019100609.png\" alt=\"\" /><br />\n哈哈快乐报错。</p>\n<p>更改密码复杂度。</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_length=1;</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1193 (HY000): Unknown system variable <span class=\"string\">&#x27;validate_password_policy&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>很快乐。</p>\n<p>那就先查看密码规范：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW VARIABLES LIKE <span class=\"string\">&#x27;validate_password%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></table></figure>\n<p>套娃呢是吧。</p>\n<p>解决方法：<br />\n重置一个和随机密码差不多的就可以了：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;qazWsx&gt;+&amp;3ed&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p>已经提示成功了：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;qazWsx&gt;+&amp;3ed&#x27;</span>;</span><br><span class=\"line\">Query OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></table></figure>\n<p>更改密码复杂度：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.length=6;</span><br></pre></td></tr></table></figure>\n<p>修改密码并退出：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class=\"string\">&#x27;123456&#x27;</span>;</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></table></figure>\n<p>然后就可以愉快重启登陆了：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld</span><br><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "linux",
                "mysql",
                "passwd"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211932/",
            "url": "http://maxshiroi.top/ug/211932/",
            "title": "在centos中部署后端程序。",
            "date_published": "2022-10-16T13:19:32.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>其实部署很简单，重要的地方在于部署时出现差错后该如何进行处理。</p>\n</blockquote>\n<h1 id=\"nginx的安装\"><a class=\"anchor\" href=\"#nginx的安装\">#</a> Nginx 的安装</h1>\n<p>使用源码编译安装：</p>\n<ol>\n<li>访问<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZ2lueC5vcmcvZW4vZG93bmxvYWQuaHRtbA==\"> Nginx</span> 官网，复制最新版本链接。wget 到本地目录。</li>\n</ol>\n<blockquote>\n<p><img data-src=\"/img/WebBackcreat1/20221016212408.png\" alt=\"\" /></p>\n</blockquote>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nginx.org/download/nginx-1.23.1.tar.gz ~/</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>解压出来。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.23.1.tar.gz</span><br><span class=\"line\">// 如果这里是 *.tar.bz2 的话则使用 -jxvf</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>安装编译所需要的前置。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>进入解压出来的文件夹，编译安装。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.23.1</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>nginx 的启动和关闭</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx/sbin</span><br><span class=\"line\">// 启动nginx</span><br><span class=\"line\">./nginx</span><br><span class=\"line\">// 关闭nginx</span><br><span class=\"line\">./nginx -s stop</span><br><span class=\"line\">// 关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>创建目录</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /var/temp/nginx -p</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>建议在执行前先使用 netstat -aux | grep 80 查看是否有端口占用 80。</p>\n</blockquote>\n<ol start=\"7\">\n<li>开机自启 * 还没写完\n<ol>\n<li>编辑文件</li>\n</ol>\n <figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /lib/systemd/system/</span><br><span class=\"line\">vim nginx.service</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>添加内容</li>\n</ol>\n <figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit] </span><br><span class=\"line\">Description=nginx </span><br><span class=\"line\">service After=network.target </span><br><span class=\"line\">[Service] </span><br><span class=\"line\">Type=forking </span><br><span class=\"line\">ExecStart=/usr/local/nginx/sbin/nginx </span><br><span class=\"line\">ExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=<span class=\"literal\">true</span> </span><br><span class=\"line\">[Install] </span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\">// 解释</span><br><span class=\"line\">[Unit]:服务的说明</span><br><span class=\"line\">Description:描述服务</span><br><span class=\"line\">After:描述服务类别</span><br><span class=\"line\">[Service]服务运行参数的设置</span><br><span class=\"line\">Type=forking是后台运行的形式</span><br><span class=\"line\">ExecStart为服务的具体运行命令</span><br><span class=\"line\">ExecReload为重启命令</span><br><span class=\"line\">ExecStop为停止命令</span><br><span class=\"line\">PrivateTmp=True表示给服务分配独立的临时空间</span><br><span class=\"line\">注意：[Service]的启动、重启、停止命令全部要求使用绝对路径</span><br><span class=\"line\">[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>保存退出</li>\n<li>启动</li>\n</ol>\n <figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start nginx.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx.service</span><br><span class=\"line\">systemctl status nginx.service</span><br></pre></td></tr></table></figure>\n</li>\n<li>233</li>\n</ol>\n<h1 id=\"mysql-的安装\"><a class=\"anchor\" href=\"#mysql-的安装\">#</a> Mysql 的安装</h1>\n<ol>\n<li>先安装 wget  <code>yum install wget</code> 。</li>\n<li>下载并安装 mysql。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum -y localinstall mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>启动 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 启动mysql</span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\">// 写入开机启动</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>查找日志并找到临时密码。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /var/log/mysqld.log</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p><img data-src=\"/img/WebBackcreat1/20221019082932.png\" alt=\"\" /></p>\n</blockquote>\n<ol start=\"5\">\n<li>登录 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">// 密码则为查找到的临时密码。</span><br><span class=\"line\">password:</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>修改密码</li>\n</ol>\n<blockquote>\n<p>后面专门说这傻逼 mysql 改密码。</p>\n</blockquote>\n<ol start=\"7\">\n<li>重启 mysql 服务</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service mysqld restart</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>重启后就可以正常使用 mysql 了。</p>\n</blockquote>\n",
            "tags": [
                "linux",
                "centos",
                "web",
                "nginx",
                "mysql"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/085248/",
            "url": "http://maxshiroi.top/ug/085248/",
            "title": "CTF：Upload-Labs-Linux",
            "date_published": "2022-10-10T00:52:48.000Z",
            "content_html": "<h1 id=\"题目预览\"><a class=\"anchor\" href=\"#题目预览\">#</a> 题目预览：</h1>\n<p><img data-src=\"/img/Upload-Labs-Linux/20221010085420.png\" alt=\"\" /></p>\n<h1 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<ol>\n<li>开控制台</li>\n<li>关闭 javascript\n<blockquote>\n<p>设置 - 偏好设置 - 调试程序<br />\n删除 <code>onsubmit=&quot;return.checkFile()&quot;</code></p>\n</blockquote>\n</li>\n<li>新建一个文件里面写入 <code>&lt;?php @eval($_POST['123']);?&gt;</code></li>\n<li>后缀名改为 php 上传到网站，显示出图片后右键复制链接。</li>\n<li>打开 antsword，add 一个 url 地址为图片链接，密码为 123，加密 base64.</li>\n<li>点击链接就能发现根目录有个 flag 文件了。</li>\n</ol>\n",
            "tags": [
                "ctf",
                "buuctf",
                "antsword"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/082833/",
            "url": "http://maxshiroi.top/ug/082833/",
            "title": "linuxlearn2",
            "date_published": "2022-09-27T00:28:33.000Z",
            "content_html": "<hr />\n<p>title: linuxlearn2<br />\ndate: 2022-10-18 11:16:47<br />\ntags:</p>\n<ul>\n<li>diff</li>\n<li>sudoers</li>\n<li>passwd</li>\n<li>usermod</li>\n<li>linux</li>\n</ul>\n<hr />\n<ul>\n<li>diff 命令<br />\n diff 参数 文件 1 文件 2 &gt; 新文件</li>\n</ul>\n<p>netstat -ano | grep &quot;80&quot;</p>\n<ul>\n<li>\n<p>sudoers<br />\n% 开头表示用户组<br />\n权限:<br />\n/sbin:<br />\n 该目录下的命令通常只有管理员才可以运行<br />\n /bin：<br />\n下的命令管理员和一般的用户都可以使用。<br />\n/usr/sbin：<br />\n这个目录表示系统命令的位置<br />\n /usr/bin:<br />\n 存放一些用户命令，如 led (控制 LED 灯的)。</p>\n</li>\n<li>\n<p>passwd<br />\n 创建用户权限<br />\n /etc/passwd<br />\n 用户名：口令：用户标识号：组标识号：注释性描述：主目录：登录 Shell<br />\nuseradd -u uid</p>\n</li>\n<li>\n<p>usermod &amp; groupmod<br />\n// 修改用户所属组<br />\n usermod -g 用户组 用户名<br />\n // 修改用户 ID<br />\nusermod -u UID 用户名<br />\n // 修改组 ID<br />\nusermod -g GID 组名</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://maxshiroi.top/ug/155304/",
            "url": "http://maxshiroi.top/ug/155304/",
            "title": "Hello World",
            "date_published": "2022-09-23T07:53:04.734Z",
            "content_html": "<p>Welcome to <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvLw==\">Hexo</span>! This is your very first post. Check <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv\">documentation</span> for more info. If you get any problems when using Hexo, you can find the answer in <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=\">troubleshooting</span> or you can ask me on <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==\">GitHub</span>.</p>\n<h2 id=\"quick-start\"><a class=\"anchor\" href=\"#quick-start\">#</a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"anchor\" href=\"#create-a-new-post\">#</a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s\">Writing</span></p>\n<h3 id=\"run-server\"><a class=\"anchor\" href=\"#run-server\">#</a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=\">Server</span></p>\n<h3 id=\"generate-static-files\"><a class=\"anchor\" href=\"#generate-static-files\">#</a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s\">Generating</span></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"anchor\" href=\"#deploy-to-remote-sites\">#</a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s\">Deployment</span></p>\n",
            "tags": [
                "helloworld"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/175233/",
            "url": "http://maxshiroi.top/ug/175233/",
            "title": "Linux入门学习0",
            "date_published": "2022-09-22T09:52:33.000Z",
            "content_html": "<h1 id=\"linux系统目录结构\"><a class=\"anchor\" href=\"#linux系统目录结构\">#</a> linux 系统目录结构</h1>\n<blockquote>\n<p>在 linux 中，所有都是以文件的形式存储和管理的。</p>\n</blockquote>\n<h2 id=\"bin\"><a class=\"anchor\" href=\"#bin\">#</a> /bin</h2>\n<blockquote>\n<p>Binary 存放经常使用的命令。</p>\n</blockquote>\n<h2 id=\"sbin\"><a class=\"anchor\" href=\"#sbin\">#</a> /sbin</h2>\n<blockquote>\n<p>super Binary 超级用户命令存放的目录。</p>\n</blockquote>\n<h2 id=\"home\"><a class=\"anchor\" href=\"#home\">#</a> /home</h2>\n<blockquote>\n<p>用户目录</p>\n</blockquote>\n<h2 id=\"root\"><a class=\"anchor\" href=\"#root\">#</a> /root</h2>\n<blockquote>\n<p>系统管理员目录</p>\n</blockquote>\n<h2 id=\"etc\"><a class=\"anchor\" href=\"#etc\">#</a> /etc</h2>\n<blockquote>\n<p>管理系统配置文件</p>\n</blockquote>\n<h2 id=\"usr\"><a class=\"anchor\" href=\"#usr\">#</a> /usr</h2>\n<blockquote>\n<p>类似于 windows 下 Programfiles 目录，</p>\n</blockquote>\n<h2 id=\"boot\"><a class=\"anchor\" href=\"#boot\">#</a> /boot</h2>\n<blockquote>\n<p>启动所使用的核心文件都会存放在这里。</p>\n</blockquote>\n<h2 id=\"proc\"><a class=\"anchor\" href=\"#proc\">#</a> /proc</h2>\n<blockquote>\n<p>内存映射</p>\n</blockquote>\n<h2 id=\"srv\"><a class=\"anchor\" href=\"#srv\">#</a> /srv</h2>\n<blockquote>\n<p>services 的缩写，用于存放服务启动所需要的数据</p>\n</blockquote>\n<h2 id=\"sys\"><a class=\"anchor\" href=\"#sys\">#</a> /sys</h2>\n<blockquote>\n<p>系统文件</p>\n</blockquote>\n<h2 id=\"tmp\"><a class=\"anchor\" href=\"#tmp\">#</a> /tmp</h2>\n<blockquote>\n<p>是 temporary (临时) 的缩写，存放临时 / 缓存文件，可当作回收站使用。</p>\n</blockquote>\n<h2 id=\"dev\"><a class=\"anchor\" href=\"#dev\">#</a> /dev</h2>\n<blockquote>\n<p>device 的缩写，类似于 windows 的设备管理器。</p>\n</blockquote>\n<h2 id=\"mnt\"><a class=\"anchor\" href=\"#mnt\">#</a> /mnt</h2>\n<blockquote>\n<p>linux 用于挂载可移动设备（临时）的目录。</p>\n</blockquote>\n<h2 id=\"opt\"><a class=\"anchor\" href=\"#opt\">#</a> /opt</h2>\n<blockquote>\n<p>主机额外安装的软件存放的目录</p>\n</blockquote>\n<h2 id=\"var\"><a class=\"anchor\" href=\"#var\">#</a> /var</h2>\n<blockquote>\n<p>存放经常被修改的目录或文件，比如日志（*.log）。</p>\n</blockquote>\n<h2 id=\"lib\"><a class=\"anchor\" href=\"#lib\">#</a> /lib</h2>\n<blockquote>\n<p>存放系统基本的动态链接库。</p>\n</blockquote>\n<h1 id=\"权限数字意思详解\"><a class=\"anchor\" href=\"#权限数字意思详解\">#</a> 权限数字意思详解</h1>\n<p>我们首先打开控制台在任意位置输入 ll, 就能看到当前文件夹下所有类型的信息。我们只取其中的前十位来进行结束.</p>\n<blockquote>\n<p>dr-xr-xr-x.</p>\n</blockquote>\n<h2 id=\"第一位\"><a class=\"anchor\" href=\"#第一位\">#</a> 第一位</h2>\n<blockquote>\n<p>第一位表示类型</p>\n</blockquote>\n<ul>\n<li>d directory 表示目录</li>\n<li>b block 块文件</li>\n<li>c char 字符文件</li>\n<li>- file 普通文件</li>\n<li>l link 链接</li>\n<li>etc.</li>\n</ul>\n<h2 id=\"后面九位\"><a class=\"anchor\" href=\"#后面九位\">#</a> 后面九位</h2>\n<blockquote>\n<p>后面九位表示了文件的类型，对应的位置如果是 <code>-</code>  则表示没有对应的权限.</p>\n</blockquote>\n<table>\n    <th>\n        <td colspan=\"3\">前三位</td>\n        <td colspan=\"3\">中间三位</td>\n        <td colspan=\"3\">后三位</td>\n    </th>\n    <tr align=\"center\">\n        <td colspan=\"3\">创建者</td>\n        <td colspan=\"3\">同组用户</td>\n        <td colspan=\"3\">其他用户</td>\n    </tr>\n    <tr align=\"center\">\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n    </tr>\n    <tr align=\"center\">\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n    </tr>\n</table>\n<p>下面来看一个实例:</p>\n<p>如果一个文件的权限为 755, 则代表什么意思？</p>\n<p>我们只需要把 755 按位转换为二进制，对应位为 0 则表示没有这个权限.</p>\n<table>\n<thead>\n<tr>\n<th>7</th>\n<th>5</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>111</td>\n<td>101</td>\n<td>101</td>\n</tr>\n</tbody>\n</table>\n<p>用人的语言表述:</p>\n<blockquote>\n<p>对于创建者：可以读取，可以更改，可以执行.<br />\n 对于同组人员：可以读取，不能更改，可以执行.<br />\n 对于其他成员：可以读取，不能更改，可以执行.</p>\n</blockquote>\n",
            "tags": [
                "linux",
                "目录",
                "指令",
                "权限"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/120738/",
            "url": "http://maxshiroi.top/ug/120738/",
            "title": "shortcutforshoka",
            "date_published": "2022-09-21T04:07:38.000Z",
            "content_html": "<figure class=\"highlight java\"><figcaption><span>java</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"type\">Scanner</span> <span class=\"variable\">in</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span> (System.in);</span><br><span class=\"line\"><span class=\"comment\">// 输入 Scan 之后，按下键盘 Alt + “/” 键，Eclipse 下自动补全。</span></span><br><span class=\"line\">System.out.println (in.nextLine ());</span><br><span class=\"line\">System.out.println (<span class=\"string\">&quot;Hello&quot;</span> + <span class=\"string\">&quot;world.&quot;</span>);</span><br></pre></td></tr></table></figure>\n<div class=\"media-container\"><div class=\"player\" data-type=\"audio\" data-src='[{\"title\":\"列表 1\",\"list\":[\"https://music.163.com/#/playlist?id=2943811283\",\"https://music.163.com/#/playlist?id=2297706586\"]},{\"title\":\"列表 2\",\"list\":[\"https://music.163.com/#/playlist?id=2031842656\"]}]'></div></div>\n<p>原本用于日语汉字假名注音，但别的注音也可以。<br />\n为了兼容性，采用 markdown-it-ruby 的基本格式： <ruby>文字<rp> (</rp><rt>注音</rt><rp>)</rp></ruby> ，并且为了兼容表格，将分隔符由 | 换成了 ^ 。<br />\n注音分隔基于 furigana-markdown-it 显示说明看这里</p>\n<p><ruby>取<rp> (</rp><rt>と</rt><rp>)</rp> り<rt></rt>返<rp> (</rp><rt>かえ</rt><rp>)</rp> す<rt></rt></ruby>\t取とり返かえす<br />\n<ruby>可愛<rp> (</rp><rt>かわい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可愛かわいい犬いぬ<br />\n<ruby>可<rp> (</rp><rt>か</rt><rp>)</rp> 愛<rp> (</rp><rt>わい</rt><rp>)</rp> い<rt></rt>犬<rp> (</rp><rt>いぬ</rt><rp>)</rp></ruby>\t可か愛わいい犬いぬ<br />\n<ruby>アクセラレータ<rp> (</rp><rt>accelerator</rt><rp>)</rp></ruby>\tアクセラレータ accelerator<br />\n<ruby>accelerator<rp>(</rp><rt>アクセラレータ</rt><rp>)</rp></ruby>\taccelerator アクセラレータ<br />\n<ruby>食<rp> (</rp><rt>た</rt><rp>)</rp> べる<rt></rt></ruby>\t食たべる<br />\n<ruby>食べる<rp> (</rp><rt>たべる</rt><rp>)</rp></ruby>\t食べるたべる<br />\n<ruby>あ<rt>●</rt>い<rt>●</rt>う<rt>●</rt>え<rt>●</rt>お<rt>●</rt></ruby>\tあ●い●う●え●お●<br />\n<ruby>あ<rt>❤</rt>い<rt>❤</rt>う<rt>❤</rt>え<rt>❤</rt>お<rt>❤</rt></ruby>\tあ❤い❤う❤え❤お❤<br />\n<ruby>常用账号<rp> (</rp><rt>contact</rt><rp>)</rp></ruby>\t常用账号 contact</p>\n",
            "tags": [
                "短链",
                "测试"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/164658/",
            "url": "http://maxshiroi.top/ug/164658/",
            "title": "解决windows资源管理器无法自动刷新等问题",
            "date_published": "2022-09-20T08:46:58.000Z",
            "content_html": "<blockquote>\n<p>有时候在使用资源管理器新建文件的时候发现无法自动刷新，每次都需要手动刷新才会出现。这同样也导致了 chrome 在保存文件时会卡住一段时间。</p>\n</blockquote>\n<h1 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h1>\n<p>其实解决方法很简单，关掉你映射的所有网络驱动器即可恢复。据说这是 windows 的一个 bug，取消掉网络驱动器映射便解决了这个问题。</p>\n",
            "tags": [
                "win",
                "explorer.exe",
                "autorefresh"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222828/",
            "url": "http://maxshiroi.top/ug/222828/",
            "title": "vmware安装好后配置centos网络",
            "date_published": "2022-09-19T14:28:28.000Z",
            "content_html": "<h1 id=\"更改-ifcfg-ens33-文件\"><a class=\"anchor\" href=\"#更改-ifcfg-ens33-文件\">#</a> 更改 ifcfg-ens33 文件</h1>\n<blockquote>\n<p>编辑配置文件</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>需要添加 / 修改的地方</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=yes</span><br><span class=\"line\">IPADDR=192.168.xx.xx</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br><span class=\"line\">GATEWAY=192.168.204.2</span><br><span class=\"line\">DNS1=8.8.8.8</span><br><span class=\"line\">DNS2=114.114.114.114</span><br></pre></td></tr></table></figure>\n<h1 id=\"编辑-resolvconf-文件\"><a class=\"anchor\" href=\"#编辑-resolvconf-文件\">#</a> 编辑 resolv.conf 文件</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/resolv.conf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>添加如下内容</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Generated by NetworkManager</span><br><span class=\"line\">search localdomain</span><br><span class=\"line\">nameserver 8.8.8.8</span><br></pre></td></tr></table></figure>\n<h1 id=\"重启网卡\"><a class=\"anchor\" href=\"#重启网卡\">#</a> 重启网卡</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "linux",
                "centos",
                "network",
                "vmware"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/002853/",
            "url": "http://maxshiroi.top/ug/002853/",
            "title": "在你的 linux nas 上安装一个种子下载器吧！",
            "date_published": "2022-08-28T16:28:53.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>Transmission 是一款流行的 BT 下载软件，比其他客户端使用更少的资源，守护程序非常适合服务器，并且可以通过桌面 GUI、Web 界面和终端程序进行远程控制，支持本地对等发现、完全加密、DHT、µTP、PEX 和 Magnet Link 等。</p>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<p>这有啥好说的，直接 apt 一把梭：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install transmission-daemon</span><br></pre></td></tr></table></figure>\n<p>不过在更改配置前，建议先关一下服务，以防万一：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl stop transmission-daemon</span><br></pre></td></tr></table></figure>\n<h1 id=\"配置\"><a class=\"anchor\" href=\"#配置\">#</a> 配置</h1>\n<ol>\n<li>transmission 的配置文件在  <code>/etc/transmission-daemon/settings.json</code></li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nano /etc/transmission-daemon/settings.json</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>主要需要看看下面这几项：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&quot;download-dir&quot;: &quot;/home/pi/complete&quot;, # 下载目录 </span><br><span class=\"line\">&quot;incomplete-dir&quot;: &quot;/home/pi/incomplete&quot;, # 下载未完成文件目录</span><br><span class=\"line\">&quot;rpc-authentication-required&quot;: false, # 懒得配置密码直接把验证关掉。</span><br><span class=\"line\">&quot;rpc-host-whitelist-enabled&quot;: false,</span><br><span class=\"line\">&quot;rpc-port&quot;: 9091, # 默认 Web 访问端口，这个可以根据需要修改一下。</span><br><span class=\"line\">&quot;rpc-whitelist-enabled&quot;: false, # 白名单开关</span><br><span class=\"line\">&quot;utp-enabled&quot;: true # 允许 Web 登录</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>修改完成后启动 daemon：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl start transmission-daemon</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>浏览器打开 127.0.0.1:9091 查看效果：<br />\n<img data-src=\"/img/transmission/20220920213841.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"安装第三方主题\"><a class=\"anchor\" href=\"#安装第三方主题\">#</a> 安装第三方主题</h1>\n<p>下载并执行 TWC 中文界面安装脚本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control-cn.sh</span><br><span class=\"line\">bash install-tr-control-cn.sh</span><br></pre></td></tr></table></figure>\n<p>按 数字 1 然后回车安装。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;&lt; 2022-08-29 00:27:53 &gt;&gt; 安装脚本执行完成。如遇到问题请查看：https://github.com/ronggang/transmission-web-control/wiki</span><br><span class=\"line\">&lt;&lt; 2022-08-29 00:27:53 &gt;&gt; == 结束 ==</span><br></pre></td></tr></table></figure>\n<p>弹出如上提示则安装成功，返回 web 界面刷新即可。<br />\n<img data-src=\"/img/transmission/20220920213753.png\" alt=\"\" /></p>\n",
            "tags": [
                "transmission",
                "torrent",
                "下载器",
                "nas"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/234236/",
            "url": "http://maxshiroi.top/ug/234236/",
            "title": "解决Windows直接访问WSL2路径并直接进行读写操作,权限不足的问题",
            "date_published": "2022-08-28T15:42:36.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>初次安装 WSL Ubuntu 时，一般都会设置默认登录用户，当你通过 windows 访问该文件夹时，如果访问的 Ubuntu 目录的权限用户时你的默认用户，你可以对其进行修改。但是如果你访问的时 root 权限的用户，则会出现如权限不足，permission deny 报错。</p>\n<h1 id=\"solution\"><a class=\"anchor\" href=\"#solution\">#</a> Solution</h1>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\wangj\\AppData\\Local\\Microsoft\\WindowsApps\\debian.exe config --default-user root</span><br></pre></td></tr></table></figure>\n<p>修改完成后，记得重启 wsl：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --shutdown</span><br></pre></td></tr></table></figure>\n<p>10s 后，在执行 wsl 命令，然后再次测试，看是否可行。</p>\n",
            "tags": [
                "wsl",
                "权限不足",
                "vscode"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222543/",
            "url": "http://maxshiroi.top/ug/222543/",
            "title": "部署完hexo后还应该准备哪些工作",
            "date_published": "2022-08-28T14:25:43.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>上一回我们讲到了如何部署 hexo 到 github 上，并简单的向 repo 里推送了你的博客。这一回我们简单的来完善你的博客。</p>\n<h1 id=\"0shoka主题配置\"><a class=\"anchor\" href=\"#0shoka主题配置\">#</a> 0.shoka 主题配置</h1>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaG9rYS5sb3N0eXUubWUvY29tcHV0ZXItc2NpZW5jZS9ub3RlL3RoZW1lLXNob2thLWRvYy9kaXNwbGF5Lw==\">Click Me</span></p>\n</blockquote>\n<h1 id=\"1备份hexo源文件到-backup-分支\"><a class=\"anchor\" href=\"#1备份hexo源文件到-backup-分支\">#</a> 1. 备份 Hexo 源文件到 Backup 分支</h1>\n<p>由于种种原因我们总会更改自己的工作环境或者一顿操作猛如虎，将自己博客的源文件一通收拾，然后就没有然后了。<br />\n所以建议大家创建好博客记得把源文件也一同备份到 Github 上以防万一。</p>\n<h2 id=\"创建backup分支\"><a class=\"anchor\" href=\"#创建backup分支\">#</a> 创建 backup 分支</h2>\n<ol>\n<li>打开你 GitHub repo 的页面，点击左上角的分支选项。</li>\n<li>点击 View all branches，然后点击右上角的 New branch。</li>\n<li>Branch name：backup，Branch source：master</li>\n<li>create branch。</li>\n</ol>\n<h2 id=\"将backup分支切换为默认分支\"><a class=\"anchor\" href=\"#将backup分支切换为默认分支\">#</a> 将 backup 分支切换为默认分支</h2>\n<blockquote>\n<p>我也不知道为什么要这么做，但是不这么做最后一步就没法 push 了 😦</p>\n</blockquote>\n<h2 id=\"将repo-clone到本地\"><a class=\"anchor\" href=\"#将repo-clone到本地\">#</a> 将 repo clone 到本地</h2>\n<ol>\n<li>直接在博客根目录下执行这个命令：</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> <span class=\"string\">&#x27;你的repo&#x27;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>将克隆过来 repo 里的 <code>.git</code>  文件夹拷贝到博客根目录。</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> -r ./<span class=\"string\">&#x27;你的repo&#x27;</span> ./</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>依次执行以下指令</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 保存所有文件到暂存区</span><br><span class=\"line\">git add .</span><br><span class=\"line\">// 提交变更</span><br><span class=\"line\">git commit -m <span class=\"string\">&#x27;Backup&#x27;</span></span><br><span class=\"line\">// 推送到github，分支为Backup</span><br><span class=\"line\">git push origin backup</span><br></pre></td></tr></table></figure>\n<h2 id=\"报错\"><a class=\"anchor\" href=\"#报错\">#</a> 报错</h2>\n<p>可能会提示如下错误</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: unable to access <span class=\"string\">&#x27;https://github.com/xxx/xxx.github.io.git/&#x27;</span>: GnuTLS recv error (-110): The TLS connection was non-properly terminated.</span><br></pre></td></tr></table></figure>\n<p>执行下面的指令即可正常推送</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> http.proxy</span><br><span class=\"line\">git config --global --<span class=\"built_in\">unset</span> git.proxy</span><br></pre></td></tr></table></figure>\n<h2 id=\"还原\"><a class=\"anchor\" href=\"#还原\">#</a> 还原</h2>\n<ol>\n<li>克隆 backup 分支到本地</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> -b backup https://github.com/maxshiro/maxshiro.github.io.git</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装依赖</li>\n</ol>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install</span><br></pre></td></tr></table></figure>\n<h1 id=\"2-博客加密\"><a class=\"anchor\" href=\"#2-博客加密\">#</a> 2. 博客加密</h1>\n<ul>\n<li>有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。</li>\n<li>这在 wordpress，emlog 或其他博客系统中都很容易实现，然而 hexo 除外。😦</li>\n<li>为了解决这个问题，我们需要安装 “hexo-blog-encrypt” 扩展。</li>\n</ul>\n<h2 id=\"安装指令\"><a class=\"anchor\" href=\"#安装指令\">#</a> 安装指令</h2>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-blog-encrypt</span><br></pre></td></tr></table></figure>\n<h2 id=\"快速使用\"><a class=\"anchor\" href=\"#快速使用\">#</a> 快速使用</h2>\n<p>将 password 标签添加到您的 Front-matter 里，就像这样：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: xxx</span><br><span class=\"line\"><span class=\"built_in\">date</span>: 2022-08-26 17:34:59</span><br><span class=\"line\">password: 233</span><br><span class=\"line\">tags: xxx</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n<h2 id=\"特性\"><a class=\"anchor\" href=\"#特性\">#</a> 特性</h2>\n<ul>\n<li>一旦你输入了正确的密码，它就会被存储在本地浏览器的 localStorage 中。按个按钮，密码将会被清空。若博客中有脚本，它将被正确地执行。</li>\n<li>支持按标签加密。</li>\n<li>所有的核心功能都是由原生的 API 所提供的。在 Node.js 中，我们使用 Crypto。在浏览器中，我们使用 Web Crypto API。</li>\n<li>PBKDF2，SHA256 被用作复制密钥，AES256-CBC 被用作加解密，我们还使用 HMAC 来验证密文的来源，并确保其纠正。</li>\n<li>广泛地使用 Promise 来进行异步操作，从而确保线程不被杜塞。</li>\n<li>过时的浏览器将无法正常显示，因此，请升级您的浏览器。</li>\n</ul>\n",
            "tags": [
                "plugin",
                "hexo",
                "backup"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/212907/",
            "url": "http://maxshiroi.top/ug/212907/",
            "title": "Centos安装MatrixSynapseChat简易教程",
            "date_published": "2022-08-28T13:29:07.000Z",
            "content_html": "<h2 id=\"先安装前置\"><a class=\"anchor\" href=\"#先安装前置\">#</a> 先安装前置</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install libtiff-devel libjpeg-devel libzip-devel freetype-devel libwebp-devel libxml2-devel libxslt-devel libpq-devel python3-virtualenv libffi-devel openssl-devel python3-devel</span><br><span class=\"line\">yum groupinstall &quot;Development Tools&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用root账户接入您的centos找到合适的位置开始操作\"><a class=\"anchor\" href=\"#使用root账户接入您的centos找到合适的位置开始操作\">#</a> 使用 root 账户接入您的 centos，找到合适的位置开始操作</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir syn</span><br></pre></td></tr></table></figure>\n<h3 id=\"依次执行以下指令\"><a class=\"anchor\" href=\"#依次执行以下指令\">#</a> 依次执行以下指令</h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">virtualenv -p python3 ./env &amp;&amp; source ./env/bin/activate</span><br><span class=\"line\">python3 -m pip install --upgrade pip &amp;&amp; python3 -m pip install --upgrade setuptools &amp;&amp; python3 -m pip install psycopg2-binary</span><br><span class=\"line\">python3 -m pip install matrix-synapse                         //安装synapse</span><br><span class=\"line\">python3 -m pip install -U matrix-synapse                    //更新synapse</span><br></pre></td></tr></table></figure>\n<h2 id=\"将下列指令拷贝到控制台执行自动生成homeserveryaml\"><a class=\"anchor\" href=\"#将下列指令拷贝到控制台执行自动生成homeserveryaml\">#</a> 将下列指令拷贝到控制台执行，自动生成 homeserver.yaml</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m synapse.app.homeserver \\</span><br><span class=\"line\">    --server-name im.axro.top \\</span><br><span class=\"line\">    --config-path homeserver.yaml \\</span><br><span class=\"line\">    --generate-config \\</span><br><span class=\"line\">    --report-stats=no</span><br></pre></td></tr></table></figure>\n<h2 id=\"编辑生成homeserveryaml\"><a class=\"anchor\" href=\"#编辑生成homeserveryaml\">#</a> 编辑生成 <code>homeserver.yaml</code></h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">enable_registration: true</span><br><span class=\"line\">suppress_key_server_warning: true</span><br><span class=\"line\">bind_addresses: [&#x27;::1&#x27;, &#x27;0.0.0.0&#x27;]</span><br></pre></td></tr></table></figure>\n<h2 id=\"启动关闭服务器\"><a class=\"anchor\" href=\"#启动关闭服务器\">#</a> 启动 / 关闭服务器</h2>\n<h4 id=\"注意要先进入虚拟python环境\"><a class=\"anchor\" href=\"#注意要先进入虚拟python环境\">#</a> 注意要先进入虚拟 python 环境</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ./env/bin/activate</span><br><span class=\"line\"></span><br><span class=\"line\">synctl start</span><br><span class=\"line\">synctl stop</span><br></pre></td></tr></table></figure>\n<h2 id=\"退出虚拟环境\"><a class=\"anchor\" href=\"#退出虚拟环境\">#</a> 退出虚拟环境</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deactivate</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置反代\"><a class=\"anchor\" href=\"#配置反代\">#</a> 配置反代</h2>\n<p>进入宝塔面板新建静态网站，配置 ssl，配置反向代理地址为 <code>https://localhost:8008</code> , 保存即可.</p>\n",
            "tags": [
                "nextcloud",
                "聊天室",
                "python"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211502/",
            "url": "http://maxshiroi.top/ug/211502/",
            "title": "解决linux下挂载其他linux硬盘的问题并创建smb局域网共享",
            "date_published": "2022-08-28T13:15:02.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>之前用来当作小型服务器的笔记本终于被我给淘汰了。已经关机了好久。最近买了块 <code>SATA</code>  硬盘盒，想要将这台笔记本内的数据备份出来并把硬盘用作其他用途。一切连接好后发现无法挂载，遂百度了一会查出了如下方法...</p>\n</blockquote>\n<h1 id=\"故障复现\"><a class=\"anchor\" href=\"#故障复现\">#</a> 故障复现</h1>\n<ol>\n<li>连接 linux 系统，提示插入硬盘. <code>/dev</code>  分区下出现硬盘编号</li>\n<li>执行如下指令</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /</span><br><span class=\"line\">mkdir backup</span><br><span class=\"line\">mount /dev/sdc/ /backup/</span><br></pre></td></tr></table></figure>\n<p>报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount: unknown filesystem type &#x27;LVM2_member&#x27;</span><br></pre></td></tr></table></figure>\n<h1 id=\"解决方法-debian系\"><a class=\"anchor\" href=\"#解决方法-debian系\">#</a> 解决方法 //Debian 系</h1>\n<ol>\n<li>执行如下指令安装 lvm2 并扫描查看以挂载的磁盘</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lvm2</span><br><span class=\"line\">sudo vgscan</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>发现如下字样后找到对应的 <code>xxx</code></li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Found volume group &quot;xxx&quot; using metadata type lvm2</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>设为活动状态并查看可挂载的分区</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vgchange -ay xxx</span><br><span class=\"line\">sudo lvs</span><br><span class=\"line\">LV     VG   Attr   LSize  Origin Snap%  Move Log Copy%  Convert</span><br><span class=\"line\">data        xxx             -wi-a-              34.19G      </span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>挂载对应分区</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/xxx/data/ /backup/</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>至此已经解决了问题，如果你还想把这块硬盘里的数据共享出去，比如共享给局域网内的 windows 主机，那就接着看..</p>\n</blockquote>\n<h1 id=\"设置smb\"><a class=\"anchor\" href=\"#设置smb\">#</a> 设置 SMB</h1>\n<ol>\n<li>先更新一下</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>安装 Samba 服务</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install samba samba-common</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>配置共享目录</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新建目录</span><br><span class=\"line\">sudo mkdir /home/db</span><br><span class=\"line\">// 更改目录权限</span><br><span class=\"line\">sudo chmod 777 /home/db/ -R</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>添加账户</li>\n</ol>\n<blockquote>\n<p>要注意添加的账户需要是系统内已存在的账户</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 后面的pi为系统的用户名</span><br><span class=\"line\">sudo smbpasswd -a pi</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>输入两次密码后创建成功</p>\n</blockquote>\n<ul>\n<li>创建系统账户</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// -m参数为添加/home/username目录,username更改为你要创建的用户名.</span><br><span class=\"line\">sudo useradd -m username</span><br><span class=\"line\">// 更改账户密码</span><br><span class=\"line\">sudo passwd username</span><br><span class=\"line\">// 删除用户</span><br><span class=\"line\">sudo userdel -r username</span><br><span class=\"line\">// 更改登录zhanghu</span><br><span class=\"line\">su -username</span><br></pre></td></tr></table></figure>\n<ol start=\"5\">\n<li>配置 samba</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 建议先备份一下</span><br><span class=\"line\">sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak</span><br><span class=\"line\">// 编辑</span><br><span class=\"line\">sudo vim /etc/samba/smb.conf</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>在文件最后添加</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[database] </span><br><span class=\"line\">    comment = 23333333  # 描述</span><br><span class=\"line\">\tpath = /home/db/    # 目录</span><br><span class=\"line\">\tpublic = yes        # 是否允许guest用户访问</span><br><span class=\"line\">\twritable = yes      # 是否允许读写</span><br><span class=\"line\">\tworkgroup = WORKGROUP  # 工作组</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>重启 samba 服务</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service smbd restart</span><br></pre></td></tr></table></figure>\n<p>然后在 windows 里面映射就行了</p>\n<h1 id=\"借鉴摘抄\"><a class=\"anchor\" href=\"#借鉴摘抄\">#</a> 借鉴 (摘抄)</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L212cF9EYXduL2FydGljbGUvZGV0YWlscy8xMDU4NDc0ODU=\">ubuntu 20.04 安装配置 Samba 服务，Windows 和 linux 协同工作</span></p>\n",
            "tags": [
                "linux",
                "运维",
                "smb"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211224/",
            "url": "http://maxshiroi.top/ug/211224/",
            "title": "Switch模拟器的安装使用以及游戏文件获取和处理。",
            "date_published": "2022-08-28T13:12:24.000Z",
            "content_html": "<p><img data-src=\"/img/ns/1.gif\" alt=\"\" /></p>\n<h1 id=\"引子\"><a class=\"anchor\" href=\"#引子\">#</a> 引子</h1>\n<blockquote>\n<p>本篇文章起源于之前我想玩 mega39 而写，现在我对这些内容有了新的理解，再次进行更改记录。</p>\n</blockquote>\n<p><strong>Ryujinx 和 yuzu 模拟器任选一个即可。如果游戏运行有问题再尝试另外一个</strong></p>\n<h1 id=\"配置要求\"><a class=\"anchor\" href=\"#配置要求\">#</a> 配置要求</h1>\n<blockquote>\n<p><code>ryujinx</code>  和  <code>yuzu</code>  都适用。</p>\n</blockquote>\n<h2 id=\"软体\"><a class=\"anchor\" href=\"#软体\">#</a> 软体:</h2>\n<blockquote>\n<p>建议运行 Windows 10 1803 或较新版本以获得最佳性能。这里仅列出 Win10 64 位 要求.</p>\n<p>如果你要在 linux 下使用则建议您找找其他的教程，我目前还没有使用 linux 的机器。</p>\n</blockquote>\n<hr />\n<blockquote>\n<p>硬体要求适用于所有 Switch 游戏.</p>\n</blockquote>\n<h2 id=\"cpu\"><a class=\"anchor\" href=\"#cpu\">#</a> CPU:</h2>\n<blockquote>\n<p>任何支持 FMA 指令集的 x86_64 CPU。 建议使用 6 个或更多线程。</p>\n</blockquote>\n<ul>\n<li>最小: Intel Core i5-4430 / AMD Ryzen 3 1200</li>\n<li>推荐: Intel Core i5-10400 / AMD Ryzen 5 3600</li>\n</ul>\n<h2 id=\"专用显示卡\"><a class=\"anchor\" href=\"#专用显示卡\">#</a> 专用显示卡:</h2>\n<p><strong>必须使用 OpenGL 4.6 或 Vulkan 1.1 兼容硬件和驱动程序。 推荐使用支持半浮点以及 4GB 显示内存。</strong></p>\n<blockquote>\n<p>大多数游戏都可以在 Fermi 系列（400 系列）或更高版本的 Nvidia GPU 上运行，但强烈建议至少使用 Pascal（1000 系列）。</p>\n</blockquote>\n<ul>\n<li>最小: NVIDIA GeForce GT 1030 2GB / AMD Radeon RX 550 2GB</li>\n<li>推荐: NVIDIA GeForce GTX 1650 4GB / AMD Radeon RX Vega 56 8GB</li>\n</ul>\n<h2 id=\"集成显示卡\"><a class=\"anchor\" href=\"#集成显示卡\">#</a> 集成显示卡:</h2>\n<blockquote>\n<p>集成显卡的性能表现很差。 独立显卡能够在所有场景中产生更好的效果。 这里列出 iGPU 支持。</p>\n</blockquote>\n<ul>\n<li>最小: Intel HD Graphics 520 / AMD Radeon Vega 3</li>\n<li>推荐: Intel UHD Graphics 750 / AMD Radeon Vega 7</li>\n</ul>\n<h2 id=\"内存\"><a class=\"anchor\" href=\"#内存\">#</a> 内存:</h2>\n<blockquote>\n<p>因为集成 GPU 调用内存作为显存 (VRAM)，所以在此配置中的内存要求要高些。</p>\n</blockquote>\n<ul>\n<li>最小专用显卡内存: 8GB</li>\n<li>最小集成显卡内存: 12GB</li>\n<li>推荐: 16GB</li>\n</ul>\n<hr />\n<h1 id=\"安装前\"><a class=\"anchor\" href=\"#安装前\">#</a> 安装前</h1>\n<blockquote>\n<p>如果你已经有了 Switch 则可以提取自己的。我就不具体写教程了。可以看看 Ryujinx 官方提供的。</p>\n</blockquote>\n<ul>\n<li>\n<p>prod.key 导出:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1J5dWppbngvUnl1amlueC93aWtpL0tleXM=\">https://github.com/Ryujinx/Ryujinx/wiki/Keys</span></p>\n</li>\n<li>\n<p>固件导出:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1J5dWppbngvUnl1amlueC93aWtpL0Zpcm13YXJlLUR1bXBpbmctR3VpZGUtKGhibWVudS0mYW1wOy1Hb2xkbGVhZik=\">https://github.com/Ryujinx/Ryujinx/wiki/Firmware-Dumping-Guide-(hbmenu-&amp;-Goldleaf)</span></p>\n</li>\n</ul>\n<h1 id=\"下载安装-yuzu-软件\"><a class=\"anchor\" href=\"#下载安装-yuzu-软件\">#</a> 下载安装 yuzu 软件。</h1>\n<blockquote>\n<p>下列操作建议在科学上网环境下进行.</p>\n</blockquote>\n<ol>\n<li>去 <span class=\"exturl\" data-url=\"aHR0cHM6Ly95dXp1LWVtdS5vcmcv\">https://yuzu-emu.org/</span> 下载最新的 yuzu 模拟器。并运行软体.\n<blockquote>\n<p>我在下方的链接里也放了捐赠版也就是 EA，但是版本不会经常更新。如果安装出现问题可以试试。<br />\nyuzu EA 版本还支持多人联机的功能，但是需要你使用梯子才可以比较好的使用。</p>\n</blockquote>\n</li>\n</ol>\n<ul>\n<li>yuzu Early Access 这个版本是只有捐赠用户才可以使用，如果条件支持可以去支持一波.</li>\n<li>普通版本已经足够使用.</li>\n</ul>\n<ol start=\"2\">\n<li>由于安装的时候会连接 Github 服务器下载文件，因此强烈建议使用全局科学上网.</li>\n<li>安装完成后直接启动，提示缺少 key 文件，选 OK :</li>\n</ol>\n<blockquote>\n<p><img data-src=\"/img/ns/20220920215251.png\" alt=\"\" /></p>\n</blockquote>\n<ol>\n<li>\n<p>然后会跳出提示框问是否帮助改进 yuzu , 我们点 no.</p>\n</li>\n<li>\n<p>此时已经完成安装了模拟器本体，不过想要正常运行游戏还需要做以下操作</p>\n</li>\n<li>\n<p>执行工具栏中的  <code>文件</code>  -&gt;  <code>Open yuzu Folder</code>  打开 yuzu 软件自动创建的目录，然后在下方的链接里找到 key 文件夹，下载  <code>prod.keys</code>  文件扔进 keys 文件夹内.</p>\n</li>\n<li>\n<p>然后再次打开 yuzu 就不会再弹出刚才的对话框了.</p>\n</li>\n</ol>\n<h1 id=\"下载安装-ryujinx-软件\"><a class=\"anchor\" href=\"#下载安装-ryujinx-软件\">#</a> 下载安装 Ryujinx 软件</h1>\n<blockquote>\n<p>同样下列操作建议在科学上网环境下进行.</p>\n</blockquote>\n<ol>\n<li>打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9yeXVqaW54Lm9yZy8=\">https://ryujinx.org/</span> ，选择上方 Download 下载最新编译版本解压。并运行软体.\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1J5dWppbngvUnl1amlueC9hY3Rpb25z\">Action</span> 如果你有能力可以直接到 Ryujin 模拟器 github 获取最新测试版的编译版本。</p>\n</blockquote>\n</li>\n<li>打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kYXJ0aHN0ZXJuaWUubmV0L3N3aXRjaC1maXJtd2FyZXMv\">https://darthsternie.net/switch-firmwares/</span> ，下载最新的固件到本地备用。</li>\n<li>在模拟器最上方依次点击 <code>File</code>  →  <code>Open Ryujinx Folder</code> 。</li>\n<li>进入 system 文件夹，在下方的链接里找到 key 文件夹，下载  <code>prod.keys</code>  文件扔进 keys 文件夹内.</li>\n<li>在模拟器最上方依次点击  <code>Tools</code>  →  <code>Install Firmware</code>  →  <code>Install a firmware from XCI or ZIP</code> , 选择刚才下载的固件文件点击  <code>open</code> 。\n<ol>\n<li>若出现报错，如下图所示，是因为  <code>prod.keys</code>  文件与  <code>Firmware</code>  不匹配，prod.keys 文件要与 Firmware 匹配才可以安装成功，因此你若想安装新的 firmware，则需要你自己去找对应的 prod.keys\n<blockquote>\n<p><img data-src=\"/img/ns/20221107165255.png\" alt=\"\" /></p>\n</blockquote>\n</li>\n</ol>\n</li>\n<li>添加游戏目录，依次点击  <code>Options</code>  →  <code>Settings</code>  ，打开设置，在  <code>General</code>  选项卡，点击  <code>Add</code></li>\n<li>在弹出的窗口中选择你的游戏目录，然后点击右下角的  <code>Add</code> ，然后点击 <code>Save</code> 。</li>\n</ol>\n<hr />\n<h1 id=\"模拟器设置yuzu和ryujinx部分内容通用有区别我会标注出来\"><a class=\"anchor\" href=\"#模拟器设置yuzu和ryujinx部分内容通用有区别我会标注出来\">#</a> 模拟器设置（yuzu 和 ryujinx 部分内容通用，有区别我会标注出来）</h1>\n<p>执行  <code>模拟(E)</code>  -&gt;  <code>Configure...</code>  打开 yuzu 设置.</p>\n<h2 id=\"通用选单\"><a class=\"anchor\" href=\"#通用选单\">#</a> 通用选单</h2>\n<ul>\n<li>Interface 下第一项（interface language）可以更改显示语言，建议先把这个改为中文。</li>\n<li>勾选  <code>多核 CPU 仿真</code>  可在一定程度上改进性能.</li>\n<li><code>运行速度限制</code>  更改到 100% 可解决某些游戏没有帧数限制导致游戏速度异常。</li>\n<li>网络选单下可以填写你注册 yuzu 网站后的令牌以此来进行联机。</li>\n</ul>\n<h2 id=\"系统选单\"><a class=\"anchor\" href=\"#系统选单\">#</a> 系统选单</h2>\n<ul>\n<li>在 系统 选单，系统 选项卡，系统设置 框架内根据需要设置  <code>语言</code> ， <code>地区</code>  和  <code>时区</code> ，这里推荐  <code>中文</code> ， <code>中国</code> ， <code>中文</code>  不然默认语言看不懂 (</li>\n<li>配置选项卡可以更改个人信息但是没什么用。</li>\n<li>网络选项卡若要使用联机服务则需要选择一种连接方式，通常是以太网或者 WLAN。这取决于你当前使用什么方式上网。</li>\n</ul>\n<h2 id=\"图形选单\"><a class=\"anchor\" href=\"#图形选单\">#</a> 图形选单</h2>\n<ul>\n<li><code>API</code>  任意选择，N 卡选 Vulkan 有时候也更好。</li>\n<li>如果你的设备是笔记本，那你需要更改  <code>设备</code>  为自己的独立显卡。</li>\n</ul>\n<h2 id=\"控制选单\"><a class=\"anchor\" href=\"#控制选单\">#</a> 控制选单</h2>\n<ul>\n<li><code>输入设备</code>  内可以选择自己的手柄 / 控制器。唯一需要注意的是 switch 按键的 ab/xy 按键是反过来的，建议游玩的时候别看手柄。</li>\n<li>最后点击  <code>OK</code>  即可完成配置...</li>\n</ul>\n<h1 id=\"下载游戏\"><a class=\"anchor\" href=\"#下载游戏\">#</a> 下载游戏</h1>\n<blockquote>\n<p>我发现<span class=\"exturl\" data-url=\"aHR0cHM6Ly94eHh4eDUyMC5jb20v\"> Switch520</span> 这里的游戏下载没那么多门槛要会员什么什么的，不过都是百度网盘，建议整一个百度网盘会员.(现在有插件可以实现免会员高速下载，有空我再写写：P)</p>\n</blockquote>\n<p>文中提到的文件可以到这个链接：<strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tYXhzaGlyby1teS5zaGFyZXBvaW50LmNvbS86ZjovZy9wZXJzb25hbC9tYXhzaGlyb2lfbWF4c2hpcm9fb25taWNyb3NvZnRfY29tL0VsNFgwQ1Z6LVRCS3FPMGtfLV9CV1JjQnQ0dVQ3VGYtZ1ZKdHJLZFBoYnlQNUE/ZT1JVWxxZGY=\">Sharepoint</span></strong> 里面下载获取。</p>\n<p>下载 xxx.xci 文件，这就是游戏本体了。将这个游戏本体放到任意文件夹内 (不要有中文) . 双击 yuzu 模拟器中间，选择你放 xci 文件的那个文件夹打开，然后你就会发现游戏已经加载出来了。双击打开爽玩吧～</p>\n<h1 id=\"处理-switch-游戏文件\"><a class=\"anchor\" href=\"#处理-switch-游戏文件\">#</a> 处理 Switch 游戏文件</h1>\n<p>switch 可以下载到的文件有很多种，因此有些时候我们下载得到的文件并不是 xci 或者 nsp 这样的可执行文件。这种时候就需要自己转换游戏文件格式。</p>\n<h2 id=\"常见的几种格式\"><a class=\"anchor\" href=\"#常见的几种格式\">#</a> 常见的几种格式</h2>\n<ul>\n<li><code>xci</code> ：可以理解 XCI 文件直接从卡带提取的文件，而 XCI 整合版（整合了游戏升级补丁 + DLC 的版本是最方便的 推荐下载）</li>\n<li><code>xcz</code> : 是 xci 压缩后的文件，需要转换为 xci 才可以正常使用。</li>\n<li><code>nsp</code> : nsp 相当于正版系统数字游戏，nsp 没有整合版，当您看到文件名称有  <code>000</code>  或者  <code>v0</code>  说明是本体。而文件名中带有  <code>Updata</code>  的则为升级补丁，带有  <code>DLC</code>  字样则为扩展游戏内容的额外内容。</li>\n<li><code>nsz</code> : 有些 DLC 或者升级补丁会打包为 nsz 文件，打包的时候可以忽略，如果是游戏文件则您需要转换为 nsp 文件才可以运行。</li>\n</ul>\n<h2 id=\"四种格式之间转换\"><a class=\"anchor\" href=\"#四种格式之间转换\">#</a> 四种格式之间转换。</h2>\n<blockquote>\n<p>使用 NSCB 软件进行打包等操作，我获取到的适配 15.0.0 版本的。这软件有时效性，因此如果不能正常使用则需要更新。<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d2IubGFuem91bS5jb20vaVZsOWYwZHc2c3Zn\">NSCB</span></p>\n</blockquote>\n<h1 id=\"emusak-ui-软件\"><a class=\"anchor\" href=\"#emusak-ui-软件\">#</a> EmuSAK UI 软件</h1>\n<blockquote>\n<p>使用此软件可以更方便的管理你电脑上现有的模拟器以及游戏，还可以获取最新的 prod.key 等文件。<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NhcGl0YWluZUpTcGFycm93L2VtdXNhay11aQ==\">https://github.com/CapitaineJSparrow/emusak-ui</span></p>\n</blockquote>\n<p>EmuSAK UI 功能一览：</p>\n<ul>\n<li>添加并管理电脑上的多个 switch 模拟器 (单机或者联机版 ryujinx)</li>\n<li>找到并列出电脑中的 switch 游戏</li>\n<li>展示本地着色器缓存 &amp; emusak 在线着色器缓存 (如果本地缓存较少可以下载在线缓存)</li>\n<li>更新固件</li>\n<li>更新 prod keys 密钥</li>\n<li>给下载游戏存档</li>\n<li>下载着色器缓存</li>\n<li>下载 mod 模组</li>\n<li>一键分享电脑中的着色器缓存 (shader cache)</li>\n</ul>\n",
            "tags": [
                "switch",
                "animal crossing",
                "Project Diva",
                "Miku",
                "Mega39",
                "emulater",
                "yuzu",
                "ryujinx"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/210724/",
            "url": "http://maxshiroi.top/ug/210724/",
            "title": "【虚拟Vocal】 Synthesize V 初代整合",
            "date_published": "2022-08-28T13:07:24.000Z",
            "content_html": "<h1 id=\"软件介绍\"><a class=\"anchor\" href=\"#软件介绍\">#</a> 软件介绍</h1>\n<p>Synthesizer V 是 Dreamtonics 开发的系列歌声合成软件，它结合了强大的歌声合成引擎和直观灵活的用户界面，只需绘制旋律并注入歌词，即可轻松创作原创歌曲。</p>\n<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>当你想要摆脱 Vocaloid 软件的支配，想要试试其他同类型的软件。您肯定会搜到这个软件。但是很不幸，当您点开官网查看售价，显然单个声库加 pro 版软件 899 的价格让您打了退堂鼓。<br />\n  您只好把思路转向搜索 crack 版本软件。又很不幸，这个软件 crack 版的本体和声库都很难寻找。<br />\n  在这里恭喜您找到了这篇文章。可万幸中的不幸就是，我也没有这个软件的 V2 破解版。但是我找到了 V1 的破解版，在此提供给大家。</p>\n<h1 id=\"关于软件\"><a class=\"anchor\" href=\"#关于软件\">#</a> 关于软件</h1>\n<p>软件的获取来源是 GitHUB 用户 <code>CJLU</code>  的 <code>Synthesizer-V-FE</code> , 版本为 1.8.0，所有功能正常使用。链接地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0NKTFUtc291cmNlL1N5bnRoZXNpemVyLVYtRkU=\">给特何不</span></p>\n<h1 id=\"关于声库\"><a class=\"anchor\" href=\"#关于声库\">#</a> 关于声库</h1>\n<p>目前手头上只有这几个声库：</p>\n<h2 id=\"eng-英语\"><a class=\"anchor\" href=\"#eng-英语\">#</a> Eng (英语)</h2>\n<ul>\n<li>爱莲娜芙缇 (女)</li>\n</ul>\n<h2 id=\"zh-中文\"><a class=\"anchor\" href=\"#zh-中文\">#</a> Zh (中文)</h2>\n<ul>\n<li>苍穹 (女)</li>\n<li>赤羽 (女)</li>\n<li>海伊 (女)</li>\n<li>诗岸 (女)</li>\n</ul>\n<h2 id=\"jp-日文\"><a class=\"anchor\" href=\"#jp-日文\">#</a> JP (日文)</h2>\n<ul>\n<li>闇音レンリ (女)</li>\n<li>玄武 (男)</li>\n</ul>\n<h1 id=\"下载地址-包含全部内容\"><a class=\"anchor\" href=\"#下载地址-包含全部内容\">#</a> 下载地址 （包含全部内容）</h1>\n<blockquote>\n<p>特殊原因暂不提供 😦<br />\n(其实是文件丢了</p>\n</blockquote>\n",
            "tags": [
                "Vocal",
                "AI",
                "歌声合成"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/205944/",
            "url": "http://maxshiroi.top/ug/205944/",
            "title": "Win11 安装 WSA 简易教程",
            "date_published": "2022-08-28T12:59:44.000Z",
            "content_html": "<blockquote>\n<p>微软终于在昨天上线了 WSA 的测试版本，此次只有美国地区上线了。因此如果你的 Win11 系统为美区的话，可以直接点击 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS9zdG9yZS9wcm9kdWN0SWQvOVAzMzk1Vlg5MU5S\">这个链接</span> 进行安装。如果非美区那就接着看步骤吧</p>\n</blockquote>\n<blockquote>\n<p>bug 还是有很多，首先是 WSA 无法调用 GPU, 这就导致很多 3d 游戏会很卡，实测明日方舟帧数不到 20 帧。然后安装 WSA 要启用 Hyper-V 即微软的虚拟机平台，打开这个会导致无法再安装和使用其他安卓模拟器。和市面上大多数安卓模拟器相比，微软这个 WSA 是 ARM 翻译运行的，安卓版本更高 (Android 11), 可以运行 ARM 程序。与系统集成度更好 (虽然目前还没有实现 WSL 那样的文件访问) 而模拟器大多都为 Android x86 项目改的，因此最高只能到 Android 9.</p>\n</blockquote>\n<blockquote>\n<p>如果你是想尝尝鲜，试试这个新功能那我还是推荐试一试。如果你主要想拿来打游戏，日常使用的话那还是更推荐安卓模拟器一些.</p>\n</blockquote>\n<h1 id=\"开启虚拟化\"><a class=\"anchor\" href=\"#开启虚拟化\">#</a> 开启虚拟化</h1>\n<blockquote>\n<p>PS: 如果之前你有禁用过 Hyper-V 的话记得使用管理员权限打开 Powershell 然后通过这个指令这个指令重新打开，不记得有没有那就跳过:</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bcdedit /set hypervisorlaunchtype auto</span><br></pre></td></tr></table></figure>\n<ol>\n<li>打开开始菜单，直接搜索控制面板，然后打开.</li>\n<li>找到  <code>程序和功能</code>  - <code>启用或关闭 Windows 功能</code>  并点击打开，会弹出一个窗口.</li>\n<li>在弹出窗口里面勾选  <code>Hyper-V</code> 、 <code>Windows 虚拟机监控程序平台</code> 、 <code>适用于 Linux 的 Windows 子系统</code> 、 <code>虚拟机平台</code>  这几项，然后点击确定。系统会自动查找更新并安装.</li>\n<li>等待重启过后就可以进行下一步了.</li>\n</ol>\n<h1 id=\"安装本体\"><a class=\"anchor\" href=\"#安装本体\">#</a> 安装本体</h1>\n<ol>\n<li>首先复制上面那个链接.</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdG9yZS5yZy1hZGd1YXJkLm5ldC8=\">安装包抓包</span>，点开这个网址，将第一步复制的链接粘贴到搜索框，右边选择  <code>slow</code>  然后点对勾.</li>\n<li>找到最下面名为  <code>MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle</code>  的一项，注意大小为  <code>1.21GB</code>  , 直接点击进行一个下载.</li>\n<li>找到你下载的文件，然后右键  <code>开始按钮</code>  选择  <code>Windows 终端 (管理员)</code></li>\n<li>然后会打开 Powershell 窗口，在里面输入指令</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">add-appxpackage &quot;你下载文件的完整路径&quot; </span><br><span class=\"line\"># example</span><br><span class=\"line\">add-appxpackage &quot;D:\\download\\MicrosoftCorporationII.WindowsSubsystemForAndroid_1.7.32815.0_neutral_~_8wekyb3d8bbwe.msixbundle&quot;</span><br></pre></td></tr></table></figure>\n<ol start=\"6\">\n<li>等他跑完以后就会在开始菜单里出现  <code>Windows Subsystem for Android™</code>  点击打开是下面这个界面就说明安装成功了.<br />\n<img data-src=\"/img/wsa/20220920220234.png\" alt=\"\" /></li>\n</ol>\n<h1 id=\"安装apk\"><a class=\"anchor\" href=\"#安装apk\">#</a> 安装 apk</h1>\n<ol>\n<li>点击文件后面的按钮会自动启动 WSA, 等打开后下面的 ip 地址会刷新。此时我们将开发人员模式打开.</li>\n<li>安装 ADB, 下载 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9uYXMuYXhyby50b3AvaW5kZXgucGhwL3MvZnJZeENIZzdGZmFiTkVZ\">这个文件</span> 然后解压到任意目录，然后打开解压出来的文件夹，名称为  <code>platform-tools</code> .</li>\n<li>按住 <code>Shift</code>  键右击文件夹的空白处，选择 <code>显示更多选项</code>  - <code>在此处打开 Powershell 窗口(s)</code> , 然后在打开的窗口内依次输入以下指令:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb connect 127.0.0.1:58526 #这个 127.0.0.1:58526 为你的开发人员选项那一栏里显示的地址.</span><br><span class=\"line\"># 第一次可能会失败, 再输入一次就可以了.</span><br><span class=\"line\">adb install -r xxx.apk</span><br><span class=\"line\"># 这个指令为安装 apk, 将 xxx 替换为你要安装的 apk 文件名称.</span><br></pre></td></tr></table></figure>\n<ol start=\"4\">\n<li>显示安装完成就会出现在你的开始菜单里，然后直接点击进行一个打开.</li>\n</ol>\n<h1 id=\"qa\"><a class=\"anchor\" href=\"#qa\">#</a> Q&amp;A</h1>\n",
            "tags": [
                "Android",
                "Hyper-V",
                "WSA"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/124600/",
            "url": "http://maxshiroi.top/ug/124600/",
            "title": "【VMware】解决新版本的VMware虚拟机无法正常在旧版本的Windows上安装VMware Tools",
            "date_published": "2022-08-25T04:46:00.000Z",
            "content_html": "<h1 id=\"引言\"><a class=\"anchor\" href=\"#引言\">#</a> 引言</h1>\n<p>因为学习需要，要求安装 <code>Windows server 2008 R2</code> 。安装时一切正常，但是到了安装 <code>VMware Tools</code>  时，弹出了下列提示：</p>\n<p><img data-src=\"/img/vmwarebug/20220920220101.png\" alt=\"\" /></p>\n<h1 id=\"其后\"><a class=\"anchor\" href=\"#其后\">#</a> 其后</h1>\n<p>我尝试百度搜索了解决办法，导致这种情况的大概解释为：</p>\n<blockquote>\n<p>原来，微软更新了驱动程序的签名算法，从 2019 年初开始，逐步弃用 SHA-1，改为 SHA-2。个人推测新版的 VMCI 驱动用的是 SHA-2 签名，而 <code>win7</code>  不支持 SHA-2 签名，所以出现了这个问题。</p>\n</blockquote>\n<p>那么怎么办呢？</p>\n<blockquote>\n<p>可以从 <code>Microsoft Update Catalog</code>  下载 <code>KB4474419</code>  和  <code>KB4490628</code>  这两个补丁，然后安装到 <code>win7</code>  虚拟机中。在没有成功安装 <code>VMware Tools</code>  的情况下，传文件不太方便，可以用虚拟机里浏览器访问下载页面，然后直接在虚拟机里下载安装。</p>\n</blockquote>\n<p>可是在 <code>winserver</code>  虚拟机里很难进行操作更别说老旧的 IE 操作更不方便，而且 <code>windows server</code>  的网络管理大家也都知道，会拦截所有地址。所以直到最后我也没法访问到微软的补丁界面。</p>\n<h1 id=\"解决方法\"><a class=\"anchor\" href=\"#解决方法\">#</a> 解决方法</h1>\n<p>我直接搜索了 <code>VMware Tools</code> ，到其官网上找到了旧版本的 <code>Tools</code>  镜像文件，随后直接对其进行一个挂载，这时直接弹出了自动运行窗口，进行一顿下一步下一步之后，成功将其安装到了虚拟机内。</p>\n<h1 id=\"旧版本下载地址\"><a class=\"anchor\" href=\"#旧版本下载地址\">#</a> 旧版本下载地址</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYWNrYWdlcy52bXdhcmUuY29tL3Rvb2xzL3JlbGVhc2VzLzEwLjMuNS93aW5kb3dzLw==\">点我去官网下载</span><br />\n打开以后下载大小为 <code>114M</code>  的映像文件，然后手动挂载到虚拟机上，便会自动运行。</p>\n<p>转载需注明出处！</p>\n",
            "tags": [
                "vmware",
                "bug"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro • All posts by \"guide\" tag",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/ug/133537/",
            "url": "http://maxshiroi.top/ug/133537/",
            "title": "使用 Hexo 程序部署博客到githubpage上",
            "date_published": "2022-04-17T05:35:37.000Z",
            "content_html": "<h1 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h1>\n<p>Hexo 程序使用 node.js 程序编写，因此需要现在环境机上部署 node.js，git 只用来推送。</p>\n<blockquote>\n<p><strong>什么是 Node.js</strong>：一个运行 javascript (JS) 的环境。Hexo 是一个 javascript (JS) 语言的程序。一般 JS 运行在浏览器中，但是也有一种非浏览器环境也可以运行 JS。这个环境是 Node.js</p>\n</blockquote>\n<blockquote>\n<p><strong>什么是 Git</strong>：一个版本控制软件。Hexo 博客源码由纯文本构成，管理纯文本项目的最好办法之一就是使用 Git。还记得 word 里面的历史记录和版本回退功能么？简单的来说，Git 就提供了类似功能，只不过更强大。</p>\n</blockquote>\n<blockquote>\n<p>本文章使用 fedora 系 linux 操作。</p>\n</blockquote>\n<h2 id=\"安装-git\"><a class=\"anchor\" href=\"#安装-git\">#</a> 安装 git</h2>\n<p>使用 yum 指令进行安装：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su</span><br><span class=\"line\">yum install git-core <span class=\"comment\"># 坏习惯，请减少使用root用户</span></span><br></pre></td></tr></tbody></table></figure>\n<p>查看是否安装成功：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># git --version</span></span><br><span class=\"line\">git version 1.8.3.1</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装-nodejs\"><a class=\"anchor\" href=\"#安装-nodejs\">#</a> 安装 node.js</h2>\n<p>本来可以直接使用 <code>apt，yum</code>  这种工具一键安装的，但是显然安装的版本十分的 stable，所以这里使用 nvm 工具来安装 nodejs 和 npm。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curl https://raw.githubusercontent.com/creationix/nvm/master/install.sh | bash</span><br><span class=\"line\"><span class=\"built_in\">source</span> ./.bashrc</span><br><span class=\"line\">nvm -v</span><br><span class=\"line\"><span class=\"comment\"># 安装最新版node并更新一下npm</span></span><br><span class=\"line\">nvm install node --latest-npm</span><br></pre></td></tr></tbody></table></figure>\n<p>然后查看版本：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># node -v</span></span><br><span class=\"line\">v16.14.2</span><br></pre></td></tr></tbody></table></figure>\n<p>顺便看看 npm 版本：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># npm -v</span></span><br><span class=\"line\">8.5.0</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置本体\"><a class=\"anchor\" href=\"#配置本体\">#</a> 配置本体</h1>\n<h2 id=\"hexo\"><a class=\"anchor\" href=\"#hexo\">#</a> hexo</h2>\n<p>如果你没有使用加速等工具的话，这里建议将 npm 源改到淘宝：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry http://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure>\n<p>使用 npm 指令安装：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure>\n<p>看看安装好了没：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># hexo -v</span></span><br><span class=\"line\">hexo-cli: 4.3.0</span><br><span class=\"line\">os: linux 3.10.0-1160.31.1.el7.x86_64 CentOS Linux 7 (Core)</span><br><span class=\"line\">node: 16.14.2</span><br><span class=\"line\">...</span><br><span class=\"line\">ngtcp2: 0.1.0-DEV</span><br><span class=\"line\">nghttp3: 0.1.0-DEV</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装server\"><a class=\"anchor\" href=\"#安装server\">#</a> 安装 server</h2>\n<p>如果你想在本地预览博客的话，可以安装下。其实装不装都无所谓。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo hexo-server</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装推送插件\"><a class=\"anchor\" href=\"#安装推送插件\">#</a> 安装推送插件</h2>\n<p>这个推送插件是后面要推送到 <code>github page</code>  上要使用的插件。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"创建博客\"><a class=\"anchor\" href=\"#创建博客\">#</a> 创建博客</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init [你的博客名字]</span><br><span class=\"line\"><span class=\"built_in\">cd</span> [你的博客名字]</span><br><span class=\"line\">npm install</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>如果你已经备份过想要还原，则只需要做到这一步就已经可以了。但是如果想要推送还需要再看下面的配置 git 项。</p>\n</blockquote>\n<h1 id=\"本地预览博客\"><a class=\"anchor\" href=\"#本地预览博客\">#</a> 本地预览博客</h1>\n<p>上面已经生成好了基本博客，可以使用 <code>ls</code>  命令查看下是否正确生成了文件<br>\n下面是 hexo 博客的基本结构。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\"> ├── _config.yml <span class=\"comment\"># 网站配置信息</span></span><br><span class=\"line\"> ├── package.json <span class=\"comment\"># 应用程序信息</span></span><br><span class=\"line\"> ├── scaffolds <span class=\"comment\"># 模板文件夹</span></span><br><span class=\"line\"> ├── node_modules <span class=\"comment\"># 生成博客后编译出来的文件。主要看这个是否生成成功了。</span></span><br><span class=\"line\"> ├── <span class=\"built_in\">source</span> <span class=\"comment\"># 存放用户资源</span></span><br><span class=\"line\"> |   ├── _drafts</span><br><span class=\"line\"> |   └── _posts</span><br><span class=\"line\"> └── themes <span class=\"comment\"># 主题文件夹</span></span><br></pre></td></tr></tbody></table></figure>\n<p>如果确认没什么问题便可以进行生成步骤了。</p>\n<ol>\n<li>测试本地生成博客</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 生成一篇文章，注意要在blog的目录下。</span></span><br><span class=\"line\">hexo new <span class=\"string\">\"文章名\"</span></span><br><span class=\"line\"><span class=\"comment\"># 生成静态网页</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"comment\"># 打开本地服务器</span></span><br><span class=\"line\">hexo s</span><br></pre></td></tr></tbody></table></figure>\n<p>此时你可以打开  <code>[博客地址]:4000</code>  来查看效果了。<br>\n如果确认没问题，便可以继续操作。</p>\n<h1 id=\"备份还原\"><a class=\"anchor\" href=\"#备份还原\">#</a> 备份还原</h1>\n<p>博客部署完成后或是以后工作中难免需要更换环境，这里也简单说一下备份还原的流程。</p>\n<h2 id=\"本地备份还原\"><a class=\"anchor\" href=\"#本地备份还原\">#</a> 本地备份还原</h2>\n<p>本地备份还原是对主要文件自行压缩拷贝后导出，然后覆盖进行还原</p>\n<blockquote>\n<p>需要备份的文件列表如下</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">|-- .gitignore</span><br><span class=\"line\">|-- _config.yml</span><br><span class=\"line\">|-- package-lock.json</span><br><span class=\"line\">|-- package.json</span><br><span class=\"line\">|-- scaffolds</span><br><span class=\"line\">|-- <span class=\"built_in\">source</span></span><br><span class=\"line\">`-- themes</span><br></pre></td></tr></tbody></table></figure>\n<p>将这些文件考出来后则备份完成。</p>\n<h2 id=\"可能会出现的问题\"><a class=\"anchor\" href=\"#可能会出现的问题\">#</a> 可能会出现的问题</h2>\n<p>如果当你完成还原，进行 <code>hexo g</code>  命令提示如下错误：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@LAPTOP-N4RDFRJ0:/mnt/d/Program/hexo/blog<span class=\"comment\"># npm install --save bulma-stylus</span></span><br><span class=\"line\">npm ERR! code FETCH_ERROR</span><br><span class=\"line\">npm ERR! errno FETCH_ERROR</span><br><span class=\"line\">npm ERR! invalid json response body at https://registry.npmjs.org/browserslist reason: Unexpected end of JSON input</span><br><span class=\"line\"></span><br><span class=\"line\">npm ERR! A complete <span class=\"built_in\">log</span> of this run can be found <span class=\"keyword\">in</span>:</span><br><span class=\"line\">npm ERR!     /root/.npm/_logs/2022-08-23T09_22_43_977Z-debug.log</span><br></pre></td></tr></tbody></table></figure>\n<p>执行这条命令即可：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm cache clean --force</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置远端\"><a class=\"anchor\" href=\"#配置远端\">#</a> 配置远端</h1>\n<p>我将博客部署到了 github 上，所以你要先去 github.com 上注册一个账户。并创建一个仓库。</p>\n<h2 id=\"初始化-git\"><a class=\"anchor\" href=\"#初始化-git\">#</a> 初始化 git</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">init git</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>如果提示 <code>Couldn't find an alternative telinit implementation to spawn.</code>  不用管，直接下一步。</p>\n</blockquote>\n<h2 id=\"配置-ssh\"><a class=\"anchor\" href=\"#配置-ssh\">#</a> 配置 ssh</h2>\n<ol>\n<li>配置登录信息</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">\"你的git用户名\"</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">\"你的git登录邮箱\"</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>生成 ssh keygen</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">\"你的git登录邮箱\"</span></span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>如果弹出了很多内容，直接进行一个回车跳过。</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter file <span class=\"keyword\">in</span> <span class=\"built_in\">which</span> to save the key (/root/.ssh/id_rsa): </span><br><span class=\"line\">Enter passphrase (empty <span class=\"keyword\">for</span> no passphrase):</span><br><span class=\"line\">Enter same passphrase again:</span><br><span class=\"line\">... // 直接回车跳过</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>复制密钥</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /root/.ssh/id_rsa.pub</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>将里面显示的所有内容复制。</p>\n</blockquote>\n<ol start=\"4\">\n<li>登录 github</li>\n</ol>\n<ul>\n<li>头像</li>\n<li>Settings</li>\n<li>SSH and GPG keys</li>\n<li>New SSH key</li>\n<li>将复制的内容粘贴到 Keys 框里</li>\n<li>Add SSH key</li>\n</ul>\n<ol start=\"5\">\n<li>测试链接是否成功</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost ~]<span class=\"comment\"># ssh -T git@github.com</span></span><br><span class=\"line\">Hi maxshiro! You<span class=\"string\">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"配置推送\"><a class=\"anchor\" href=\"#配置推送\">#</a> 配置推送</h1>\n<p>配置完 git 之后便可以配置 hexo 博客的推送地址了，下面以我的为例。</p>\n<ol>\n<li>首先 cd 到当前目录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> blog</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>编辑配置文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi _config.yml</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>移动到 deploy 天机如下内容</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">    <span class=\"built_in\">type</span>: git</span><br><span class=\"line\">    reop: git@github.com:maxshiro/maxshiro.github.io.git <span class=\"comment\">#这个地址可以到你的repo那里获得。</span></span><br><span class=\"line\">    branch: main <span class=\"comment\">#这个branch就是仓库的默认目录了。</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"推送博客\"><a class=\"anchor\" href=\"#推送博客\">#</a> 推送博客</h1>\n<p>已经测试并生成过博客了，所以可以直接推送。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 清理之前生成的文件</span></span><br><span class=\"line\">hexo clean</span><br><span class=\"line\"><span class=\"comment\"># 生成静态网页</span></span><br><span class=\"line\">hexo g</span><br><span class=\"line\"><span class=\"comment\"># 推送到github repo</span></span><br><span class=\"line\">hexo d</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"结语\"><a class=\"anchor\" href=\"#结语\">#</a> 结语</h1>\n<p>此时你已经完成了 hexo 博客的基本配置。</p>\n",
            "tags": [
                "hexo",
                "guide"
            ]
        }
    ]
}
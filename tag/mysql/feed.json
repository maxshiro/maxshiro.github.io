{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro's Blog • All posts by \"mysql\" tag",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/ug/100353/",
            "url": "http://maxshiroi.top/ug/100353/",
            "title": "dvwa安装指引",
            "date_published": "2023-03-07T02:03:53.000Z",
            "content_html": "<h1 id=\"启动nginx\"><a class=\"markdownIt-Anchor\" href=\"#启动nginx\">#</a> 启动 nginx</h1>\n<h2 id=\"service-nginx-startcd-varwwwhtmlvim-hellohtml\"><a class=\"markdownIt-Anchor\" href=\"#service-nginx-startcd-varwwwhtmlvim-hellohtml\">#</a> service nginx start<br>\ncd /var/www/html<br>\nvim hello.html</h2>\n<p>Helloworld!<br>\n// 访问虚拟机地址。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@fedora axro]# cd /usr/share/nginx/html/\n[root@fedora html]# git clone https://github.com/digininja/DVWA.git\n[root@fedora html]# cd DVWA/config\n[root@fedora config]# cp config.inc.php.dist config.inc.php\n[root@fedora config]# vi config.inc.php\nmysql -u root -p\ncreate database DVWA;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; create database dvwa;<br>\nQuery OK, 1 row affected (0.00 sec)</p>\n<p>mysql&gt; create user dvwa@localhost identified by ‘p@ssw0rd’;<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; grant all on dvwa.* to dvwa@localhost;<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; flush privileges;<br>\nQuery OK, 0 rows affected (0.00 sec)</p>\n",
            "tags": [
                "linux",
                "mysql",
                "kali",
                "dvwa",
                "fedora"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/101622/",
            "url": "http://maxshiroi.top/ug/101622/",
            "title": "解决mysql第一次安装后改密码的各种问题",
            "date_published": "2022-10-19T02:16:22.000Z",
            "content_html": "<h1 id=\"如何重置mysql密码\"><a class=\"markdownIt-Anchor\" href=\"#如何重置mysql密码\">#</a> 如何重置 mysql 密码？</h1>\n<p>按照提示，alter user。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/img/WebBackcreat1/20221019100609.png\" alt=\"\"><br>\n哈哈快乐报错。</p>\n<p>更改密码复杂度。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">set global validate_password_policy=0;\nset global validate_password_length=1;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>提示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ERROR 1193 (HY000): Unknown system variable 'validate_password_policy'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>很快乐。</p>\n<p>那就先查看密码规范：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">SHOW VARIABLES LIKE 'validate_password%';<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>提示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>套娃呢是吧。</p>\n<p>解决方法：<br>\n重置一个和随机密码差不多的就可以了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ALTER USER 'root'@'localhost' IDENTIFIED BY 'qazWsx&gt;+&amp;3ed';<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>已经提示成功了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'qazWsx&gt;+&amp;3ed';\nQuery OK, 0 rows affected (0.02 sec)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>更改密码复杂度：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">set global validate_password.policy=0;\nset global validate_password.length=6;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>修改密码并退出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';\nexit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后就可以愉快重启登陆了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl restart mysqld\nmysql -u root -p<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n",
            "tags": [
                "linux",
                "mysql",
                "passwd"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211932/",
            "url": "http://maxshiroi.top/ug/211932/",
            "title": "在centos中部署后端程序。",
            "date_published": "2022-10-16T13:19:32.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"markdownIt-Anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>其实部署很简单，重要的地方在于部署时出现差错后该如何进行处理。</p>\n</blockquote>\n<h1 id=\"nginx的安装\"><a class=\"markdownIt-Anchor\" href=\"#nginx的安装\">#</a> Nginx 的安装</h1>\n<p>使用源码编译安装：</p>\n<ol>\n<li>访问<a href=\"https://nginx.org/en/download.html\"> Nginx</a> 官网，复制最新版本链接。wget 到本地目录。</li>\n</ol>\n<blockquote>\n<p><img src=\"/img/WebBackcreat1/20221016212408.png\" alt=\"\"></p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https://nginx.org/download/nginx-1.23.1.tar.gz ~/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"2\">\n<li>解压出来。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tar -zxvf nginx-1.23.1.tar.gz\n// 如果这里是 *.tar.bz2 的话则使用 -jxvf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>安装编译所需要的前置。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"4\">\n<li>进入解压出来的文件夹，编译安装。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd nginx-1.23.1\n./configure\nmake\nmake install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"5\">\n<li>nginx 的启动和关闭</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd /usr/local/nginx/sbin\n// 启动nginx\n./nginx\n// 关闭nginx\n./nginx -s stop\n// 关闭防火墙\nsystemctl stop firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"6\">\n<li>创建目录</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir /var/temp/nginx -p<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>建议在执行前先使用 netstat -aux | grep 80 查看是否有端口占用 80。</p>\n</blockquote>\n<ol start=\"7\">\n<li>开机自启 * 还没写完\n<ol>\n<li>编辑文件</li>\n</ol>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd /lib/systemd/system/\nvim nginx.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>添加内容</li>\n</ol>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[Unit] \nDescription=nginx \nservice After=network.target \n[Service] \nType=forking \nExecStart=/usr/local/nginx/sbin/nginx \nExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=true \n[Install] \nWantedBy=multi-user.target\n// 解释\n[Unit]:服务的说明\nDescription:描述服务\nAfter:描述服务类别\n[Service]服务运行参数的设置\nType=forking是后台运行的形式\nExecStart为服务的具体运行命令\nExecReload为重启命令\nExecStop为停止命令\nPrivateTmp=True表示给服务分配独立的临时空间\n注意：[Service]的启动、重启、停止命令全部要求使用绝对路径\n[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>保存退出</li>\n<li>启动</li>\n</ol>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start nginx.service\nsystemctl enable nginx.service\nsystemctl status nginx.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>233</li>\n</ol>\n<h1 id=\"编译安装-apache\"><a class=\"markdownIt-Anchor\" href=\"#编译安装-apache\">#</a> 编译安装 apache</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum update\n\nyum install -y gcc-c++\nyum install -y expat-devel pcre-devel\n\nwget https://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-1.6.5.tar.gz\ntar -zxvf apr-1.6.5.tar.gz\ncd apr-1.6.5\n./configure --prefix=/usr/local/apr\nmake &amp;&amp; make install\n\nwget https://dlcdn.apache.org//apr/apr-util-1.6.3.tar.gz\ntar -zxvf apr-util-1.6.3.tar.gz\ncd apr-util\n./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/bin/apr-1-config\nmake &amp;&amp; make install\n\nwget https://nchc.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz\ntar -zxvf pcre-8.45.tar.gz\ncd pcre-8.45\n./configure --prefix=/usr/local/pcre --with-apr=/usr/local/apr/bin/apr-1-config\nmake &amp;&amp; make install\n\nwget https://mirrors.aliyun.com/apache/httpd/httpd-2.4.57.tar.gz\ntar -zxvf httpd-2.4.57.tar.gz\ncd httpd-2.4.57\n./configure --prefix=/usr/local/httpd --with-pcre=/usr/local/pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util\ncp /usr/local/httpd/bin/apachectl /etc/init.d/httpd\n\necho -e '\\nexport PATH=/usr/local/apache/bin:/usr/local/apache/lib:$PATH\\n' &gt;&gt; /etc/profile &amp;&amp; source /etc/profile\n\necho \"#chkconfig:2345 64 36\" &gt; /etc/rc.d/init.d/httpd\n\nchkconfig --add httpd\nchkconfig httpd on\n\nvim /usr/local/apache/conf/httpd.conf\nunsharp #ServerName www.example.com:80\n\nsystemctl start httpd\nfirewall-cmd --add-port=80/tcp\nfirewall-cmd --add-port=443/tcp\n#systemctl stop firewalld\n#systemctl disable firewalld\n\n\n\n\nphp\nyum -y install epel-release\nyum update\nyum -y install php-mcrypt libmcrypt libmcrypt-devel  autoconf  freetype gd jpegsrc libmcrypt libpng libpng-devel libjpeg libxml2 libxml2-devel zlib curl curl-devel openssl openssl-devel sqlite-devel\n\nyum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-6.7.0-1.el7.x86_64.rpm\nyum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-devel-6.7.0-1.el7.x86_64.rpm\n\nwget https://www.php.net/distributions/php-8.2.5.tar.gz\ntar -zxvf php-8.2.5.tar.gz\ncd php-8.2.5\n./configure --prefix=/usr/local/php8/ --with-config-file-path=/usr/local/php8/etc/ --with-apxs2=/usr/local/httpd/bin/apxs --enable-mbstring --with-curl -with-gd --enable-fpm --enable-mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd\nmake &amp;&amp; make install\n\n\necho -e  '\\nexport PATH=/usr/local/php8/bin:/usr/local/php8/sbin:$PATH\\n' &gt;&gt; /etc/profile &amp;&amp; source /etc/profile\n\nphp-fpm -t\n\n出现如下提示则正常：\n[18-Apr-2023 10:12:57] NOTICE: configuration file /usr/local/php8/etc/php-fpm.conf test is successful\n\n使用如下命令启动php\n/etc/init.d/php-fpm\n关闭\npkill php-fpm\n\nvi /usr/local/httpd/conf/httpd.conf\n\n1、查看是否已经添加了，如果没有在loadModule处添加 ，正确安装后，应该已经有了\nLoadModule php7_module modules/libphp7.so \n2、 在&lt;IfModule dir_module&gt;模块添加index.php\n&lt;IfModule dir_module&gt;    \nDirectoryIndex index.html index.php\n&lt;/IfModule&gt; \n3、找到：\nAddType  application/x-compress .Z\nAddType application/x-gzip .gz .tgz\n添加如下内容\nAddType application/x-httpd-php-source .phps\nAddType application/x-httpd-php .php\n\nsystemctl restart httpd\ncd /usr/local/httpd/htdocs/\necho \"&lt;?php phpinfo(); ?&gt;\" &gt; index.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"mysql-的安装\"><a class=\"markdownIt-Anchor\" href=\"#mysql-的安装\">#</a> Mysql 的安装</h1>\n<ol>\n<li>先安装 wget  <code>yum install wget</code> 。</li>\n<li>下载并安装 mysql。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\nyum -y localinstall mysql80-community-release-el7-7.noarch.rpm\nyum -y install mysql-community-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol>\n<li>启动 mysql</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 启动mysql\nsystemctl start mysqld\n// 写入开机启动\nsystemctl enable mysqld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol>\n<li>查找日志并找到临时密码。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi /var/log/mysqld.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p><img src=\"/img/WebBackcreat1/20221019082932.png\" alt=\"\"></p>\n</blockquote>\n<ol>\n<li>登录 mysql</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql -u root -p\n// 密码则为查找到的临时密码。\npassword:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol>\n<li>修改密码</li>\n</ol>\n<blockquote>\n<p>后面专门说这傻逼 mysql 改密码。</p>\n</blockquote>\n<ol>\n<li>重启 mysql 服务</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">service mysqld restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>重启后就可以正常使用 mysql 了。</p>\n</blockquote>\n<h1 id=\"httpdphp安装\"><a class=\"markdownIt-Anchor\" href=\"#httpdphp安装\">#</a> httpd/php 安装</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo yum update &amp;&amp; sudo yum upgrade\nsystemctl status httpd\nsudo yum install httpd\nsystemctl start httpd\nservice mysql start\nyum install php php-devel\ncd /var/www/html/\nvi test.php\n------\n&lt;?php phpinfo();?&gt;\n------\nsystemctl stop firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>打开浏览器访问<br>\n localhost/test.php<br>\n 出现 php 信息就成功了。</p>\n<h1 id=\"安装pma\"><a class=\"markdownIt-Anchor\" href=\"#安装pma\">#</a> 安装 pma</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip\nunzip phpMyAdmin-5.2.1-all-languages.zip\nmv phpMyAdmin-5.2.1-all-languages pma\nyum install php-mysqli\ncd pma\ncp config.sample.inc.php config.inc.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>打开浏览器访问<br>\n localhost/pma<br>\n 提示登陆就成功了。</p>\n",
            "tags": [
                "linux",
                "centos",
                "web",
                "nginx",
                "mysql"
            ]
        }
    ]
}
{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro • All posts by \"filestream\" tag",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/languages/java/201744/",
            "url": "http://maxshiroi.top/languages/java/201744/",
            "title": "Java中的文件流读写",
            "date_published": "2023-05-09T12:17:44.000Z",
            "content_html": "<h2 id=\"一个简单的写入文件并读取文件程序\"><a class=\"anchor\" href=\"#一个简单的写入文件并读取文件程序\">#</a> 一个简单的写入文件并读取文件程序。</h2>\n<figure class=\"highlight java\"><figcaption><span>java</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">filestream</span> {</span><br><span class=\"line\">    <span class=\"comment\">// 主函数，使用psvm自动补全， throws IOException ：如果在该方法中调用了可能抛出已检查异常的方法，比如文件读写操作，就需要在方法声明中加上throws子句来声明可能抛出的异常。</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> IOException {</span><br><span class=\"line\">        <span class=\"comment\">// 使用 File 指定文件目录为一个变量“f”</span></span><br><span class=\"line\">        File f=<span class=\"keyword\">new</span> <span class=\"title class_\">File</span>(<span class=\"string\">\"D:\\\\Project\\\\Java\\\\test.txt\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个字节输出流 FOS 对象 fop，使用fop.close();控制输出流关闭.</span></span><br><span class=\"line\">        <span class=\"comment\">// FileOutputStream(使用File指定的文件路径变量, 是否保留源文件)；</span></span><br><span class=\"line\">        FileOutputStream fop=<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(f, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个OSW对象（OutputStreamWriter是一个字符输出流，它将字节流转换为字符流。）writer，使用write.append(\"内容\");来输出流到文件。</span></span><br><span class=\"line\">        <span class=\"comment\">// OutputStreamWriter(字节输出流变量, “编码”);</span></span><br><span class=\"line\">        <span class=\"type\">OutputStreamWriter</span> <span class=\"variable\">writer</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OutputStreamWriter</span>(fop, <span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 使用OSW对象变量名.append(\"内容\");来输出流到文件。</span></span><br><span class=\"line\">        writer.append(<span class=\"string\">\"中文测试\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 换行</span></span><br><span class=\"line\">        writer.append(<span class=\"string\">\"\\n\\r\"</span>);</span><br><span class=\"line\">        writer.append(<span class=\"string\">\"English\"</span>);</span><br><span class=\"line\">        writer.close();</span><br><span class=\"line\">        <span class=\"comment\">// 关闭输出流</span></span><br><span class=\"line\">        fop.close();</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个字节输入（读取）流 FIS 对象 fip，使用fip.close();控制输出流关闭.</span></span><br><span class=\"line\">        <span class=\"comment\">// FileInputStream(使用File指定的文件路径变量)；</span></span><br><span class=\"line\">        <span class=\"type\">FileInputStream</span> <span class=\"variable\">fip</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(f);</span><br><span class=\"line\">        <span class=\"comment\">// 创建一个ISR对象 (InputStreamReader 是一个字符输入流，它将字节流转换为字符流。) reader</span></span><br><span class=\"line\">        <span class=\"comment\">// reader.ready()读取流是否准备好。</span></span><br><span class=\"line\">        <span class=\"comment\">// reader.read()读取</span></span><br><span class=\"line\">        <span class=\"comment\">// OutputStreamWriter(字节输出流变量, “编码”);</span></span><br><span class=\"line\">        <span class=\"type\">InputStreamReader</span> <span class=\"variable\">reader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(fip, <span class=\"string\">\"UTF-8\"</span>);</span><br><span class=\"line\">        <span class=\"comment\">// 创建字符缓存 sb，用他来读取文件一行内容到缓存中。</span></span><br><span class=\"line\">        <span class=\"type\">StringBuffer</span> <span class=\"variable\">sb</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuffer</span>();</span><br><span class=\"line\">        <span class=\"comment\">// 程序使用一个 while 循环读取输入流中的字符，并将其追加到 sb 中，直到输入流中没有字符可读。在每次读取时，程序使用 (char) reader.read() 将读取到的字节转换为字符，并将其追加到 sb 中。</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (reader.ready()){</span><br><span class=\"line\">            sb.append((<span class=\"type\">char</span>) reader.read());</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"comment\">// 输出。</span></span><br><span class=\"line\">        System.out.println(sb.toString());</span><br><span class=\"line\">        <span class=\"comment\">// 关闭输入输出流。</span></span><br><span class=\"line\">        reader.close();</span><br><span class=\"line\">        fip.close();</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n",
            "tags": [
                "java",
                "filestream"
            ]
        }
    ]
}
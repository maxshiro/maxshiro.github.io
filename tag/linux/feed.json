{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro's Blog • All posts by \"linux\" tag",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/ug/100353/",
            "url": "http://maxshiroi.top/ug/100353/",
            "title": "dvwa安装指引",
            "date_published": "2023-03-07T02:03:53.000Z",
            "content_html": "<h1 id=\"启动nginx\"><a class=\"markdownIt-Anchor\" href=\"#启动nginx\">#</a> 启动 nginx</h1>\n<h2 id=\"service-nginx-startcd-varwwwhtmlvim-hellohtml\"><a class=\"markdownIt-Anchor\" href=\"#service-nginx-startcd-varwwwhtmlvim-hellohtml\">#</a> service nginx start<br>\ncd /var/www/html<br>\nvim hello.html</h2>\n<p>Helloworld!<br>\n// 访问虚拟机地址。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[root@fedora axro]# cd /usr/share/nginx/html/\n[root@fedora html]# git clone https://github.com/digininja/DVWA.git\n[root@fedora html]# cd DVWA/config\n[root@fedora config]# cp config.inc.php.dist config.inc.php\n[root@fedora config]# vi config.inc.php\nmysql -u root -p\ncreate database DVWA;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>mysql&gt; create database dvwa;<br>\nQuery OK, 1 row affected (0.00 sec)</p>\n<p>mysql&gt; create user dvwa@localhost identified by ‘p@ssw0rd’;<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; grant all on dvwa.* to dvwa@localhost;<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; flush privileges;<br>\nQuery OK, 0 rows affected (0.00 sec)</p>\n",
            "tags": [
                "linux",
                "mysql",
                "kali",
                "dvwa",
                "fedora"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/140206/",
            "url": "http://maxshiroi.top/ug/140206/",
            "title": "Arch安装使用指导",
            "date_published": "2023-02-24T06:02:06.000Z",
            "content_html": "<h1 id=\"前期准备\"><a class=\"markdownIt-Anchor\" href=\"#前期准备\">#</a> 前期准备</h1>\n<p>在创建好虚拟机后，需要打开虚拟机设置，将  <code>firmware type</code>  更改为  <code>efi</code> ，以便后续操作。</p>\n<h1 id=\"检查网络设置和-ssh-连接\"><a class=\"markdownIt-Anchor\" href=\"#检查网络设置和-ssh-连接\">#</a> 检查网络设置和 SSH 连接</h1>\n<p>以下是检查网络设置和 SSH 连接的操作步骤：</p>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\"># 检查系统启动方式\nls /sys/firmware/efi/efivars\n\n# 检查网络是否通畅\nping baidu.com\n\n# 更改密码并远程连接\npasswd\n\n# 查看 IP 地址\nip addr<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"使用ssh连接\"><a class=\"markdownIt-Anchor\" href=\"#使用ssh连接\">#</a> 使用 ssh 连接</h1>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">ssh -p 22 root@192.168.204.130<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"分区挂载\"><a class=\"markdownIt-Anchor\" href=\"#分区挂载\">#</a> 分区挂载</h1>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\"># 查看已存在的硬盘\nlsblk\n# 使用cfdisk创建分区\ncfdisk /dev/nvme0n1\n# 创建如下三个\nDevice           Start      End  Sectors  Size Type\n/dev/nvme0n1p1    2048  1026047  1024000  500M EFI System\n/dev/nvme0n1p2 1026048  9414655  8388608    4G Linux swap\n/dev/nvme0n1p3 9414656 83884031 74469376 35.5G Linux filesystem\n# 分别格式化\n# 格式化EFI启动分区为fat32格式\nmkfs.fat -F32 /dev/nvme0n1p1\n# 格式化根目录为xfs文件系统\nmkfs.xfs -f /dev/nvme0n1p3\n# 格式化swap文件系统\nmkswap /dev/nvme0n1p2\nswapon /dev/nvme0n1p2\n# 挂载\n# 挂载根分区到mnt\nmount /dev/nvme0n1p3 /mnt\n# 新建EFI分区并挂载\nmkdir -p /mnt/boot/EFI\nmount /dev/nvme0n1p1 /mnt/boot/EFI<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h1>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\"># 使用下面命令下载并安装系统\npacstrap -i /mnt base base-devel vim linux linux-firmware\n# 生成 fstab 文件并检查\ngenfstab -U /mnt &gt;&gt; /mnt/etc/fstab\ncat /mnt/etc/fstab\n# 切换系统目录\narch-chroot /mnt\n# 更改时区，设置UTC\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nhwclock --systohc --utc\n# 更改local并生成locale信息\nvim /etc/locale.gen\n# 找到合适的地区去掉前面的#\nlocale-gen\n# 将语言信息写入locale.conf\necho LANG=en_GB.UTF-8 &gt; /etc/locale.conf\n# 配置网络\nvim /etc/hostname\n----\narchlinux\n# 直接写入自己的主机名\nvim /etc/hosts\n----\n127.0.0.1   localhost\n::1         localhost\n127.0.1.1   archlinux.localdomain archlinux\n# archlinux就是自己的主机名\n# 安装相关包\npacman -S grub efibootmgr efivar networkmanager intel-ucode\n# 配置grub\ngrub-install /dev/sda\ngrub-mkconfig -o /boot/grub/grub.cfg\n# 激活并启用NetworkManager\nsystemctl enable NetworkManager\n# 更改密码\npasswd\n# 卸载挂载，重启\nexit\numount /mnt/boot/EFI\numount /mnt\nreboot <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"安装后\"><a class=\"markdownIt-Anchor\" href=\"#安装后\">#</a> 安装后</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 配置网络，再次联网\n# 输入nmtui 选择 “Activate a connection” 回车进入，选择你需要的网络，连接后back返回即可\n# 安装 openssh\npacman -S openssh\nsystemctl enable sshd\nsystemctl start sshd\nsystemctl status sshd\n# 查看ip\nip -brief address / addr\n# 修改ssh配置允许root连接\nvim /etc/ssh/sshd_config\n----\n# 将下列的语句值改为yes\nPermitRootLogin yes\n# 重启ssh\nsystemctl restart sshd\n# 使用ssh连接\nssh -o StrictHostKeyChecking=no root@192.168.204.130\n# 更新\npacman -Syu\nuseradd axro\nvi /etc/passwd\n---<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"优化终端\"><a class=\"markdownIt-Anchor\" href=\"#优化终端\">#</a> 优化终端</h1>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\"># 安装zsh，高亮，补全\nsudo pacman -S zsh\nsudo pacman -S zsh-autosuggestions\nsudo pacman -S zsh-syntax-highlighting\n# 安装git\nsudo pacman -S git\n# 使用以下命令配置zsh\nautoload -Uz zsh-newuser-install\nzsh-newuser-install -f\n# 查看是否生成.zshrc\nls -a\n# 安装oh my zsh\nsh -c \"$(curl -fsSL https:#raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n# 在.zshrc中加入以下插件\nvim .zshrc\n---\nZSH_THEME=\"dieter\"\nalias vi=vim\nalias ll='ls -l'\nsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh\nsource /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh\n:wq\n# 刷新终端\nsource .zshrc\n# 安装neofetch\nsudo pacman -S neofetch\n---\n11:18:08 axro@axro-arch ~ neofetch\n                   -`                    axro@axro-arch\n                  .o+`                   --------------\n                 `ooo/                   OS: Arch Linux x86_64\n                `+oooo:                  Host: VMware20,1 None\n               `+oooooo:                 Kernel: 6.2.2-arch1-1\n               -+oooooo+:                Uptime: 20 mins\n             `/:-:++oooo+:               Packages: 182 (pacman)\n            `/++++/+++++++:              Shell: zsh 5.9\n           `/++++++++++++++:             Resolution: 1280x800\n          `/+++ooooooooooooo/`           Terminal: /dev/pts/0\n         ./ooosssso++osssssso+`          CPU: 11th Gen Intel i7-11800H (1) @ 2.304GHz\n        .oossssso-````/ossssss+`         GPU: 00:0f.0 VMware SVGA II Adapter\n       -osssssso.      :ssssssso.        Memory: 209MiB / 3883MiB\n      :osssssss/        osssso+++.\n     /ossssssss/        +ssssooo/-\n   `/ossssso+/:-        -:/+osssso+-\n  `+sso+:-`                 `.-/+oso:\n `++:.                           `-/+/\n .`                                 `/\n\n11:21:14 axro@axro-arch ~<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"安装桌面环境\"><a class=\"markdownIt-Anchor\" href=\"#安装桌面环境\">#</a> 安装桌面环境</h1>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\"># 安装xorg-server，xorg-xinit\nsudo pacman -S xorg-server xorg-xinit\n# 安装显卡驱动\nsudo pacman -S xf86-video-vesa # 这里使用的是vmware，请自行找适合自己机器的显卡驱动\n# 安装plasma\nsudo pacman -S pacman-meta konsole dolphin\nsudo pacman -S kde-applications-meta sddm\n# 启动kde plasma\nsudo systemctl start sddm.service\n# 安装字体，更改中文\nsudo pacman -S noto-fonts-cjk wqy-microhei\n# 安装火狐浏览器\nsudo pacman -S firefox\n# 使用如下命令打开和关闭网卡\nifconfig ens160 down/up<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"vmware安装vmwaretools-实现窗口分辨率自适应\"><a class=\"markdownIt-Anchor\" href=\"#vmware安装vmwaretools-实现窗口分辨率自适应\">#</a> vmware 安装 vmwaretools 实现窗口分辨率自适应。</h2>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\"># 安装\nsudo pacman -Sy gtkmm gtkmm3 net-tools open-vm-tools xf86-video-vmware xf86-input-vmmouse\nsudo systemctl enable vmtoolsd.service\nsudo systemctl enable vmware-vmblock-fuse.service\nsudo reboot<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"详细请参考\"><a class=\"markdownIt-Anchor\" href=\"#详细请参考\">#</a> 详细请参考</h3>\n<p><a href=\"https://wiki.archlinuxcn.org/wiki/VMware/%E5%AE%89%E8%A3%85_Arch_Linux_%E4%B8%BA%E8%99%9A%E6%8B%9F%E6%9C%BA\">wiki.archlinuxcn.org</a><br>\n 这里不多赘述。</p>\n<h2 id=\"安装中文输入法\"><a class=\"markdownIt-Anchor\" href=\"#安装中文输入法\">#</a> 安装中文输入法</h2>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\">// 安装fcitx5\nsudo pacman -S fcitx5-im fcitx5-chinese-addons  fcitx5-rime fcitx5-configtool\n// 编辑配置文件\nvi /etc/environment\n---\nGTK_IM_MODULE=fcitx\nQT_IM_MODULE=fcitx\nXMODIFIERS=@im=fcitx\nSDL_IM_MODULE=fcitx\n\n// 重启，gnome和kde会自动配置\nreboot<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"安装yay工具并安装linuxqq\"><a class=\"markdownIt-Anchor\" href=\"#安装yay工具并安装linuxqq\">#</a> 安装 yay 工具并安装 linuxqq</h2>\n<pre class=\"line-numbers language-zsh\" data-language=\"zsh\"><code class=\"language-zsh\">git clone https://aur.archlinux.org/yay.git\ncd yay\nmakepkg -si\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"编写rclocal\"><a class=\"markdownIt-Anchor\" href=\"#编写rclocal\">#</a> 编写 rc.local</h2>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">vi /usr/lib/systemd/system/rc-local.service\n---\n#/usr/lib/systemd/system/rc-local.service\n[Unit]\nDescription=\"写下描述\" \n\n[Service]\nType=forking\nExecStart=/etc/rc.local start #在这里你可以看到开机执行脚本的位置\nTimeoutSec=0\nStandardInput=tty\nRemainAfterExit=yes\nSysVStartPriority=99\n\n[Install]\nWantedBy=multi-user.target\n\nvi /etc/rc.local\n---\n#/bin/bash\nsudo pacman -Syu\nexit 0\n\nchmod 777 /etc/rc.local\nsystemctl enable rc.local.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>",
            "tags": [
                "linux",
                "arch",
                "pacman"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/082913/",
            "url": "http://maxshiroi.top/ug/082913/",
            "title": "WSL2迁移以及空间回收。",
            "date_published": "2022-11-19T00:29:13.000Z",
            "content_html": "<p><img src=\"../img/wsl2move/20221119083153.png\" alt=\"\"></p>\n<h1 id=\"intro\"><a class=\"markdownIt-Anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>如果你按照正常方式在设置里移动 wsl 的话就会发现报错，本篇文章向您介绍如何正确迁移以及回收空间。</p>\n<h1 id=\"移动\"><a class=\"markdownIt-Anchor\" href=\"#移动\">#</a> 移动</h1>\n<p>在 Windows 的 PowerShell 中输入:</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">wsl --help<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>可以看到关于这个命令的使用帮助说明：</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">用法: wsl.exe [参数] [选项...] [命令行]\n \n用于运行 Linux 二进制文件的参数:\n \n    如果未提供命令行，wsl.exe 将启动默认的 shell。\n    --exec, -e &lt;命令行&gt;\n        执行指定的命令而不使用默认的 Linux shell。\n    --\n        按原样传递剩余的命令行。\n选项:\n    --distribution, -d &lt;分发版&gt;\n        运行指定的分发。\n    --user, -u &lt;用户名&gt;\n        以指定用户身份运行。\n用于管理适用于 Linux 的 Windows 子系统的参数:\n \n    --export &lt;分发版&gt; &lt;文件名&gt;\n        将分发导出到 tar 文件。\n        对于标准输出，文件名可以是 -。\n    --import &lt;分发版&gt; &lt;安装位置&gt; &lt;文件名&gt; [选项]\n        将指定的 tar 文件作为新分发进行导入。\n        对于标准输入，文件名可以是 -。\n        选项:\n            --version &lt;版本&gt;\n                指定用于新分发的版本。\n    --list, -l [选项]\n        列出分发。\n        选项:\n            --all\n                列出所有分发，包括当前正在\n                安装或卸载的分发。\n            --running\n                只列出当前正在运行的分发。\n            --quiet, -q\n                只显示分发名称。\n            --verbose, -v\n                显示有关所有分发的详细信息。\n    --set-default, -s &lt;分发版&gt;\n        将分发设置为默认值。\n    --set-default-version &lt;版本&gt;\n        更改新分发的默认安装版本。\n    --set-version &lt;分发版&gt; &lt;版本&gt;\n        更改指定分发的版本。\n    --shutdown\n        立即终止所有正在运行的分发和 WSL 2 轻型工具虚拟机。\n    --terminate, -t &lt;分发版&gt;\n        终止指定的分发。\n    --unregister &lt;分发版&gt;\n        注销分发。\n    --help\n        显示用法信息。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>这里我们使用到 export 、unregister 和 import 几个选项就可以实现迁移。</p>\n<ol>\n<li>终止正在运行的分发或虚拟机：<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">wsl --shutdown<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>查看已安装的 wsl 名称：<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">wsl.exe --list --all<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">适用于 Linux 的 Windows 子系统分发:\nDebian (默认)\nkali-linux\nUbuntu<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>对需要迁移的分发或虚拟机导出（我要迁移 kali-linux）：<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">wsl --export kali-linux D:\\kali<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>卸载分发版或虚拟机（如果是要重装系统或换机器安装，这一步可以省略，但是要将上一步导出的文件保存好）<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">wsl --unregister kali-linux<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n<li>导入新的分发版或虚拟机：<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">wsl --import kali-linux D:\\wsl\\kali D:\\kali<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n</li>\n</ol>\n<h1 id=\"压缩\"><a class=\"markdownIt-Anchor\" href=\"#压缩\">#</a> 压缩</h1>\n<p>等待导入后你会发现移动的其实是 vhdx 文件，那么就可以对这个文件进行回收空间。</p>\n<ol>\n<li>以管理员身份运行 cmd，输入 diskpart 命令按回车。</li>\n<li>使用以下命令选择你的 userdata.vhdx</li>\n</ol>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">select vdisk file = \"D:\\wsl\\ext4.vhdx\"<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>如果提示</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">DiskPart successfully selected the virtual disk file.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>就说明成功了。</p>\n<ol start=\"3\">\n<li>输入  <code>compact vdisk</code>  来压缩。</li>\n</ol>\n<h1 id=\"bug\"><a class=\"markdownIt-Anchor\" href=\"#bug\">#</a> bug</h1>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">ERROR: Wsl/Service/CreateInstance/ERROR_FILE_NOT_FOUND<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>打开命令行，在命令行中输入</p>\n<pre class=\"line-numbers language-cmd\" data-language=\"cmd\"><div class=\"caption\"><span>cmd</span></div><code class=\"language-cmd\">wsl.exe --list --all\nwsl.exe --unregister xxx<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h1 id=\"摘抄\"><a class=\"markdownIt-Anchor\" href=\"#摘抄\">#</a> 摘抄</h1>\n<p><a href=\"https://blog.csdn.net/zhys2007/article/details/110958577\">WSL2 迁移方法</a><br>\n<a href=\"https://blog.csdn.net/y17854117512/article/details/119214442?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;utm_relevant_index=1\">解决 Win10 子系统的 Ubuntu 被删除后，重新安装出现找不到系统路径</a></p>\n",
            "tags": [
                "linux",
                "wsl2",
                "Hyper-v"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/101622/",
            "url": "http://maxshiroi.top/ug/101622/",
            "title": "解决mysql第一次安装后改密码的各种问题",
            "date_published": "2022-10-19T02:16:22.000Z",
            "content_html": "<h1 id=\"如何重置mysql密码\"><a class=\"markdownIt-Anchor\" href=\"#如何重置mysql密码\">#</a> 如何重置 mysql 密码？</h1>\n<p>按照提示，alter user。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p><img src=\"/img/WebBackcreat1/20221019100609.png\" alt=\"\"><br>\n哈哈快乐报错。</p>\n<p>更改密码复杂度。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">set global validate_password_policy=0;\nset global validate_password_length=1;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>提示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ERROR 1193 (HY000): Unknown system variable 'validate_password_policy'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>很快乐。</p>\n<p>那就先查看密码规范：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">SHOW VARIABLES LIKE 'validate_password%';<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>提示：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>套娃呢是吧。</p>\n<p>解决方法：<br>\n重置一个和随机密码差不多的就可以了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ALTER USER 'root'@'localhost' IDENTIFIED BY 'qazWsx&gt;+&amp;3ed';<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>已经提示成功了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql&gt; ALTER USER 'root'@'localhost' IDENTIFIED BY 'qazWsx&gt;+&amp;3ed';\nQuery OK, 0 rows affected (0.02 sec)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>更改密码复杂度：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">set global validate_password.policy=0;\nset global validate_password.length=6;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>修改密码并退出：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ALTER USER 'root'@'localhost' IDENTIFIED BY '123456';\nexit<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>然后就可以愉快重启登陆了：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl restart mysqld\nmysql -u root -p<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n",
            "tags": [
                "linux",
                "mysql",
                "passwd"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211932/",
            "url": "http://maxshiroi.top/ug/211932/",
            "title": "在centos中部署后端程序。",
            "date_published": "2022-10-16T13:19:32.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"markdownIt-Anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>其实部署很简单，重要的地方在于部署时出现差错后该如何进行处理。</p>\n</blockquote>\n<h1 id=\"nginx的安装\"><a class=\"markdownIt-Anchor\" href=\"#nginx的安装\">#</a> Nginx 的安装</h1>\n<p>使用源码编译安装：</p>\n<ol>\n<li>访问<a href=\"https://nginx.org/en/download.html\"> Nginx</a> 官网，复制最新版本链接。wget 到本地目录。</li>\n</ol>\n<blockquote>\n<p><img src=\"/img/WebBackcreat1/20221016212408.png\" alt=\"\"></p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https://nginx.org/download/nginx-1.23.1.tar.gz ~/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"2\">\n<li>解压出来。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">tar -zxvf nginx-1.23.1.tar.gz\n// 如果这里是 *.tar.bz2 的话则使用 -jxvf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>安装编译所需要的前置。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum -y install gcc zlib zlib-devel pcre-devel openssl openssl-devel<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"4\">\n<li>进入解压出来的文件夹，编译安装。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd nginx-1.23.1\n./configure\nmake\nmake install<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"5\">\n<li>nginx 的启动和关闭</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd /usr/local/nginx/sbin\n// 启动nginx\n./nginx\n// 关闭nginx\n./nginx -s stop\n// 关闭防火墙\nsystemctl stop firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"6\">\n<li>创建目录</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mkdir /var/temp/nginx -p<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>建议在执行前先使用 netstat -aux | grep 80 查看是否有端口占用 80。</p>\n</blockquote>\n<ol start=\"7\">\n<li>开机自启 * 还没写完\n<ol>\n<li>编辑文件</li>\n</ol>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd /lib/systemd/system/\nvim nginx.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>添加内容</li>\n</ol>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[Unit] \nDescription=nginx \nservice After=network.target \n[Service] \nType=forking \nExecStart=/usr/local/nginx/sbin/nginx \nExecReload=/usr/local/nginx/sbin/nginx -s reload ExecStop=/usr/local/nginx/sbin/nginx -s quit PrivateTmp=true \n[Install] \nWantedBy=multi-user.target\n// 解释\n[Unit]:服务的说明\nDescription:描述服务\nAfter:描述服务类别\n[Service]服务运行参数的设置\nType=forking是后台运行的形式\nExecStart为服务的具体运行命令\nExecReload为重启命令\nExecStop为停止命令\nPrivateTmp=True表示给服务分配独立的临时空间\n注意：[Service]的启动、重启、停止命令全部要求使用绝对路径\n[Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>保存退出</li>\n<li>启动</li>\n</ol>\n <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">systemctl start nginx.service\nsystemctl enable nginx.service\nsystemctl status nginx.service<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n</li>\n<li>233</li>\n</ol>\n<h1 id=\"编译安装-apache\"><a class=\"markdownIt-Anchor\" href=\"#编译安装-apache\">#</a> 编译安装 apache</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yum update\n\nyum install -y gcc-c++\nyum install -y expat-devel pcre-devel\n\nwget https://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-1.6.5.tar.gz\ntar -zxvf apr-1.6.5.tar.gz\ncd apr-1.6.5\n./configure --prefix=/usr/local/apr\nmake &amp;&amp; make install\n\nwget https://dlcdn.apache.org//apr/apr-util-1.6.3.tar.gz\ntar -zxvf apr-util-1.6.3.tar.gz\ncd apr-util\n./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/bin/apr-1-config\nmake &amp;&amp; make install\n\nwget https://nchc.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz\ntar -zxvf pcre-8.45.tar.gz\ncd pcre-8.45\n./configure --prefix=/usr/local/pcre --with-apr=/usr/local/apr/bin/apr-1-config\nmake &amp;&amp; make install\n\nwget https://mirrors.aliyun.com/apache/httpd/httpd-2.4.57.tar.gz\ntar -zxvf httpd-2.4.57.tar.gz\ncd httpd-2.4.57\n./configure --prefix=/usr/local/httpd --with-pcre=/usr/local/pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util\ncp /usr/local/httpd/bin/apachectl /etc/init.d/httpd\n\necho -e '\\nexport PATH=/usr/local/apache/bin:/usr/local/apache/lib:$PATH\\n' &gt;&gt; /etc/profile &amp;&amp; source /etc/profile\n\necho \"#chkconfig:2345 64 36\" &gt; /etc/rc.d/init.d/httpd\n\nchkconfig --add httpd\nchkconfig httpd on\n\nvim /usr/local/apache/conf/httpd.conf\nunsharp #ServerName www.example.com:80\n\nsystemctl start httpd\nfirewall-cmd --add-port=80/tcp\nfirewall-cmd --add-port=443/tcp\n#systemctl stop firewalld\n#systemctl disable firewalld\n\n\n\n\nphp\nyum -y install epel-release\nyum update\nyum -y install php-mcrypt libmcrypt libmcrypt-devel  autoconf  freetype gd jpegsrc libmcrypt libpng libpng-devel libjpeg libxml2 libxml2-devel zlib curl curl-devel openssl openssl-devel sqlite-devel\n\nyum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-6.7.0-1.el7.x86_64.rpm\nyum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-devel-6.7.0-1.el7.x86_64.rpm\n\nwget https://www.php.net/distributions/php-8.2.5.tar.gz\ntar -zxvf php-8.2.5.tar.gz\ncd php-8.2.5\n./configure --prefix=/usr/local/php8/ --with-config-file-path=/usr/local/php8/etc/ --with-apxs2=/usr/local/httpd/bin/apxs --enable-mbstring --with-curl -with-gd --enable-fpm --enable-mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd\nmake &amp;&amp; make install\n\n\necho -e  '\\nexport PATH=/usr/local/php8/bin:/usr/local/php8/sbin:$PATH\\n' &gt;&gt; /etc/profile &amp;&amp; source /etc/profile\n\nphp-fpm -t\n\n出现如下提示则正常：\n[18-Apr-2023 10:12:57] NOTICE: configuration file /usr/local/php8/etc/php-fpm.conf test is successful\n\n使用如下命令启动php\n/etc/init.d/php-fpm\n关闭\npkill php-fpm\n\nvi /usr/local/httpd/conf/httpd.conf\n\n1、查看是否已经添加了，如果没有在loadModule处添加 ，正确安装后，应该已经有了\nLoadModule php7_module modules/libphp7.so \n2、 在&lt;IfModule dir_module&gt;模块添加index.php\n&lt;IfModule dir_module&gt;    \nDirectoryIndex index.html index.php\n&lt;/IfModule&gt; \n3、找到：\nAddType  application/x-compress .Z\nAddType application/x-gzip .gz .tgz\n添加如下内容\nAddType application/x-httpd-php-source .phps\nAddType application/x-httpd-php .php\n\nsystemctl restart httpd\ncd /usr/local/httpd/htdocs/\necho \"&lt;?php phpinfo(); ?&gt;\" &gt; index.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"mysql-的安装\"><a class=\"markdownIt-Anchor\" href=\"#mysql-的安装\">#</a> Mysql 的安装</h1>\n<ol>\n<li>先安装 wget  <code>yum install wget</code> 。</li>\n<li>下载并安装 mysql。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm\nyum -y localinstall mysql80-community-release-el7-7.noarch.rpm\nyum -y install mysql-community-server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol>\n<li>启动 mysql</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 启动mysql\nsystemctl start mysqld\n// 写入开机启动\nsystemctl enable mysqld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol>\n<li>查找日志并找到临时密码。</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi /var/log/mysqld.log<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p><img src=\"/img/WebBackcreat1/20221019082932.png\" alt=\"\"></p>\n</blockquote>\n<ol>\n<li>登录 mysql</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql -u root -p\n// 密码则为查找到的临时密码。\npassword:<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<ol>\n<li>修改密码</li>\n</ol>\n<blockquote>\n<p>后面专门说这傻逼 mysql 改密码。</p>\n</blockquote>\n<ol>\n<li>重启 mysql 服务</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">service mysqld restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>重启后就可以正常使用 mysql 了。</p>\n</blockquote>\n<h1 id=\"httpdphp安装\"><a class=\"markdownIt-Anchor\" href=\"#httpdphp安装\">#</a> httpd/php 安装</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo yum update &amp;&amp; sudo yum upgrade\nsystemctl status httpd\nsudo yum install httpd\nsystemctl start httpd\nservice mysql start\nyum install php php-devel\ncd /var/www/html/\nvi test.php\n------\n&lt;?php phpinfo();?&gt;\n------\nsystemctl stop firewalld<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>打开浏览器访问<br>\n localhost/test.php<br>\n 出现 php 信息就成功了。</p>\n<h1 id=\"安装pma\"><a class=\"markdownIt-Anchor\" href=\"#安装pma\">#</a> 安装 pma</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip\nunzip phpMyAdmin-5.2.1-all-languages.zip\nmv phpMyAdmin-5.2.1-all-languages pma\nyum install php-mysqli\ncd pma\ncp config.sample.inc.php config.inc.php<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>打开浏览器访问<br>\n localhost/pma<br>\n 提示登陆就成功了。</p>\n",
            "tags": [
                "linux",
                "centos",
                "web",
                "nginx",
                "mysql"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/175233/",
            "url": "http://maxshiroi.top/ug/175233/",
            "title": "Linux入门学习0",
            "date_published": "2022-09-22T09:52:33.000Z",
            "content_html": "<h1 id=\"linux系统目录结构\"><a class=\"markdownIt-Anchor\" href=\"#linux系统目录结构\">#</a> linux 系统目录结构</h1>\n<blockquote>\n<p>在 linux 中，所有都是以文件的形式存储和管理的。</p>\n</blockquote>\n<h2 id=\"bin\"><a class=\"markdownIt-Anchor\" href=\"#bin\">#</a> /bin</h2>\n<blockquote>\n<p>Binary 存放经常使用的命令。</p>\n</blockquote>\n<h2 id=\"sbin\"><a class=\"markdownIt-Anchor\" href=\"#sbin\">#</a> /sbin</h2>\n<blockquote>\n<p>super Binary 超级用户命令存放的目录。</p>\n</blockquote>\n<h2 id=\"home\"><a class=\"markdownIt-Anchor\" href=\"#home\">#</a> /home</h2>\n<blockquote>\n<p>用户目录</p>\n</blockquote>\n<h2 id=\"root\"><a class=\"markdownIt-Anchor\" href=\"#root\">#</a> /root</h2>\n<blockquote>\n<p>系统管理员目录</p>\n</blockquote>\n<h2 id=\"etc\"><a class=\"markdownIt-Anchor\" href=\"#etc\">#</a> /etc</h2>\n<blockquote>\n<p>管理系统配置文件</p>\n</blockquote>\n<h2 id=\"usr\"><a class=\"markdownIt-Anchor\" href=\"#usr\">#</a> /usr</h2>\n<blockquote>\n<p>类似于 windows 下 Programfiles 目录，</p>\n</blockquote>\n<h2 id=\"boot\"><a class=\"markdownIt-Anchor\" href=\"#boot\">#</a> /boot</h2>\n<blockquote>\n<p>启动所使用的核心文件都会存放在这里。</p>\n</blockquote>\n<h2 id=\"proc\"><a class=\"markdownIt-Anchor\" href=\"#proc\">#</a> /proc</h2>\n<blockquote>\n<p>内存映射</p>\n</blockquote>\n<h2 id=\"srv\"><a class=\"markdownIt-Anchor\" href=\"#srv\">#</a> /srv</h2>\n<blockquote>\n<p>services 的缩写，用于存放服务启动所需要的数据</p>\n</blockquote>\n<h2 id=\"sys\"><a class=\"markdownIt-Anchor\" href=\"#sys\">#</a> /sys</h2>\n<blockquote>\n<p>系统文件</p>\n</blockquote>\n<h2 id=\"tmp\"><a class=\"markdownIt-Anchor\" href=\"#tmp\">#</a> /tmp</h2>\n<blockquote>\n<p>是 temporary (临时) 的缩写，存放临时 / 缓存文件，可当作回收站使用。</p>\n</blockquote>\n<h2 id=\"dev\"><a class=\"markdownIt-Anchor\" href=\"#dev\">#</a> /dev</h2>\n<blockquote>\n<p>device 的缩写，类似于 windows 的设备管理器。</p>\n</blockquote>\n<h2 id=\"mnt\"><a class=\"markdownIt-Anchor\" href=\"#mnt\">#</a> /mnt</h2>\n<blockquote>\n<p>linux 用于挂载可移动设备（临时）的目录。</p>\n</blockquote>\n<h2 id=\"opt\"><a class=\"markdownIt-Anchor\" href=\"#opt\">#</a> /opt</h2>\n<blockquote>\n<p>主机额外安装的软件存放的目录</p>\n</blockquote>\n<h2 id=\"var\"><a class=\"markdownIt-Anchor\" href=\"#var\">#</a> /var</h2>\n<blockquote>\n<p>存放经常被修改的目录或文件，比如日志（*.log）。</p>\n</blockquote>\n<h2 id=\"lib\"><a class=\"markdownIt-Anchor\" href=\"#lib\">#</a> /lib</h2>\n<blockquote>\n<p>存放系统基本的动态链接库。</p>\n</blockquote>\n<h1 id=\"权限数字意思详解\"><a class=\"markdownIt-Anchor\" href=\"#权限数字意思详解\">#</a> 权限数字意思详解</h1>\n<p>我们首先打开控制台在任意位置输入 ll, 就能看到当前文件夹下所有类型的信息。我们只取其中的前十位来进行结束.</p>\n<blockquote>\n<p>dr-xr-xr-x.</p>\n</blockquote>\n<h2 id=\"第一位\"><a class=\"markdownIt-Anchor\" href=\"#第一位\">#</a> 第一位</h2>\n<blockquote>\n<p>第一位表示类型</p>\n</blockquote>\n<ul>\n<li>d directory 表示目录</li>\n<li>b block 块文件</li>\n<li>c char 字符文件</li>\n<li>- file 普通文件</li>\n<li>l link 链接</li>\n<li>etc.</li>\n</ul>\n<h2 id=\"后面九位\"><a class=\"markdownIt-Anchor\" href=\"#后面九位\">#</a> 后面九位</h2>\n<blockquote>\n<p>后面九位表示了文件的类型，对应的位置如果是 <code>-</code>  则表示没有对应的权限.</p>\n</blockquote>\n<table>\n    <tbody><tr><th>\n        </th><td colspan=\"3\">前三位</td>\n        <td colspan=\"3\">中间三位</td>\n        <td colspan=\"3\">后三位</td>\n    \n    </tr><tr align=\"center\">\n        <td colspan=\"3\">创建者</td>\n        <td colspan=\"3\">同组用户</td>\n        <td colspan=\"3\">其他用户</td>\n    </tr>\n    <tr align=\"center\">\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n    </tr>\n    <tr align=\"center\">\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n    </tr>\n</tbody></table>\n<p>下面来看一个实例:</p>\n<p>如果一个文件的权限为 755, 则代表什么意思？</p>\n<p>我们只需要把 755 按位转换为二进制，对应位为 0 则表示没有这个权限.</p>\n<table>\n<thead>\n<tr>\n<th>7</th>\n<th>5</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>111</td>\n<td>101</td>\n<td>101</td>\n</tr>\n</tbody>\n</table>\n<p>用人的语言表述:</p>\n<blockquote>\n<p>对于创建者：可以读取，可以更改，可以执行.<br>\n 对于同组人员：可以读取，不能更改，可以执行.<br>\n 对于其他成员：可以读取，不能更改，可以执行.</p>\n</blockquote>\n",
            "tags": [
                "linux",
                "目录",
                "指令",
                "权限"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222828/",
            "url": "http://maxshiroi.top/ug/222828/",
            "title": "vmware安装好后配置centos网络",
            "date_published": "2022-09-19T14:28:28.000Z",
            "content_html": "<h1 id=\"更改-ifcfg-ens33-文件\"><a class=\"markdownIt-Anchor\" href=\"#更改-ifcfg-ens33-文件\">#</a> 更改 ifcfg-ens33 文件</h1>\n<blockquote>\n<p>编辑配置文件</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi /etc/sysconfig/network-scripts/ifcfg-ens33<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>需要添加 / 修改的地方</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">BOOTPROTO=static\nONBOOT=yes\nIPADDR=192.168.xx.xx\nNETMASK=255.255.255.0\nGATEWAY=192.168.204.2\nDNS1=8.8.8.8\nDNS2=114.114.114.114<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"编辑-resolvconf-文件\"><a class=\"markdownIt-Anchor\" href=\"#编辑-resolvconf-文件\">#</a> 编辑 resolv.conf 文件</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">vi /etc/resolv.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>添加如下内容</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># Generated by NetworkManager\nsearch localdomain\nnameserver 8.8.8.8<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"重启网卡\"><a class=\"markdownIt-Anchor\" href=\"#重启网卡\">#</a> 重启网卡</h1>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">service network restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n",
            "tags": [
                "linux",
                "centos",
                "network",
                "vmware"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211502/",
            "url": "http://maxshiroi.top/ug/211502/",
            "title": "解决linux下挂载其他linux硬盘的问题并创建smb局域网共享",
            "date_published": "2022-08-28T13:15:02.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"markdownIt-Anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>之前用来当作小型服务器的笔记本终于被我给淘汰了。已经关机了好久。最近买了块 <code>SATA</code>  硬盘盒，想要将这台笔记本内的数据备份出来并把硬盘用作其他用途。一切连接好后发现无法挂载，遂百度了一会查出了如下方法…</p>\n</blockquote>\n<h1 id=\"故障复现\"><a class=\"markdownIt-Anchor\" href=\"#故障复现\">#</a> 故障复现</h1>\n<ol>\n<li>连接 linux 系统，提示插入硬盘. <code>/dev</code>  分区下出现硬盘编号</li>\n<li>执行如下指令</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">cd /\nmkdir backup\nmount /dev/sdc/ /backup/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>报错</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mount: unknown filesystem type 'LVM2_member'<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h1 id=\"解决方法-debian系\"><a class=\"markdownIt-Anchor\" href=\"#解决方法-debian系\">#</a> 解决方法 //Debian 系</h1>\n<ol>\n<li>执行如下指令安装 lvm2 并扫描查看以挂载的磁盘</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt-get install lvm2\nsudo vgscan<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>发现如下字样后找到对应的 <code>xxx</code></li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">Found volume group \"xxx\" using metadata type lvm2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"3\">\n<li>设为活动状态并查看可挂载的分区</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo vgchange -ay xxx\nsudo lvs\nLV     VG   Attr   LSize  Origin Snap%  Move Log Copy%  Convert\ndata        xxx             -wi-a-              34.19G      <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>挂载对应分区</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo mount /dev/xxx/data/ /backup/<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<blockquote>\n<p>至此已经解决了问题，如果你还想把这块硬盘里的数据共享出去，比如共享给局域网内的 windows 主机，那就接着看…</p>\n</blockquote>\n<h1 id=\"设置smb\"><a class=\"markdownIt-Anchor\" href=\"#设置smb\">#</a> 设置 SMB</h1>\n<ol>\n<li>先更新一下</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt-get update &amp;&amp; sudo apt-get upgrade<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"2\">\n<li>安装 Samba 服务</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt-get install samba samba-common<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<ol start=\"3\">\n<li>配置共享目录</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 新建目录\nsudo mkdir /home/db\n// 更改目录权限\nsudo chmod 777 /home/db/ -R<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"4\">\n<li>添加账户</li>\n</ol>\n<blockquote>\n<p>要注意添加的账户需要是系统内已存在的账户</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 后面的pi为系统的用户名\nsudo smbpasswd -a pi<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<blockquote>\n<p>输入两次密码后创建成功</p>\n</blockquote>\n<ul>\n<li>创建系统账户</li>\n</ul>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// -m参数为添加/home/username目录,username更改为你要创建的用户名.\nsudo useradd -m username\n// 更改账户密码\nsudo passwd username\n// 删除用户\nsudo userdel -r username\n// 更改登录zhanghu\nsu -username<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"5\">\n<li>配置 samba</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">// 建议先备份一下\nsudo cp /etc/samba/smb.conf /etc/samba/smb.conf.bak\n// 编辑\nsudo vim /etc/samba/smb.conf<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<blockquote>\n<p>在文件最后添加</p>\n</blockquote>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">[database] \n    comment = 23333333  # 描述\n\tpath = /home/db/    # 目录\n\tpublic = yes        # 是否允许guest用户访问\n\twritable = yes      # 是否允许读写\n\tworkgroup = WORKGROUP  # 工作组<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"6\">\n<li>重启 samba 服务</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo service smbd restart<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>然后在 windows 里面映射就行了</p>\n<h1 id=\"借鉴摘抄\"><a class=\"markdownIt-Anchor\" href=\"#借鉴摘抄\">#</a> 借鉴 (摘抄)</h1>\n<p><a href=\"https://blog.csdn.net/mvp_Dawn/article/details/105847485\" title=\"ubuntu 20.04 安装配置Samba服务，Windows 和 linux协同工作\">ubuntu 20.04 安装配置 Samba 服务，Windows 和 linux 协同工作</a></p>\n",
            "tags": [
                "linux",
                "运维",
                "smb"
            ]
        }
    ]
}
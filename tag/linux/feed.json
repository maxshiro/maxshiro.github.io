{
    "version": "https://jsonfeed.org/version/1",
    "title": "MAXshiro • All posts by \"linux\" tag",
    "description": "Discover and Record the world.",
    "home_page_url": "http://maxshiroi.top",
    "items": [
        {
            "id": "http://maxshiroi.top/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/215254/",
            "url": "http://maxshiroi.top/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/215254/",
            "title": "常用linux应急响应命令整理",
            "date_published": "2023-07-02T13:52:54.000Z",
            "content_html": "<h2 id=\"常用命令\"><a class=\"anchor\" href=\"#常用命令\">#</a> 常用命令</h2>\n<h3 id=\"ps-auxf\"><a class=\"anchor\" href=\"#ps-auxf\">#</a> ps -auxf</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -auxf</span><br></pre></td></tr></tbody></table></figure>\n<p>此命令用于显示系统中当前运行的进程。 <code>-a</code>  选项显示所有用户的进程， <code>-u</code>  选项显示进程的详细信息， <code>-x</code>  选项显示没有控制终端的进程， <code>-f</code>  选项以全格式显示进程信息。</p>\n<h3 id=\"netstat-antlp-more\"><a class=\"anchor\" href=\"#netstat-antlp-more\">#</a> netstat -antlp | more</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -antlp | more</span><br></pre></td></tr></tbody></table></figure>\n<p>此命令用于查看系统中的网络连接和监听端口。 <code>-a</code>  选项显示所有连接和监听端口， <code>-n</code>  选项以数字形式显示地址和端口， <code>-t</code>  选项只显示 TCP 连接， <code>-l</code>  选项只显示监听端口， <code>-p</code>  选项显示与进程关联的端口， <code>| more</code>  用于分页显示输出结果。</p>\n<h3 id=\"ls-alt-procpid号\"><a class=\"anchor\" href=\"#ls-alt-procpid号\">#</a> ls -alt /proc/pid 号</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -alt /proc/pid号</span><br></pre></td></tr></tbody></table></figure>\n<p>此命令用于查看指定进程的详细信息。 <code>ls</code>  命令用于列出文件和目录， <code>-a</code>  选项显示所有文件和目录（包括隐藏文件）， <code>-l</code>  选项以长格式显示详细信息， <code>-t</code>  选项按修改时间排序， <code>/proc</code>  是一个特殊目录，包含系统中运行的进程的信息， <code>pid号</code> 是要查看的进程的进程 ID。</p>\n<h3 id=\"ls-alh-procpid\"><a class=\"anchor\" href=\"#ls-alh-procpid\">#</a> ls -alh /proc/pid</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -alh /proc/pid</span><br></pre></td></tr></tbody></table></figure>\n<p>此命令用于查看指定进程的详细信息。 <code>-a</code>  选项显示所有文件和目录（包括隐藏文件）， <code>-l</code>  选项以长格式显示详细信息， <code>-h</code>  选项以人类可读的方式显示文件大小， <code>/proc</code>  是一个特殊目录，包含系统中运行的进程的信息， <code>pid</code>  是要查看的进程的进程 ID。</p>\n<h3 id=\"lsof-i端口号-p-u\"><a class=\"anchor\" href=\"#lsof-i端口号-p-u\">#</a> lsof -i: 端口号 /-p/-u</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lsof -i:端口号 /-p /-u</span><br></pre></td></tr></tbody></table></figure>\n<p>此命令用于查看指定端口的相关进程或指定用户打开的文件。 <code>lsof</code>  命令用于列出打开的文件， <code>-i:端口号</code> 选项显示指定端口相关的进程， <code>/-p</code>  选项显示指定进程打开的文件， <code>/-u</code>  选项显示指定用户打开的文件。</p>\n<h3 id=\"挖矿病毒常利用手段\"><a class=\"anchor\" href=\"#挖矿病毒常利用手段\">#</a> 挖矿病毒常利用手段</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chattr +i</span><br><span class=\"line\">lsattr</span><br></pre></td></tr></tbody></table></figure>\n<ul>\n<li>\n<p><code>chattr +i</code> ：此命令用于改变文件的属性。 <code>chattr</code>  命令用于改变文件的扩展属性， <code>+i</code>  选项设置文件为不可修改属性，防止文件被删除、重命名或修改。</p>\n</li>\n<li>\n<p><code>lsattr</code> ：此命令用于显示文件的扩展属性。 <code>lsattr</code>  命令用于</p>\n</li>\n</ul>\n<p>列出文件的扩展属性，包括文件的可修改性、不可修改性、是否加密等。</p>\n<h3 id=\"需要注意的几个目录\"><a class=\"anchor\" href=\"#需要注意的几个目录\">#</a> 需要注意的几个目录</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/passwd</span><br><span class=\"line\">/etc/rc.local</span><br><span class=\"line\">/root/.ssh</span><br><span class=\"line\">/tmp</span><br><span class=\"line\">/etc/init.d</span><br><span class=\"line\">/etc/hosts</span><br></pre></td></tr></tbody></table></figure>\n<p>此路径对应着系统启动时执行的脚本文件。 <code>/etc/rc.local</code>  文件包含在系统启动过程中自动执行的命令，可以用于配置系统启动时需要运行的自定义脚本。</p>\n<h3 id=\"ls-alt-etcprofiledsh\"><a class=\"anchor\" href=\"#ls-alt-etcprofiledsh\">#</a> ls -alt /etc/profile.d/*.sh</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -alt /etc/profile.d/*.sh</span><br></pre></td></tr></tbody></table></figure>\n<p>此命令用于列出 <code>/etc/profile.d/</code>  目录下以 <code>.sh</code>  为后缀的脚本文件，并按照修改时间排序显示详细信息。 <code>ls</code>  命令用于列出文件和目录， <code>-a</code>  选项显示所有文件和目录（包括隐藏文件）， <code>-l</code>  选项以长格式显示详细信息， <code>-t</code>  选项按修改时间排序， <code>/etc/profile.d/*.sh</code>  表示匹配 <code>/etc/profile.d/</code>  目录下以 <code>.sh</code>  为后缀的所有文件。</p>\n<h3 id=\"cat-etcpasswd-cut-f-1-d-xargs-l-crontab-l-u\"><a class=\"anchor\" href=\"#cat-etcpasswd-cut-f-1-d-xargs-l-crontab-l-u\">#</a> cat /etc/passwd | cut -f 1 -d : | xargs -l {} crontab -l -u {}</h3>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /etc/passwd | cut -f 1 -d : | xargs -l {} crontab -l -u {}</span><br></pre></td></tr></tbody></table></figure>\n<p>此命令用于查看系统中所有用户的定时任务。 <code>cat</code>  命令用于显示文件内容， <code>/etc/passwd</code>  是一个包含系统用户信息的文件， <code>cut</code>  命令用于提取指定字段， <code>-f 1</code>  选项指定提取第一个字段（用户名）， <code>-d :</code>  选项指定字段的分隔符为冒号， <code>xargs</code>  命令用于将前面的输出作为参数传递给后面的命令， <code>-l</code>  选项表示逐行处理， <code>{}</code>  表示参数的占位符， <code>crontab -l -u {}</code>  用于查看指定用户的定时任务列表。</p>\n<h2 id=\"软件包校验\"><a class=\"anchor\" href=\"#软件包校验\">#</a> 软件包校验</h2>\n<ul>\n<li>\n<p><code>rpm -Va</code> ：校验 RPM 软件包的完整性和一致性。如果输出中出现以下标记，表示不一致：s (size)、m (modify)、5 (MD5)、d (device)、l (link)、u (user)、g (group)、t (time)。特别需要注意的是 SM5 标记。</p>\n</li>\n<li>\n<p><code>dpkg -verify</code> ：校验 Debian 软件包的完整性和一致性。</p>\n</li>\n</ul>\n<h2 id=\"文件操作\"><a class=\"anchor\" href=\"#文件操作\">#</a> 文件操作</h2>\n<ul>\n<li>\n<p><code>stat</code> ：显示文件或文件系统的详细信息。</p>\n</li>\n<li>\n<p><code>find / -mtime 0 -name *.*</code> ：查找指定天数内更改过的文件。</p>\n</li>\n<li>\n<p><code>find / -ctime 0 -name *.*</code> ：查找新增的文件。</p>\n</li>\n<li>\n<p><code>diff -c</code> ：比较文件的差异并生成上下文格式的差异。</p>\n</li>\n</ul>\n<h2 id=\"查找隐藏进程\"><a class=\"anchor\" href=\"#查找隐藏进程\">#</a> 查找隐藏进程</h2>\n<ul>\n<li>\n<pre><code>ps -ef | awk '{print $2}' | sort -n | uniq &gt; ps.p\nls /proc | sort -n | uniq &gt; proc.p\n</code></pre>\n<p>查找隐藏进程的命令。</p>\n</li>\n</ul>\n<h2 id=\"ssh-爆破\"><a class=\"anchor\" href=\"#ssh-爆破\">#</a> SSH 爆破</h2>\n<ul>\n<li><code>last/lastb/lastlog</code> ：查看登录记录。</li>\n</ul>\n<h2 id=\"日志\"><a class=\"anchor\" href=\"#日志\">#</a> 日志</h2>\n<ul>\n<li>\n<p><code>/var/log/secure</code> ：安全日志文件。</p>\n<ul>\n<li>\n<p><code>awk '/sshd.*Failed/{print $(NF -3)}' /var/log/secure | sort | uniq -c | sort -nr</code> ：查找每个 IP 登录失败的次数。</p>\n</li>\n<li>\n<p>每条记录的格式：时间 - 主机名 - 服务名称 - 是否成功 - 用户 - 地址</p>\n</li>\n<li>\n<p><code>sudo grep 'sshd.*Failed.*from &lt;IP_ADDRESS&gt;' /var/log/secure | awk '{print $1,$2,$3,$9,$11}'</code> ：查找特定 IP 失败的次数。</p>\n</li>\n<li>\n<p><code>sudo grep 'sshd.*Accepted.*from &lt;IP_ADDRESS&gt;' /var/log/secure | awk '{print $1,$2,$3,$9,$11}'</code> ：查找特定 IP 成功的次数。</p>\n</li>\n</ul>\n</li>\n<li>\n<p><code>/var/log/cron</code> ：定时任务日志文件。</p>\n</li>\n<li>\n<p><code>/var/log/btmp</code> ：登录失败日志文件。</p>\n</li>\n<li>\n<p><code>/var/log/wtmp</code> ：登录记录日志文件。</p>\n</li>\n</ul>\n<h2 id=\"工具集\"><a class=\"anchor\" href=\"#工具集\">#</a> 工具集</h2>\n<ul>\n<li>\n<p><code>busybox</code> ：busybox 是一个包含多个常用 Linux 命令精简版本的工具集。它可以在嵌入式系统或资源受限的环境中使用，将多个命令集成到一个可执行文件中，以节省空间并提高效率。它可以作为替代系统中关键命令的解决方案，因为它是一个独立的可执行文件，不依赖于系统中的命令。</p>\n<ul>\n<li><code>./busybox netstat -antpl</code> ：使用 busybox 的 netstat 命令显示网络连接和监听端口的信息。</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"隐藏进程检测工具\"><a class=\"anchor\" href=\"#隐藏进程检测工具\">#</a> 隐藏进程检测工具</h2>\n<ul>\n<li><code>unhide</code> ：用于探测隐藏进程的工具。</li>\n</ul>\n<h2 id=\"rootkit-检测工具\"><a class=\"anchor\" href=\"#rootkit-检测工具\">#</a> Rootkit 检测工具</h2>\n<ul>\n<li>\n<p><code>chkrootkit -n</code> ：用于探测 rootkit 的工具。 <code>-n</code>  选项表示以非交互模式运行。</p>\n</li>\n<li>\n<p><code>rkhunter</code> ：另一个用于探测 rootkit 的工具。</p>\n</li>\n</ul>\n<h2 id=\"恶意软件扫描工具\"><a class=\"anchor\" href=\"#恶意软件扫描工具\">#</a> 恶意软件扫描工具</h2>\n<ul>\n<li><code>clamav</code> ：用于扫描和检测恶意软件的工具。</li>\n</ul>\n<h2 id=\"webshell-查杀工具\"><a class=\"anchor\" href=\"#webshell-查杀工具\">#</a> Webshell 查杀工具</h2>\n<ul>\n<li><code>www.shellpub.com</code> ：河马 webshell 查杀工具。</li>\n</ul>\n<h2 id=\"内存马查杀工具\"><a class=\"anchor\" href=\"#内存马查杀工具\">#</a> 内存马查杀工具</h2>\n<ul>\n<li><code>java-memshell-scanner</code> ：用于查杀内存马（内存中的恶意代码）的工具。</li>\n</ul>\n",
            "tags": [
                "linux",
                "security",
                "应急响应",
                "hvv",
                "tools",
                "busybox",
                "ps"
            ]
        },
        {
            "id": "http://maxshiroi.top/linux/webshell/225933/",
            "url": "http://maxshiroi.top/linux/webshell/225933/",
            "title": "在linux中安装Antsword",
            "date_published": "2023-07-01T14:59:33.000Z",
            "content_html": "<h2 id=\"介绍\"><a class=\"anchor\" href=\"#介绍\">#</a> 介绍</h2>\n<p>在网络安全领域，AntSword 是一款流行的渗透测试和漏洞利用框架，它为安全研究人员和渗透测试人员提供了一个功能强大的平台来评估和测试网络安全。通过使用 AntSword，您可以执行各种网络攻击和漏洞利用，并获得对目标系统的远程访问权限。</p>\n<h2 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h2>\n<blockquote>\n<p>快速</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/antoor/antSword.git</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> u+x ./antSword</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ./antSword</span><br><span class=\"line\">wget https://ghproxy.com/https://github.com/AntSwordProject/AntSword-Loader/releases/download/4.0.3/AntSword-Loader-v4.0.3-linux-x64.zip</span><br><span class=\"line\"><span class=\"comment\"># 这个wget推荐自己到下面的链接里找自己合适的loader。</span></span><br><span class=\"line\">unzip AntSword-Loader-v4.0.3-linux-x64.zip</span><br><span class=\"line\">./AntSword</span><br></pre></td></tr></tbody></table></figure>\n<ol>\n<li>\n<p><code>git clone https://github.com/antoor/antSword.git</code> ：这行代码用于克隆名为 \"antSword\" 的 GitHub 仓库到当前目录。通过这个命令，您可以获取 AntSword 框架的源代码。</p>\n</li>\n<li>\n<p><code>chmod u+x ./antSword</code> ：这行代码给  <code>antSword</code>  文件添加了可执行权限。这是必要的，以便能够在后续的步骤中运行它。</p>\n</li>\n<li>\n<p><code>cd ./antSword</code> ：这行代码将当前工作目录更改为  <code>antSword</code>  文件夹。在接下来的步骤中，我们将在该文件夹中执行其他命令。</p>\n</li>\n<li>\n<p><code>wget https://ghproxy.com/https://github.com/AntSwordProject/AntSword-Loader/releases/download/4.0.3/AntSword-Loader-v4.0.3-linux-x64.zip</code> ：这行代码使用 wget 命令从 GitHub 下载 AntSword-Loader 的适用于 Linux 系统的压缩包。AntSword-Loader 是 AntSword 框架的一个组件，它提供了一些额外的功能和扩展。</p>\n</li>\n<li>\n<p><code>unzip AntSword-Loader-v4.0.3-linux-x64.zip</code> ：这行代码用于解压刚刚下载的 AntSword-Loader 压缩包。</p>\n</li>\n<li>\n<p><code>./AntSword</code> ：这行代码启动 AntSword 应用程序，让您可以开始使用该框架。</p>\n</li>\n</ol>\n<h2 id=\"注意事项或建议\"><a class=\"anchor\" href=\"#注意事项或建议\">#</a> 注意事项或建议</h2>\n<p>在使用这段代码之前，请确保您的系统满足以下要求：</p>\n<ul>\n<li>Linux 操作系统：该代码段适用于 Linux 系统。如果您使用的是其他操作系统，可能需要相应的修改。</li>\n<li>权限：确保您对当前目录和文件具有适当的读写和执行权限。</li>\n<li>依赖项：AntSword 可能依赖其他软件包或库。请根据官方文档或 GitHub 存储库提供的说明，安装和配置所有必需的依赖项。</li>\n</ul>\n<p>建议您在使用任何渗透测试工具时，遵循合法和道德的准则，并仅在合法的环境中进行测试。滥用这些工具可能会导致违法行为和对他人造成损害。</p>\n<h2 id=\"相关资源\"><a class=\"anchor\" href=\"#相关资源\">#</a> 相关资源</h2>\n<ul>\n<li>AntSword 官方文档：您可以在 AntSword 的官方文档中找到更多关于安装、配置和使用 AntSword 的信息。链接：<a href=\"https://www.antsword.org/docs/\">https://www.antsword.org/docs/</a></li>\n<li>AntSword GitHub 存储库：您可以在 AntSword 的 GitHub 存储库中找到源代码、问题跟踪和社区讨论。链接：<a href=\"https://github.com/AntSwordProject/AntSword\">https://github.com/AntSwordProject/AntSword</a></li>\n</ul>\n",
            "tags": [
                "linux",
                "web",
                "security",
                "webshell"
            ]
        },
        {
            "id": "http://maxshiroi.top/linux/docker/203008/",
            "url": "http://maxshiroi.top/linux/docker/203008/",
            "title": "在docker中设置并安装AWVS和Nessus漏扫程序",
            "date_published": "2023-06-12T12:30:08.000Z",
            "content_html": "<p><strong>注意在访问的时候一定要用 https 访问！！！</strong></p>\n<h1 id=\"awvs-crack-docker\"><a class=\"anchor\" href=\"#awvs-crack-docker\">#</a> Awvs Crack Docker</h1>\n<blockquote>\n<p>docker link:<a href=\"https://hub.docker.com/r/secfa/docker-awvs\">secfa/docker-awvs</a></p>\n</blockquote>\n<ul>\n<li>Usage:</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker pull secfa/docker-awvs</span><br><span class=\"line\">docker run -it -d -p 13443:3443 --cap-add LINUX_IMMUTABLE secfa/docker-awvs</span><br></pre></td></tr></tbody></table></figure>\n<p>Then visit https://YOUR_IP:13443/</p>\n<ul>\n<li>INFO:</li>\n</ul>\n<blockquote>\n<p><a href=\"mailto:Username:admin@admin.com\">Username:admin@admin.com</a><br>\npassword:Admin123<br>\nAWVS Version:230222085</p>\n</blockquote>\n<h1 id=\"nessus-crack\"><a class=\"anchor\" href=\"#nessus-crack\">#</a> nessus crack</h1>\n<blockquote>\n<p>reference link:<a href=\"https://blog.csdn.net/WJ_11_13/article/details/127426899\">nessus</a></p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 下载并安装容器</span><br><span class=\"line\">root@LAPTOP-7O53L0P8:~<span class=\"comment\"># docker run -itd --name=ramisec_nessus -p 8834:8834 ramisec/nessus</span></span><br><span class=\"line\">bac3f67995bae798420e3335327b364a62db5f6bbf7b5e1b7b9ce309cd53b60d</span><br><span class=\"line\">// 查看容器ID</span><br><span class=\"line\">root@LAPTOP-7O53L0P8:~<span class=\"comment\"># docker ps</span></span><br><span class=\"line\">CONTAINER ID   IMAGE               COMMAND                  CREATED          STATUS             PORTS                                         NAMES</span><br><span class=\"line\">bac3f67995ba   ramisec/nessus      <span class=\"string\">\"/nessus/run.sh start\"</span>   21 seconds ago   Up 19 seconds      0.0.0.0:8834-&gt;8834/tcp, :::8834-&gt;8834/tcp     ramisec_nessus</span><br><span class=\"line\">ed5ab230e247   secfa/docker-awvs   <span class=\"string\">\"/bin/sh /awvs_start…\"</span>   9 hours ago      Up About an hour   0.0.0.0:13443-&gt;3443/tcp, :::13443-&gt;3443/tcp   awvs</span><br><span class=\"line\">// 进入容器内部进行破解更新</span><br><span class=\"line\">root@LAPTOP-7O53L0P8:~<span class=\"comment\"># docker exec -it bac3f67995ba /bin/bash</span></span><br><span class=\"line\">root@bac3f67995ba:/nessus<span class=\"comment\"># ls</span></span><br><span class=\"line\">run.sh  start.sh  update.sh</span><br><span class=\"line\">root@bac3f67995ba:/nessus<span class=\"comment\"># ./update.sh // 这里省略输出</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">// 更改管理员密码</span><br><span class=\"line\">root@bac3f67995ba:/nessus<span class=\"comment\"># cd /opt/nessus/sbin/</span></span><br><span class=\"line\">root@bac3f67995ba:/opt/nessus/sbin<span class=\"comment\"># ./nessuscli chpasswd admin</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"image\"><a class=\"anchor\" href=\"#image\">#</a> Image</h2>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/dockerinstallawvsnessus/2023-06-12-20-51-07.png\" fancybox=\"true\"></div></div>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/dockerinstallawvsnessus/2023-06-12-20-51-37.png\" fancybox=\"true\"></div></div>\n<h1 id=\"reference\"><a class=\"anchor\" href=\"#reference\">#</a> Reference</h1>\n<p><a href=\"https://blog.csdn.net/WJ_11_13/article/details/127426899\">https://blog.csdn.net/WJ_11_13/article/details/127426899</a><br>\n<a href=\"https://hub.docker.com/r/secfa/docker-awvs\">https://hub.docker.com/r/secfa/docker-awvs</a></p>\n",
            "tags": [
                "linux",
                "docker",
                "nessus",
                "awvs"
            ]
        },
        {
            "id": "http://maxshiroi.top/linux/ubuntu/112140/",
            "url": "http://maxshiroi.top/linux/ubuntu/112140/",
            "title": "在MariaDB中设置主从复制",
            "date_published": "2023-05-23T03:21:40.000Z",
            "content_html": "<p>本文将介绍如何在 MariaDB 中设置主从复制。主从复制是一种数据库复制技术，其中一个数据库服务器（称为 “主服务器”）将其更改传递给一个或多个其他数据库服务器（称为 “从服务器”）。主从复制可用于实现高可用性、负载均衡和数据备份等目的。</p>\n<h1 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h1>\n<h2 id=\"主机\"><a class=\"anchor\" href=\"#主机\">#</a> 主机</h2>\n<ol>\n<li>\n<p>使用以下命令登录到 MariaDB：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -uroot -p</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>创建一个新的数据库并在其中创建一个新的表：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create database db1;</span><br><span class=\"line\">use db1;</span><br><span class=\"line\">create table test1(id int,name char);</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>退出 MariaDB 并停止 MariaDB 服务器：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exit;</span><br><span class=\"line\">systemctl stop mariadb</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>使用编辑器打开 MariaDB 的配置文件。在 CentOS 中，配置文件位于  <code>/etc/my.cnf</code> ，而在 Ubuntu 中，配置文件位于  <code>/etc/mysql/mariadb.conf.d/50-server.cnf</code> 。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/my.cnf   <span class=\"comment\"># CentOS</span></span><br><span class=\"line\">vi /etc/mysql/mariadb.conf.d/50-server.cnf   <span class=\"comment\"># Ubuntu</span></span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>在配置文件中添加以下内容：</p>\n<figure class=\"highlight vim\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\"><span class=\"built_in\">log</span>-bin=/var/<span class=\"built_in\">log</span>/mysql/mysql-bin.<span class=\"built_in\">log</span></span><br><span class=\"line\">server-id=<span class=\"number\">1</span></span><br><span class=\"line\">binlog-<span class=\"keyword\">do</span>-db=db1</span><br><span class=\"line\">bind-address=<span class=\"number\">0.0</span>.<span class=\"number\">0.0</span></span><br></pre></td></tr></tbody></table></figure>\n<p>上述配置文件中的关键配置包括：</p>\n<ul>\n<li><code>log-bin</code> ：指定二进制日志文件的路径和名称。二进制日志文件包含主服务器上进行的所有更改。</li>\n<li><code>server-id</code> ：指定主服务器的唯一标识符。每个服务器必须具有唯一的标识符。</li>\n<li><code>binlog-do-db</code> ：指定要在二进制日志中记录更改的数据库名称。</li>\n<li><code>bind-address</code> ：指定要在哪个 IP 地址上监听连接请求。在本例中，我们将其设置为  <code>0.0.0.0</code> ，以允许从任何 IP 地址连接到主服务器。</li>\n</ul>\n</li>\n<li>\n<p>创建日志文件目录并将其所有权分配给 MySQL 用户：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /var/log/</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> mysql</span><br><span class=\"line\"><span class=\"built_in\">cd</span> mysql/</span><br><span class=\"line\"><span class=\"built_in\">touch</span> mysql-bin.log</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ../</span><br><span class=\"line\"><span class=\"built_in\">chown</span> -R mysql:mysql ./mysql/</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -ld /var/log/mysql</span><br><span class=\"line\"><span class=\"built_in\">ls</span> -ld /var/log/mysql/mysql-bin.log</span><br></pre></td></tr></tbody></table></figure>\n<p>上述命令将创建一个名为  <code>mysql-bin.log</code>  的空日志文件，并将其所有权分配给 MySQL 用户。</p>\n</li>\n<li>\n<p>启动 MariaDB 服务器并重新登录到 MariaDB：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mariadb</span><br><span class=\"line\">mysql -uroot -p</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>授予从服务器复制权限：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant replication slave on *.* to slave@'%' identified by '123456';</span><br><span class=\"line\">exit;</span><br></pre></td></tr></tbody></table></figure>\n<p>上述命令将创建一个名为  <code>slave</code>  的用户，并为其授予复制权限。</p>\n</li>\n<li>\n<p>生成当前数据库的备份：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mariadb</span><br><span class=\"line\">mysqldump -uroot -p -A &gt; all1.sql</span><br><span class=\"line\">scp all1.sql 10.1.0.16:/root</span><br></pre></td></tr></tbody></table></figure>\n<p>上述命令将在本地生成一个名为  <code>all1.sql</code>  的数据库备份，并将其复制到远程服务器  <code>10.1.0.16</code>  的  <code>/root</code>  目录中。</p>\n</li>\n</ol>\n<h2 id=\"从机\"><a class=\"anchor\" href=\"#从机\">#</a> 从机</h2>\n<ol>\n<li>\n<p>使用以下命令登录到从服务器：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -h 10.1.0.20 -uslave -p123456</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>将备份文件还原到从服务器中的 MariaDB：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /root</span><br><span class=\"line\">mysql -uroot -p &lt; all1.sql</span><br><span class=\"line\">mysql -uroot -p</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>确认已成功复制数据库：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">show databases;</span><br><span class=\"line\">exit;</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>停止从服务器上的 MariaDB 并编辑其配置文件：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl stop mariadb</span><br><span class=\"line\">vi /etc/my.cnf   <span class=\"comment\"># CentOS</span></span><br><span class=\"line\">vi /etc/mysql/mariadb.conf.d/50-server.cnf   <span class=\"comment\"># Ubuntu</span></span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>在配置文件中添加以下内容：</p>\n<figure class=\"highlight vim\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysqld]</span><br><span class=\"line\">server-id=<span class=\"number\">2</span></span><br></pre></td></tr></tbody></table></figure>\n<p>上述配置文件中的关键配置是  <code>server-id</code> ，它指定从服务器的唯一标识符。</p>\n</li>\n<li>\n<p>启动从服务器上的 MariaDB：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start mariadb</span><br><span class=\"line\">mysql -uroot -p123456</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>\n<p>在从服务器上配置主从复制：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">change master to master_host='10.1.0.20',master_user='slave',master_password='123456',master_port=3306,master_log_file='mysql-bin.000003',master_log_pos=328,master_connect_retry=10;</span><br><span class=\"line\">startslave;</span><br><span class=\"line\">show slave status \\G;</span><br></pre></td></tr></tbody></table></figure>\n<p>上述命令将从服务器配置为将来自主服务器的更改复制到本地 MariaDB 上。 <code>change master to</code>  命令中的参数包括：</p>\n<ul>\n<li><code>master_host</code> ：指定主服务器的 IP 地址或主机名。</li>\n<li><code>master_user</code> ：指定用于连接到主服务器的用户名。</li>\n<li><code>master_password</code> ：指定用于连接到主服务器的密码。</li>\n<li><code>master_port</code> ：指定主服务器的端口号。</li>\n<li><code>master_log_file</code> ：指定主服务器当前正在使用的二进制日志文件的名称。</li>\n<li><code>master_log_pos</code> ：指定主服务器当前正在使用的二进制日志文件中的位置。</li>\n<li><code>master_connect_retry</code> ：指定从服务器在与主服务器断开连接后尝试重新连接的次数。</li>\n</ul>\n<p>``start slave; <code> 命令将从服务器上的复制进程启动。</code> show slave status \\G;` 命令将显示有关从服务器上的复制进程的详细信息。</p>\n<p>至此，主从复制已经设置完成。主服务器上的更改将自动传播到从服务器上。</p>\n</li>\n</ol>\n",
            "tags": [
                "linux",
                "ubuntu",
                "mariadb"
            ]
        },
        {
            "id": "http://maxshiroi.top/linux/web/100353/",
            "url": "http://maxshiroi.top/linux/web/100353/",
            "title": "dvwa安装指引",
            "date_published": "2023-03-07T02:03:53.000Z",
            "content_html": "<h2 id=\"多说无用建议直接docker一步到位\"><a class=\"anchor\" href=\"#多说无用建议直接docker一步到位\">#</a> 多说无用，建议直接 docker 一步到位。</h2>\n<h1 id=\"启动nginx\"><a class=\"anchor\" href=\"#启动nginx\">#</a> 启动 nginx</h1>\n<h2 id=\"service-nginx-startcd-varwwwhtmlvim-hellohtml\"><a class=\"anchor\" href=\"#service-nginx-startcd-varwwwhtmlvim-hellohtml\">#</a> service nginx start<br>\ncd /var/www/html<br>\nvim hello.html</h2>\n<p>Helloworld!<br>\n// 访问虚拟机地址。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@fedora axro]<span class=\"comment\"># cd /usr/share/nginx/html/</span></span><br><span class=\"line\">[root@fedora html]<span class=\"comment\"># git clone https://github.com/digininja/DVWA.git</span></span><br><span class=\"line\">[root@fedora html]<span class=\"comment\"># cd DVWA/config</span></span><br><span class=\"line\">[root@fedora config]<span class=\"comment\"># cp config.inc.php.dist config.inc.php</span></span><br><span class=\"line\">[root@fedora config]<span class=\"comment\"># vi config.inc.php</span></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\">create database DVWA;</span><br></pre></td></tr></tbody></table></figure>\n<p>mysql&gt; create database dvwa;<br>\nQuery OK, 1 row affected (0.00 sec)</p>\n<p>mysql&gt; create user dvwa@localhost identified by 'p@ssw0rd';<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; grant all on dvwa.* to dvwa@localhost;<br>\nQuery OK, 0 rows affected (0.01 sec)</p>\n<p>mysql&gt; flush privileges;<br>\nQuery OK, 0 rows affected (0.00 sec)</p>\n",
            "tags": [
                "linux",
                "mysql",
                "kali",
                "dvwa",
                "fedora"
            ]
        },
        {
            "id": "http://maxshiroi.top/linux/arch/140206/",
            "url": "http://maxshiroi.top/linux/arch/140206/",
            "title": "Arch安装使用指导",
            "date_published": "2023-02-24T06:02:06.000Z",
            "content_html": "<h1 id=\"前期准备\"><a class=\"anchor\" href=\"#前期准备\">#</a> 前期准备</h1>\n<p>在创建好虚拟机后，需要打开虚拟机设置，将  <code>firmware type</code>  更改为  <code>efi</code> ，以便后续操作。</p>\n<h1 id=\"检查网络设置和-ssh-连接\"><a class=\"anchor\" href=\"#检查网络设置和-ssh-连接\">#</a> 检查网络设置和 SSH 连接</h1>\n<p>以下是检查网络设置和 SSH 连接的操作步骤：</p>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 检查系统启动方式</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> /sys/firmware/efi/efivars</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 检查网络是否通畅</span></span><br><span class=\"line\">ping baidu.com</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 更改密码并远程连接</span></span><br><span class=\"line\">passwd</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 查看 IP 地址</span></span><br><span class=\"line\">ip addr</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"使用ssh连接\"><a class=\"anchor\" href=\"#使用ssh连接\">#</a> 使用 ssh 连接</h1>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -p <span class=\"number\">22</span> root@<span class=\"number\">192</span>.<span class=\"number\">168</span>.<span class=\"number\">204</span>.<span class=\"number\">130</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"分区挂载\"><a class=\"anchor\" href=\"#分区挂载\">#</a> 分区挂载</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 查看已存在的硬盘</span></span><br><span class=\"line\">lsblk</span><br><span class=\"line\"><span class=\"comment\"># 使用cfdisk创建分区</span></span><br><span class=\"line\">cfdisk /dev/nvme0n1</span><br><span class=\"line\"><span class=\"comment\"># 创建如下三个</span></span><br><span class=\"line\">Device           Start      End  Sectors  Size Type</span><br><span class=\"line\">/dev/nvme0n1p1    2048  1026047  1024000  500M EFI System</span><br><span class=\"line\">/dev/nvme0n1p2 1026048  9414655  8388608    4G Linux swap</span><br><span class=\"line\">/dev/nvme0n1p3 9414656 83884031 74469376 35.5G Linux filesystem</span><br><span class=\"line\"><span class=\"comment\"># 分别格式化</span></span><br><span class=\"line\"><span class=\"comment\"># 格式化EFI启动分区为fat32格式</span></span><br><span class=\"line\">mkfs.fat -F32 /dev/nvme0n1p1</span><br><span class=\"line\"><span class=\"comment\"># 格式化根目录为xfs文件系统</span></span><br><span class=\"line\">mkfs.xfs -f /dev/nvme0n1p3</span><br><span class=\"line\"><span class=\"comment\"># 格式化swap文件系统</span></span><br><span class=\"line\">mkswap /dev/nvme0n1p2</span><br><span class=\"line\">swapon /dev/nvme0n1p2</span><br><span class=\"line\"><span class=\"comment\"># 挂载</span></span><br><span class=\"line\"><span class=\"comment\"># 挂载根分区到mnt</span></span><br><span class=\"line\">mount /dev/nvme0n1p3 /mnt</span><br><span class=\"line\"><span class=\"comment\"># 新建EFI分区并挂载</span></span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> -p /mnt/boot/EFI</span><br><span class=\"line\">mount /dev/nvme0n1p1 /mnt/boot/EFI</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 使用下面命令下载并安装系统</span></span><br><span class=\"line\">pacstrap -i /mnt base base-devel vim linux linux-firmware</span><br><span class=\"line\"><span class=\"comment\"># 生成 fstab 文件并检查</span></span><br><span class=\"line\">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span><br><span class=\"line\"><span class=\"built_in\">cat</span> /mnt/etc/fstab</span><br><span class=\"line\"><span class=\"comment\"># 切换系统目录</span></span><br><span class=\"line\">arch-chroot /mnt</span><br><span class=\"line\"><span class=\"comment\"># 更改时区，设置UTC</span></span><br><span class=\"line\"><span class=\"built_in\">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class=\"line\">hwclock --systohc --utc</span><br><span class=\"line\"><span class=\"comment\"># 更改local并生成locale信息</span></span><br><span class=\"line\">vim /etc/locale.gen</span><br><span class=\"line\"><span class=\"comment\"># 找到合适的地区去掉前面的#</span></span><br><span class=\"line\">locale-gen</span><br><span class=\"line\"><span class=\"comment\"># 将语言信息写入locale.conf</span></span><br><span class=\"line\"><span class=\"built_in\">echo</span> LANG=en_GB.UTF-8 &gt; /etc/locale.conf</span><br><span class=\"line\"><span class=\"comment\"># 配置网络</span></span><br><span class=\"line\">vim /etc/hostname</span><br><span class=\"line\">----</span><br><span class=\"line\">archlinux</span><br><span class=\"line\"><span class=\"comment\"># 直接写入自己的主机名</span></span><br><span class=\"line\">vim /etc/hosts</span><br><span class=\"line\">----</span><br><span class=\"line\">127.0.0.1   localhost</span><br><span class=\"line\">::1         localhost</span><br><span class=\"line\">127.0.1.1   archlinux.localdomain archlinux</span><br><span class=\"line\"><span class=\"comment\"># archlinux就是自己的主机名</span></span><br><span class=\"line\"><span class=\"comment\"># 安装相关包</span></span><br><span class=\"line\">pacman -S grub efibootmgr efivar networkmanager intel-ucode</span><br><span class=\"line\"><span class=\"comment\"># 配置grub</span></span><br><span class=\"line\">grub-install /dev/sda</span><br><span class=\"line\">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class=\"line\"><span class=\"comment\"># 激活并启用NetworkManager</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> NetworkManager</span><br><span class=\"line\"><span class=\"comment\"># 更改密码</span></span><br><span class=\"line\">passwd</span><br><span class=\"line\"><span class=\"comment\"># 卸载挂载，重启</span></span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br><span class=\"line\">umount /mnt/boot/EFI</span><br><span class=\"line\">umount /mnt</span><br><span class=\"line\">reboot </span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装后\"><a class=\"anchor\" href=\"#安装后\">#</a> 安装后</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 配置网络，再次联网</span></span><br><span class=\"line\"><span class=\"comment\"># 输入nmtui 选择 “Activate a connection” 回车进入，选择你需要的网络，连接后back返回即可</span></span><br><span class=\"line\"><span class=\"comment\"># 安装 openssh</span></span><br><span class=\"line\">pacman -S openssh</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> sshd</span><br><span class=\"line\">systemctl start sshd</span><br><span class=\"line\">systemctl status sshd</span><br><span class=\"line\"><span class=\"comment\"># 查看ip</span></span><br><span class=\"line\">ip -brief address / addr</span><br><span class=\"line\"><span class=\"comment\"># 修改ssh配置允许root连接</span></span><br><span class=\"line\">vim /etc/ssh/sshd_config</span><br><span class=\"line\">----</span><br><span class=\"line\"><span class=\"comment\"># 将下列的语句值改为yes</span></span><br><span class=\"line\">PermitRootLogin <span class=\"built_in\">yes</span></span><br><span class=\"line\"><span class=\"comment\"># 重启ssh</span></span><br><span class=\"line\">systemctl restart sshd</span><br><span class=\"line\"><span class=\"comment\"># 使用ssh连接</span></span><br><span class=\"line\">ssh -o StrictHostKeyChecking=no root@192.168.204.130</span><br><span class=\"line\"><span class=\"comment\"># 更新</span></span><br><span class=\"line\">pacman -Syu</span><br><span class=\"line\">useradd axro</span><br><span class=\"line\">vi /etc/passwd</span><br><span class=\"line\">---</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"优化终端\"><a class=\"anchor\" href=\"#优化终端\">#</a> 优化终端</h1>\n<figure class=\"highlight bash\"><figcaption><span>bash</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装zsh，高亮，补全</span></span><br><span class=\"line\">sudo pacman -S zsh</span><br><span class=\"line\">sudo pacman -S zsh-autosuggestions</span><br><span class=\"line\">sudo pacman -S zsh-syntax-highlighting</span><br><span class=\"line\"><span class=\"comment\"># 安装git</span></span><br><span class=\"line\">sudo pacman -S git</span><br><span class=\"line\"><span class=\"comment\"># 使用以下命令配置zsh</span></span><br><span class=\"line\"><span class=\"built_in\">autoload</span> -Uz zsh-newuser-install</span><br><span class=\"line\">zsh-newuser-install -f</span><br><span class=\"line\"><span class=\"comment\"># 查看是否生成.zshrc</span></span><br><span class=\"line\"><span class=\"built_in\">ls</span> -a</span><br><span class=\"line\"><span class=\"comment\"># 安装oh my zsh</span></span><br><span class=\"line\">sh -c <span class=\"string\">\"<span class=\"subst\">$(curl -fsSL https:#raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>\"</span></span><br><span class=\"line\"><span class=\"comment\"># 在.zshrc中加入以下插件</span></span><br><span class=\"line\">vim .zshrc</span><br><span class=\"line\">---</span><br><span class=\"line\">ZSH_THEME=<span class=\"string\">\"dieter\"</span></span><br><span class=\"line\"><span class=\"built_in\">alias</span> vi=vim</span><br><span class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -l'</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</span><br><span class=\"line\"><span class=\"built_in\">source</span> /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh</span><br><span class=\"line\">:wq</span><br><span class=\"line\"><span class=\"comment\"># 刷新终端</span></span><br><span class=\"line\"><span class=\"built_in\">source</span> .zshrc</span><br><span class=\"line\"><span class=\"comment\"># 安装neofetch</span></span><br><span class=\"line\">sudo pacman -S neofetch</span><br><span class=\"line\">---</span><br><span class=\"line\">11:18:08 axro@axro-arch ~ neofetch</span><br><span class=\"line\">                   -`                    axro@axro-arch</span><br><span class=\"line\">                  .o+`                   --------------</span><br><span class=\"line\">                 `ooo/                   OS: Arch Linux x86_64</span><br><span class=\"line\">                `+oooo:                  Host: VMware20,1 None</span><br><span class=\"line\">               `+oooooo:                 Kernel: 6.2.2-arch1-1</span><br><span class=\"line\">               -+oooooo+:                Uptime: 20 mins</span><br><span class=\"line\">             `/:-:++oooo+:               Packages: 182 (pacman)</span><br><span class=\"line\">            `/++++/+++++++:              Shell: zsh 5.9</span><br><span class=\"line\">           `/++++++++++++++:             Resolution: 1280x800</span><br><span class=\"line\">          `/+++ooooooooooooo/`           Terminal: /dev/pts/0</span><br><span class=\"line\">         ./ooosssso++osssssso+`          CPU: 11th Gen Intel i7-11800H (1) @ 2.304GHz</span><br><span class=\"line\">        .oossssso-````/ossssss+`         GPU: 00:0f.0 VMware SVGA II Adapter</span><br><span class=\"line\">       -osssssso.      :ssssssso.        Memory: 209MiB / 3883MiB</span><br><span class=\"line\">      :osssssss/        osssso+++.</span><br><span class=\"line\">     /ossssssss/        +ssssooo/-</span><br><span class=\"line\">   `/ossssso+/:-        -:/+osssso+-</span><br><span class=\"line\">  `+sso+:-`                 `.-/+oso:</span><br><span class=\"line\"> `++:.                           `-/+/</span><br><span class=\"line\"> .`                                 `/</span><br><span class=\"line\"></span><br><span class=\"line\">11:21:14 axro@axro-arch ~</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"安装桌面环境\"><a class=\"anchor\" href=\"#安装桌面环境\">#</a> 安装桌面环境</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装xorg-server，xorg-xinit</span></span><br><span class=\"line\">sudo pacman -S xorg-server xorg-xinit</span><br><span class=\"line\"><span class=\"comment\"># 安装显卡驱动</span></span><br><span class=\"line\">sudo pacman -S xf86-video-vesa <span class=\"comment\"># 这里使用的是vmware，请自行找适合自己机器的显卡驱动</span></span><br><span class=\"line\"><span class=\"comment\"># 安装plasma</span></span><br><span class=\"line\">sudo pacman -S pacman-meta konsole dolphin</span><br><span class=\"line\">sudo pacman -S kde-applications-meta sddm</span><br><span class=\"line\"><span class=\"comment\"># 启动kde plasma</span></span><br><span class=\"line\">sudo systemctl start sddm.service</span><br><span class=\"line\"><span class=\"comment\"># 安装字体，更改中文</span></span><br><span class=\"line\">sudo pacman -S noto-fonts-cjk wqy-microhei</span><br><span class=\"line\"><span class=\"comment\"># 安装火狐浏览器</span></span><br><span class=\"line\">sudo pacman -S firefox</span><br><span class=\"line\"><span class=\"comment\"># 使用如下命令打开和关闭网卡</span></span><br><span class=\"line\">ifconfig ens160 down/up</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"vmware安装vmwaretools-实现窗口分辨率自适应\"><a class=\"anchor\" href=\"#vmware安装vmwaretools-实现窗口分辨率自适应\">#</a> vmware 安装 vmwaretools 实现窗口分辨率自适应。</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 安装</span></span><br><span class=\"line\">sudo pacman -Sy gtkmm gtkmm3 net-tools open-vm-tools xf86-video-vmware xf86-input-vmmouse</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> vmtoolsd.service</span><br><span class=\"line\">sudo systemctl <span class=\"built_in\">enable</span> vmware-vmblock-fuse.service</span><br><span class=\"line\">sudo reboot</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"详细请参考\"><a class=\"anchor\" href=\"#详细请参考\">#</a> 详细请参考</h3>\n<p><a href=\"https://wiki.archlinuxcn.org/wiki/VMware/%E5%AE%89%E8%A3%85_Arch_Linux_%E4%B8%BA%E8%99%9A%E6%8B%9F%E6%9C%BA\">wiki.archlinuxcn.org</a><br>\n 这里不多赘述。</p>\n<h2 id=\"安装中文输入法\"><a class=\"anchor\" href=\"#安装中文输入法\">#</a> 安装中文输入法</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 安装fcitx5</span><br><span class=\"line\">sudo pacman -S fcitx5-im fcitx5-chinese-addons  fcitx5-rime fcitx5-configtool</span><br><span class=\"line\">// 编辑配置文件</span><br><span class=\"line\">vi /etc/environment</span><br><span class=\"line\">---</span><br><span class=\"line\">GTK_IM_MODULE=fcitx</span><br><span class=\"line\">QT_IM_MODULE=fcitx</span><br><span class=\"line\">XMODIFIERS=@im=fcitx</span><br><span class=\"line\">SDL_IM_MODULE=fcitx</span><br><span class=\"line\"></span><br><span class=\"line\">// 重启，gnome和kde会自动配置</span><br><span class=\"line\">reboot</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"安装yay工具并安装linuxqq\"><a class=\"anchor\" href=\"#安装yay工具并安装linuxqq\">#</a> 安装 yay 工具并安装 linuxqq</h2>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://aur.archlinux.org/yay.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> yay</span><br><span class=\"line\">makepkg -si</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"编写rclocal\"><a class=\"anchor\" href=\"#编写rclocal\">#</a> 编写 rc.local</h2>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/lib/systemd/system/rc-local.service</span><br><span class=\"line\">---</span><br><span class=\"line\">#/usr/lib/systemd/system/rc-local.service</span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=\"写下描述\" </span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">ExecStart=/etc/rc.local start #在这里你可以看到开机执行脚本的位置</span><br><span class=\"line\">TimeoutSec=0</span><br><span class=\"line\">StandardInput=tty</span><br><span class=\"line\">RemainAfterExit=yes</span><br><span class=\"line\">SysVStartPriority=99</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br><span class=\"line\"></span><br><span class=\"line\">vi /etc/rc.local</span><br><span class=\"line\">---</span><br><span class=\"line\">#/bin/bash</span><br><span class=\"line\">sudo pacman -Syu</span><br><span class=\"line\">exit 0</span><br><span class=\"line\"></span><br><span class=\"line\">chmod 777 /etc/rc.local</span><br><span class=\"line\">systemctl enable rc.local.service</span><br></pre></td></tr></tbody></table></figure>",
            "tags": [
                "linux",
                "arch",
                "pacman"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/082913/",
            "url": "http://maxshiroi.top/ug/082913/",
            "title": "WSL2迁移以及空间回收。",
            "date_published": "2022-11-19T00:29:13.000Z",
            "content_html": "<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"../img/wsl2move/20221119083153.png\" fancybox=\"true\"></div></div>  \n<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>如果你按照正常方式在设置里移动 wsl 的话就会发现报错，本篇文章向您介绍如何正确迁移以及回收空间。</p>\n<h1 id=\"移动\"><a class=\"anchor\" href=\"#移动\">#</a> 移动</h1>\n<p>在 Windows 的 PowerShell 中输入:</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --<span class=\"built_in\">help</span></span><br></pre></td></tr></tbody></table></figure>\n<p>可以看到关于这个命令的使用帮助说明：</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">用法: wsl.exe [参数] [选项...] [命令行]</span><br><span class=\"line\"> </span><br><span class=\"line\">用于运行 Linux 二进制文件的参数:</span><br><span class=\"line\"> </span><br><span class=\"line\">    如果未提供命令行，wsl.exe 将启动默认的 shell。</span><br><span class=\"line\">    --exec, -e &lt;命令行&gt;</span><br><span class=\"line\">        执行指定的命令而不使用默认的 Linux shell。</span><br><span class=\"line\">    --</span><br><span class=\"line\">        按原样传递剩余的命令行。</span><br><span class=\"line\">选项:</span><br><span class=\"line\">    --distribution, -d &lt;分发版&gt;</span><br><span class=\"line\">        运行指定的分发。</span><br><span class=\"line\">    --user, -u &lt;用户名&gt;</span><br><span class=\"line\">        以指定用户身份运行。</span><br><span class=\"line\">用于管理适用于 Linux 的 Windows 子系统的参数:</span><br><span class=\"line\"> </span><br><span class=\"line\">    --export &lt;分发版&gt; &lt;文件名&gt;</span><br><span class=\"line\">        将分发导出到 tar 文件。</span><br><span class=\"line\">        对于标准输出，文件名可以是 -。</span><br><span class=\"line\">    --import &lt;分发版&gt; &lt;安装位置&gt; &lt;文件名&gt; [选项]</span><br><span class=\"line\">        将指定的 tar 文件作为新分发进行导入。</span><br><span class=\"line\">        对于标准输入，文件名可以是 -。</span><br><span class=\"line\">        选项:</span><br><span class=\"line\">            --version &lt;版本&gt;</span><br><span class=\"line\">                指定用于新分发的版本。</span><br><span class=\"line\">    --list, -l [选项]</span><br><span class=\"line\">        列出分发。</span><br><span class=\"line\">        选项:</span><br><span class=\"line\">            --all</span><br><span class=\"line\">                列出所有分发，包括当前正在</span><br><span class=\"line\">                安装或卸载的分发。</span><br><span class=\"line\">            --running</span><br><span class=\"line\">                只列出当前正在运行的分发。</span><br><span class=\"line\">            --quiet, -q</span><br><span class=\"line\">                只显示分发名称。</span><br><span class=\"line\">            --verbose, -v</span><br><span class=\"line\">                显示有关所有分发的详细信息。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-default, -s &lt;分发版&gt;</span><br><span class=\"line\">        将分发设置为默认值。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-default-version &lt;版本&gt;</span><br><span class=\"line\">        更改新分发的默认安装版本。</span><br><span class=\"line\">    --<span class=\"built_in\">set</span>-version &lt;分发版&gt; &lt;版本&gt;</span><br><span class=\"line\">        更改指定分发的版本。</span><br><span class=\"line\">    --shutdown</span><br><span class=\"line\">        立即终止所有正在运行的分发和 WSL <span class=\"number\">2</span> 轻型工具虚拟机。</span><br><span class=\"line\">    --terminate, -t &lt;分发版&gt;</span><br><span class=\"line\">        终止指定的分发。</span><br><span class=\"line\">    --unregister &lt;分发版&gt;</span><br><span class=\"line\">        注销分发。</span><br><span class=\"line\">    --<span class=\"built_in\">help</span></span><br><span class=\"line\">        显示用法信息。</span><br></pre></td></tr></tbody></table></figure>\n<p>这里我们使用到 export 、unregister 和 import 几个选项就可以实现迁移。</p>\n<ol>\n<li>终止正在运行的分发或虚拟机：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --shutdown</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>查看已安装的 wsl 名称：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --list --all</span><br></pre></td></tr></tbody></table></figure>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">适用于 Linux 的 Windows 子系统分发:</span><br><span class=\"line\">Debian (默认)</span><br><span class=\"line\">kali-linux</span><br><span class=\"line\">Ubuntu</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>对需要迁移的分发或虚拟机导出（我要迁移 kali-linux）：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --export kali-linux D:\\kali</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>卸载分发版或虚拟机（如果是要重装系统或换机器安装，这一步可以省略，但是要将上一步导出的文件保存好）<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --unregister kali-linux</span><br></pre></td></tr></tbody></table></figure>\n</li>\n<li>导入新的分发版或虚拟机：<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl --import kali-linux D:\\wsl\\kali D:\\kali</span><br></pre></td></tr></tbody></table></figure>\n</li>\n</ol>\n<h1 id=\"压缩\"><a class=\"anchor\" href=\"#压缩\">#</a> 压缩</h1>\n<p>等待导入后你会发现移动的其实是 vhdx 文件，那么就可以对这个文件进行回收空间。</p>\n<ol>\n<li>以管理员身份运行 cmd，输入 diskpart 命令按回车。</li>\n<li>使用以下命令选择你的 userdata.vhdx</li>\n</ol>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select vdisk file = \"D:\\wsl\\ext4.vhdx\"</span><br></pre></td></tr></tbody></table></figure>\n<p>如果提示</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DiskPart successfully selected the virtual disk file.</span><br></pre></td></tr></tbody></table></figure>\n<p>就说明成功了。</p>\n<ol start=\"3\">\n<li>输入  <code>compact vdisk</code>  来压缩。</li>\n</ol>\n<h1 id=\"bug\"><a class=\"anchor\" href=\"#bug\">#</a> bug</h1>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">ERROR: <span class=\"title\">Wsl</span>/<span class=\"title\">Service</span>/<span class=\"title\">CreateInstance</span>/<span class=\"title\">ERROR_FILE_NOT_FOUND</span></span></span><br></pre></td></tr></tbody></table></figure>\n<p>打开命令行，在命令行中输入</p>\n<figure class=\"highlight cmd\"><figcaption><span>cmd</span></figcaption><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wsl.exe --list --all</span><br><span class=\"line\">wsl.exe --unregister xxx</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"摘抄\"><a class=\"anchor\" href=\"#摘抄\">#</a> 摘抄</h1>\n<p><a href=\"https://blog.csdn.net/zhys2007/article/details/110958577\">WSL2 迁移方法</a><br>\n<a href=\"https://blog.csdn.net/y17854117512/article/details/119214442?spm=1001.2101.3001.6661.1&amp;utm_medium=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;depth_1-utm_source=distribute.pc_relevant_t0.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1-119214442-blog-110900591.pc_relevant_default&amp;utm_relevant_index=1\">解决 Win10 子系统的 Ubuntu 被删除后，重新安装出现找不到系统路径</a></p>\n",
            "tags": [
                "linux",
                "wsl2",
                "Hyper-v"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/101622/",
            "url": "http://maxshiroi.top/ug/101622/",
            "title": "解决mysql第一次安装后改密码的各种问题",
            "date_published": "2022-10-19T02:16:22.000Z",
            "content_html": "<h1 id=\"如何重置mysql密码\"><a class=\"anchor\" href=\"#如何重置mysql密码\">#</a> 如何重置 mysql 密码？</h1>\n<p>按照提示，alter user。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'123456'</span>;</span><br></pre></td></tr></tbody></table></figure>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"/img/WebBackcreat1/20221019100609.png\" fancybox=\"true\"></div></div>  \n<p>哈哈快乐报错。</p>\n<p>更改密码复杂度。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password_length=1;</span><br></pre></td></tr></tbody></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1193 (HY000): Unknown system variable <span class=\"string\">'validate_password_policy'</span></span><br></pre></td></tr></tbody></table></figure>\n<p>很快乐。</p>\n<p>那就先查看密码规范：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SHOW VARIABLES LIKE <span class=\"string\">'validate_password%'</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>提示：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR 1820 (HY000): You must reset your password using ALTER USER statement before executing this statement.</span><br></pre></td></tr></tbody></table></figure>\n<p>套娃呢是吧。</p>\n<p>解决方法：<br>\n重置一个和随机密码差不多的就可以了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'qazWsx&gt;+&amp;3ed'</span>;</span><br></pre></td></tr></tbody></table></figure>\n<p>已经提示成功了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'qazWsx&gt;+&amp;3ed'</span>;</span><br><span class=\"line\">Query OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></tbody></table></figure>\n<p>更改密码复杂度：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.policy=0;</span><br><span class=\"line\"><span class=\"built_in\">set</span> global validate_password.length=6;</span><br></pre></td></tr></tbody></table></figure>\n<p>修改密码并退出：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER USER <span class=\"string\">'root'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'123456'</span>;</span><br><span class=\"line\"><span class=\"built_in\">exit</span></span><br></pre></td></tr></tbody></table></figure>\n<p>然后就可以愉快重启登陆了：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart mysqld</span><br><span class=\"line\">mysql -u root -p</span><br></pre></td></tr></tbody></table></figure>\n",
            "tags": [
                "linux",
                "mysql",
                "passwd"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211932/",
            "url": "http://maxshiroi.top/ug/211932/",
            "title": "在centos中部署后端程序。",
            "date_published": "2022-10-16T13:19:32.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<p>LAMP 和 LNMP 都是用于搭建 Web 服务器环境的软件栈，其中 LAMP 是使用 Linux 操作系统、Apache Web 服务器、MySQL 数据库和 PHP 编程语言，而 LNMP 则是使用 Linux 操作系统、Nginx Web 服务器、MySQL 数据库和 PHP 编程语言。当然也有组合使用的 LNMPA、LAMN、LEMP 等，关于这些我只谈谈 LNMPA。</p>\n<h2 id=\"都是啥东西\"><a class=\"anchor\" href=\"#都是啥东西\">#</a> 都是啥东西？</h2>\n<ul>\n<li>L 是指 Linux 操作系统：LAMP 中的 L 指的是 Linux 操作系统，通常使用 Ubuntu、Debian、CentOS 等常见的 Linux 发行版。</li>\n<li>A 是指 Apache Web 服务器：Apache 是一个流行的开源 Web 服务器软件，它支持多种操作系统和编程语言，包括 PHP、Perl、Python 等。</li>\n<li>N 是指 Nginx Web 服务器：Nginx 是另一种流行的开源 Web 服务器软件，它与 Apache 相比更轻量级、更高效，并且支持更多的并发连接。</li>\n<li>M 是指 MySQL 数据库：MySQL 是一个流行的关系型数据库管理系统，它支持多种操作系统和编程语言，包括 PHP、Java、Python 等。</li>\n<li>P 是指 PHP 编程语言：PHP 是一种流行的 Web 编程语言，它可以在服务器端生成动态网页内容，与 MySQL 数据库和 Apache Web 服务器紧密集成。</li>\n</ul>\n<p>总的来说，LAMP 和 LNMP 的最大区别在于 Web 服务器组件的选择。对于需要处理大量并发连接的 Web 应用程序，LNMP 中的 Nginx 服务器通常比 Apache 性能更好。而对于一些较小的 Web 应用程序，使用 LAMP 也是一种不错的选择。</p>\n<h2 id=\"lnmpa\"><a class=\"anchor\" href=\"#lnmpa\">#</a> LNMPA</h2>\n<p>LNMPA 同样是由上述的软件组成的。LNMPA 的特点是同时支持 Nginx 和 Apache 两种 Web 服务器，可以灵活地根据实际需求进行选择使用。具体的区别在于 LNMPA 中的 N 和 A 的作用。</p>\n<ul>\n<li>Nginx Web 服务器：Nginx 是 LNMPA 中的主要 Web 服务器，它提供高性能的反向代理和负载均衡功能，可以有效地处理大量并发请求。</li>\n<li>Apache Web 服务器：Apache 是 LNMPA 中的备用 Web 服务器，当需要使用一些只支持 Apache 的模块或应用程序时可以切换到 Apache。</li>\n</ul>\n<p>与 LNMP 相比，LNMPA 的主要优点是可以同时支持 Nginx 和 Apache 两种 Web 服务器，从而更好地适应各种 Web 应用程序的需求。同时，LNMPA 还可以通过配置文件灵活地选择使用哪种 Web 服务器，并且可以在不重启服务的情况下切换服务器，提高了系统的可用性和灵活性。</p>\n<h2 id=\"其他\"><a class=\"anchor\" href=\"#其他\">#</a> 其他</h2>\n<p>是否有 LAMPN 这种组合呢？</p>\n<p>LAMPN 并不是一个常见的 Web 服务器软件栈，通常情况下不会使用它来搭建 Web 服务器环境。不过，如果你指的是在 LAMP 中加入 Nginx Web 服务器，也就是使用 Linux 操作系统、Apache Web 服务器、MySQL 数据库和 Nginx Web 服务器，那么这个组合通常被称为 LAMN 或 LEMP。</p>\n<p>这里不做详细赘述。</p>\n<hr>\n<h1 id=\"环境搭建\"><a class=\"anchor\" href=\"#环境搭建\">#</a> 环境搭建</h1>\n<blockquote>\n<p>其实部署很简单，重要的地方在于部署时出现差错后该如何进行处理。</p>\n</blockquote>\n<h2 id=\"简单使用\"><a class=\"anchor\" href=\"#简单使用\">#</a> 简单使用</h2>\n<blockquote>\n<p>使用 apt 或者 yum 安装的方式太过简单所以不做详细描述。我只放出命令提供复制使用。</p>\n</blockquote>\n<p>安装 Nginx：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install nginx</span><br></pre></td></tr></tbody></table></figure>\n<p>安装 Apache：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install httpd</span><br></pre></td></tr></tbody></table></figure>\n<p>安装 PHP：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php</span><br></pre></td></tr></tbody></table></figure>\n<p>以上命令将会安装最新版本的软件包。如果需要安装特定版本的软件，可以在命令后面加上软件包的版本号，例如：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install nginx-1.20.1</span><br><span class=\"line\">yum install httpd-2.4.46</span><br><span class=\"line\">yum install php-7.4.24</span><br></pre></td></tr></tbody></table></figure>\n<p>安装完成后，启动服务并设置开机自启：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start nginx/httpd/php-fpm   <span class=\"comment\"># 启动服务</span></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx/httpd/php-fpm  <span class=\"comment\"># 设置开机自启</span></span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"nginx的安装\"><a class=\"anchor\" href=\"#nginx的安装\">#</a> Nginx 的安装</h2>\n<h3 id=\"使用源码编译安装\"><a class=\"anchor\" href=\"#使用源码编译安装\">#</a> 使用源码编译安装：</h3>\n<ol>\n<li>访问<a href=\"https://nginx.org/en/download.html\"> Nginx</a> 官网，复制最新版本链接。wget 到本地目录。</li>\n</ol>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"./img/WebBackcreat1/20221016212408.png\" fancybox=\"true\"></div></div> &nbsp;\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">wget https://nginx.org/download/nginx-1.23.1.tar.gz ~/</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>解压出来。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf nginx-1.23.1.tar.gz</span><br><span class=\"line\">// 如果这里是 *.tar.bz2 的话则使用 -jxvf</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>更新并安装编译所需要的前置。（PS：请使用 root 用户）</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update &amp;&amp; yum -y upgrade</span><br><span class=\"line\">yum -y install gcc make gcc-c++ zlib zlib-devel pcre-devel openssl openssl-devel expat-devel</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>进入解压出来的文件夹，编译安装。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> nginx-1.23.1</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make</span><br><span class=\"line\">make install</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>nginx 的启动和关闭</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /usr/local/nginx/sbin</span><br><span class=\"line\">// 启动nginx</span><br><span class=\"line\">./nginx</span><br><span class=\"line\">// 关闭nginx</span><br><span class=\"line\">./nginx -s stop</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>创建目录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mkdir</span> /var/temp/nginx -p</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>建议在执行前先使用 netstat -aux | grep 80 查看是否有端口占用 80。</p>\n</blockquote>\n<h3 id=\"写systemd实现开机自启\"><a class=\"anchor\" href=\"#写systemd实现开机自启\">#</a> 写 Systemd 实现开机自启</h3>\n<ol>\n<li>编辑文件</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /lib/systemd/system/</span><br><span class=\"line\">vim nginx.service</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>添加内容</li>\n</ol>\n<figure class=\"highlight vim\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=The NGINX HTTP <span class=\"built_in\">and</span> <span class=\"built_in\">reverse</span> proxy server</span><br><span class=\"line\">After=syslog.target network.target remote-fs.target nss-lookup.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/usr/local/nginx/logs/nginx.pid</span><br><span class=\"line\">ExecStartPre=/usr/local/nginx/sbin/nginx -t -<span class=\"keyword\">c</span> /usr/local/nginx/<span class=\"keyword\">conf</span>/nginx.<span class=\"keyword\">conf</span></span><br><span class=\"line\">ExecStart=/usr/local/nginx/sbin/nginx -<span class=\"keyword\">c</span> /usr/local/nginx/<span class=\"keyword\">conf</span>/nginx.<span class=\"keyword\">conf</span></span><br><span class=\"line\">ExecReload=/usr/local/nginx/sbin/nginx -s reload</span><br><span class=\"line\">KillStop=/usr/local/nginx/sbin/nginx -s <span class=\"keyword\">stop</span></span><br><span class=\"line\">ExecStop=/usr/local/nginx/sbin/nginx -s <span class=\"keyword\">quit</span></span><br><span class=\"line\">PrivateTmp=true</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></tbody></table></figure>\n<p>其中， <code>PIDFile</code> 、 <code>ExecStartPre</code> 、 <code>ExecStart</code> 、 <code>ExecReload</code> 、 <code>KillStop</code>  和 <code>ExecStop</code>  等选项需要根据你实际安装的 Nginx 路径进行修改。</p>\n<ol start=\"3\">\n<li>保存并重新加载</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl daemon-reload</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>启动</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 启动/关闭nginx</span><br><span class=\"line\">systemctl start nginx</span><br><span class=\"line\">systemctl stop nginx</span><br><span class=\"line\">// 开启和关闭开机自启</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> nginx</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> nginx</span><br></pre></td></tr></tbody></table></figure>\n<h2 id=\"编译安装-apache\"><a class=\"anchor\" href=\"#编译安装-apache\">#</a> 编译安装 Apache</h2>\n<h3 id=\"安装依赖\"><a class=\"anchor\" href=\"#安装依赖\">#</a> 安装依赖</h3>\n<p>在开始编译安装 Apache 之前，我们需要先安装一些依赖软件包，以确保编译过程顺利进行。在终端中执行以下命令，如果在安装 nginx 的时候已经安装过的包会自动跳过。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y gcc make apr-devel apr-util-devel pcre-devel</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"编译安装-apr-库\"><a class=\"anchor\" href=\"#编译安装-apr-库\">#</a> 编译安装 APR 库</h3>\n<p>APR（Apache Portable Runtime）是 Apache 在不同平台上实现跨平台性的工具库，而 Apache HTTP 服务器就依赖于 APR 库。</p>\n<ol>\n<li>使用 wget 命令下载 APR 库的源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.tuna.tsinghua.edu.cn/apache/apr/apr-1.6.5.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>使用 tar 命令解压缩源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf apr-1.6.5.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>进入解压后的目录：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> apr-1.6.5</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>执行以下命令编译并安装 APR 库：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/apr</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>\n<p>其中， <code>--prefix</code>  选项指定了安装路径。这里我们将 APR 安装到  <code>/usr/local/apr</code>  目录下。</p>\n<h3 id=\"编译安装-apr-util-库\"><a class=\"anchor\" href=\"#编译安装-apr-util-库\">#</a> 编译安装 APR-util 库</h3>\n<p>APR-util 是 APR 库的补充，它提供了一些 Apache HTTP 服务器所需的额外功能。在编译安装 Apache 时，需要使用 APR-util 库。</p>\n<ol>\n<li>使用 wget 命令下载 APR-util 库的源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://dlcdn.apache.org//apr/apr-util-1.6.3.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>同上，使用 tar 命令解压缩源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf apr-util-1.6.3.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>进入解压后的目录：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> apr-util-1.6.3</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>执行以下命令编译并安装 APR-util 库：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/apr-util --with-apr=/usr/local/apr/bin/apr-1-config</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>\n<p>其中， <code>--prefix</code>  选项指定了安装路径， <code>--with-apr</code>  选项指定了 APR 库的安装路径。</p>\n<h3 id=\"编译安装-pcre-库\"><a class=\"anchor\" href=\"#编译安装-pcre-库\">#</a> 编译安装 PCRE 库</h3>\n<p>PCRE（Perl Compatible Regular Expressions）是一款正则表达式库，它为 Apache HTTP 服务器提供了正则表达式支持。</p>\n<ol>\n<li>使用 wget 命令下载 PCRE 库的源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nchc.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>使用 tar 命令解压缩源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf pcre-8.45.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>进入解压后的目录：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> pcre-8.45</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>执行以下命令编译并安装 PCRE 库：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/pcre --with-apr=/usr/local/apr/bin/apr-1-config</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>\n<p>其中， <code>--prefix</code>  选项指定了安装路径， <code>--with-apr</code>  选项指定了 APR 库的安装路径。</p>\n<h3 id=\"安装-apache\"><a class=\"anchor\" href=\"#安装-apache\">#</a> 安装 Apache</h3>\n<p>现在，我们已经准备好了编译 Apache 的环境。</p>\n<ol>\n<li>使用 wget 命令下载 Apache 的源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://mirrors.aliyun.com/apache/httpd/httpd-2.4.57.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>使用 tar 命令解压缩源代码包：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf httpd-2.4.57.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>进入解压后的目录：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> httpd-2.4.57</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>执行以下命令编译并安装 Apache：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/httpd --with-pcre=/usr/local/pcre --with-apr=/usr/local/apr --with-apr-util=/usr/local/apr-util</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>\n<p>其中， <code>--prefix</code>  选项指定了安装路径， <code>--with-pcre</code>  选项指定了 PCRE 库的安装路径， <code>--with-apr</code>  和  <code>--with-apr-util</code>  选项分别指定了 APR 库和 APR-util 库的安装路径。</p>\n<p>注意：如果在编译过程中出现任何错误，请参考错误提示进行解决。</p>\n<h3 id=\"配置开机自启动\"><a class=\"anchor\" href=\"#配置开机自启动\">#</a> 配置开机自启动</h3>\n<p>为了让 Apache 在服务器启动时自动启动，我们需要将其配置为开机自启动服务。</p>\n<ol>\n<li>将 apachectl 命令复制到 /etc/init.d/ 目录下：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> /usr/local/httpd/bin/apachectl /etc/init.d/httpd</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>将以下命令添加到 /etc/profile 文件末尾：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">'\\nexport PATH=/usr/local/httpd/bin:/usr/local/httpd/lib:$PATH\\n'</span> &gt;&gt; /etc/profile &amp;&amp; <span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>创建开机自启动服务：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">\"#chkconfig:2345 64 36\"</span> &gt; /etc/rc.d/init.d/httpd</span><br><span class=\"line\">chkconfig --add httpd</span><br><span class=\"line\">chkconfig httpd on</span><br></pre></td></tr></tbody></table></figure>\n<p>现在，Apache 就已经配置为开机自启动服务了。</p>\n<h3 id=\"配置防火墙\"><a class=\"anchor\" href=\"#配置防火墙\">#</a> 配置防火墙</h3>\n<p>为了能够让 Apache 监听 HTTP 和 HTTPS 端口，我们需要在服务器的防火墙中添加相应的规则。在终端中执行以下命令：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 放行80，443端口</span><br><span class=\"line\">firewall-cmd --add-port=80/tcp --permanent</span><br><span class=\"line\">firewall-cmd --add-port=443/tcp --permanent</span><br><span class=\"line\">// 重新加载防火墙</span><br><span class=\"line\">firewall-cmd --reload</span><br></pre></td></tr></tbody></table></figure>\n<p>这将添加 HTTP 端口（80）和 HTTPS 端口（443）的防火墙规则，并且将规则永久保存。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//使用如下命令展示所有放行的端口。</span><br><span class=\"line\">firewall-cmd --all</span><br></pre></td></tr></tbody></table></figure>\n<p>如果你觉得放行端口太麻烦，你也可以直接选择关掉防火墙。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 关闭防火墙</span><br><span class=\"line\">systemctl stop firewalld</span><br><span class=\"line\">// 直接关闭开机启动</span><br><span class=\"line\">systemctl <span class=\"built_in\">disable</span> firewalld</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"配置-apache\"><a class=\"anchor\" href=\"#配置-apache\">#</a> 配置 Apache</h3>\n<p>如果上面的步骤都执行完了，并且修复了错误。那么接下来，我们需要对 Apache 进行一些配置，以确保其能够正常工作。</p>\n<ol>\n<li>使用 vim 或其他编辑器打开 Apache 的配置文件：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /usr/local/httpd/conf/httpd.conf</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>将以下行的注释符号（#）去掉：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#ServerName www.example.com:80</span><br></pre></td></tr></tbody></table></figure>\n<p>这将允许 Apache 监听所有可用的网络接口，并且可以响应来自任何主机的请求。</p>\n<ol start=\"3\">\n<li>保存并关闭文件。</li>\n</ol>\n<h3 id=\"启动-apache\"><a class=\"anchor\" href=\"#启动-apache\">#</a> 启动 Apache</h3>\n<p>使用以下命令启动 Apache 服务：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start httpd</span><br></pre></td></tr></tbody></table></figure>\n<p>现在，你可以通过浏览器访问服务器的 IP 地址或域名，验证 Apache 是否已经成功安装和配置。</p>\n<p>如果一切正常，你应该能够看到 Apache 的默认欢迎页面。</p>\n<p>such as：</p>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"Pasted\" alt=\"image 20230519161454.png\" fancybox=\"true\"></div><div class=\"image-meta\"><span class=\"image-caption center\">image 20230519161454.png</span></div></div>\n</blockquote>\n<h2 id=\"编译安装php\"><a class=\"anchor\" href=\"#编译安装php\">#</a> 编译安装 PHP</h2>\n<h3 id=\"安装依赖-2\"><a class=\"anchor\" href=\"#安装依赖-2\">#</a> 安装依赖</h3>\n<p>安装 epel-release 源</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install epel-release</span><br></pre></td></tr></tbody></table></figure>\n<p>更新系统</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum update</span><br></pre></td></tr></tbody></table></figure>\n<p>安装 PHP 所需依赖</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install php-mcrypt libmcrypt libmcrypt-devel autoconf freetype gd jpegsrc libmcrypt libpng libpng-devel libjpeg libxml2 libxml2-devel zlib curl curl-devel openssl openssl-devel sqlite-devel</span><br></pre></td></tr></tbody></table></figure>\n<p>安装 oniguruma 库</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-6.7.0-1.el7.x86_64.rpm</span><br><span class=\"line\">yum -y install http://down.24kplus.com/linux/oniguruma/oniguruma-devel-6.7.0-1.el7.x86_64.rpm</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"下载-php\"><a class=\"anchor\" href=\"#下载-php\">#</a> 下载 PHP</h3>\n<p>下载 PHP 源码包</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://www.php.net/distributions/php-8.2.5.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<p>解压源码包</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf php-8.2.5.tar.gz</span><br></pre></td></tr></tbody></table></figure>\n<p>进入源码包目录</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> php-8.2.5</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"配置-php-并编译安装\"><a class=\"anchor\" href=\"#配置-php-并编译安装\">#</a> 配置 PHP 并编译安装</h3>\n<p>使用以下命令配置编译选项：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/usr/local/php8/ --with-config-file-path=/usr/local/php8/etc/ --with-apxs2=/usr/local/httpd/bin/apxs --enable-mbstring --with-curl -with-gd --enable-fpm --enable-mysqlnd --with-pdo-mysql=mysqlnd --with-mysqli=mysqlnd</span><br></pre></td></tr></tbody></table></figure>\n<p>或者将上述命令分成多行，更易读：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure \\</span><br><span class=\"line\">--prefix=/usr/local/php8 \\</span><br><span class=\"line\">--with-config-file-path=/usr/local/php8/etc \\</span><br><span class=\"line\">--with-apxs2=/usr/local/httpd/bin/apxs \\</span><br><span class=\"line\">--with-mysql-sock=/usr/local/mysql/mysql.sock \\</span><br><span class=\"line\">--with-mysqli \\</span><br><span class=\"line\">--with-zlib \\</span><br><span class=\"line\">--with-curl \\</span><br><span class=\"line\">--with-gd \\</span><br><span class=\"line\">--with-jpeg-dir \\</span><br><span class=\"line\">--with-png-dir \\</span><br><span class=\"line\">--with-freetype-dir \\</span><br><span class=\"line\">--with-openssl \\</span><br><span class=\"line\">--enable-mbstring \\</span><br><span class=\"line\">--enable-xml \\</span><br><span class=\"line\">--enable-session \\</span><br><span class=\"line\">--enable-ftp \\</span><br><span class=\"line\">--enable-pdo \\</span><br><span class=\"line\">--enable-tokenizer \\</span><br><span class=\"line\">--enable-mysqlnd \\</span><br><span class=\"line\">--enable-fpm \\</span><br><span class=\"line\">--with-pdo-mysql=mysqlnd \\</span><br><span class=\"line\">--with-mysqli=mysqlnd \\</span><br><span class=\"line\">--enable-zip</span><br></pre></td></tr></tbody></table></figure>\n<p>编译并安装 PHP</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"配置环境变量和测试\"><a class=\"anchor\" href=\"#配置环境变量和测试\">#</a> 配置环境变量和测试</h3>\n<p>将 PHP 加入系统 PATH 环境变量</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> -e <span class=\"string\">'\\nexport PATH=/usr/local/php8/bin:/usr/local/php8/sbin:$PATH\\n'</span> &gt;&gt; /etc/profile &amp;&amp; <span class=\"built_in\">source</span> /etc/profile</span><br></pre></td></tr></tbody></table></figure>\n<p>测试 PHP-FPM 配置是否正确</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php-fpm -t</span><br></pre></td></tr></tbody></table></figure>\n<p>如果配置正确，会输出如下信息：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[18-Apr-2023 10:12:57] NOTICE: configuration file /usr/local/php8/etc/php-fpm.conf test is successful</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"启动和关闭-php-fpm\"><a class=\"anchor\" href=\"#启动和关闭-php-fpm\">#</a> 启动和关闭 PHP-FPM</h3>\n<p>启动 PHP-FPM</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/etc/init.d/php-fpm</span><br></pre></td></tr></tbody></table></figure>\n<p>关闭 PHP-FPM</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pkill php-fpm</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"配置-apache-2\"><a class=\"anchor\" href=\"#配置-apache-2\">#</a> 配置 Apache</h3>\n<p>编辑 Apache 配置文件，使其可以解析 php。</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/local/httpd/conf/httpd.conf</span><br></pre></td></tr></tbody></table></figure>\n<ol>\n<li>加载 PHP 模块</li>\n</ol>\n<p>查看是否已经添加了，如果没有在 loadModule 处添加。正确安装后，应该已经有了。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LoadModule php7_module modules/libphp7.so</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>设置默认文档</li>\n</ol>\n<p>在  <code>&lt;IfModule dir_module&gt;</code>  模块添加  <code>index.php</code> ，作为默认文档。</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">DirectoryIndex index.html index.php</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>添加 PHP 文件类型</li>\n</ol>\n<p>在 Apache 配置文件中找到以下内容：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddType application/x-compress .Z</span><br><span class=\"line\">AddType application/x-gzip .gz .tgz</span><br></pre></td></tr></tbody></table></figure>\n<p>添加如下内容：</p>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">AddType application/x-httpd-php-source .phps</span><br><span class=\"line\">AddType application/x-httpd-php .php</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"重启-apache\"><a class=\"anchor\" href=\"#重启-apache\">#</a> 重启 Apache</h3>\n<p>重启 Apache 使配置生效</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart httpd</span><br></pre></td></tr></tbody></table></figure>\n<h3 id=\"测试\"><a class=\"anchor\" href=\"#测试\">#</a> 测试</h3>\n<p>在 Apache 根目录下创建一个  <code>index.php</code>  文件，内容如下：</p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"title function_ invoke__\">phpinfo</span>(); <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></tbody></table></figure>\n<p>在浏览器中访问： <code>http://your_domain/index.php</code> ，如果看到 PHP 信息页，说明 PHP 已经成功安装和配置。</p>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"./img/WebBackcreat1/20230421154601.png\" fancybox=\"true\"></div></div>\n<h2 id=\"mysql-的安装\"><a class=\"anchor\" href=\"#mysql-的安装\">#</a> Mysql 的安装</h2>\n<p>Mysql 我就不用编译安装了，有点折磨。</p>\n<ol>\n<li>\n<p>先安装 wget  <code>yum install wget</code> 。</p>\n</li>\n<li>\n<p>下载并安装 mysql。</p>\n</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">wget https://dev.mysql.com/get/mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y localinstall mysql80-community-release-el7-7.noarch.rpm</span><br><span class=\"line\"></span><br><span class=\"line\">yum -y install mysql-community-server</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>启动 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">// 启动mysql</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl start mysqld</span><br><span class=\"line\"></span><br><span class=\"line\">// 写入开机启动</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mysqld</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>查找日志并找到临时密码。</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">vi /var/log/mysqld.log</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<div class=\"tag-plugin image\"><div class=\"image-bg\"><img src=\"./img/WebBackcreat1/20221019082932.png\" fancybox=\"true\"></div></div> &nbsp;\n</blockquote>\n<ol start=\"5\">\n<li>登录 mysql</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">mysql -u root -p</span><br><span class=\"line\"></span><br><span class=\"line\">// 密码则为查找到的临时密码。</span><br><span class=\"line\"></span><br><span class=\"line\">password:</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>修改密码</li>\n</ol>\n<blockquote>\n<p>我有专门说过这傻逼 mysql 改密码。可以到我的博客上看看。</p>\n</blockquote>\n<ol start=\"7\">\n<li>重启 mysql 服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">service mysqld restart</span><br><span class=\"line\"></span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>重启后就可以正常使用 mysql 了。</p>\n</blockquote>\n<h2 id=\"访问之前\"><a class=\"anchor\" href=\"#访问之前\">#</a> 访问之前</h2>\n<blockquote>\n<p>上面有提到端口开放，可以用这条命令看看是否放开了：</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">firewall-cmd --all</span><br></pre></td></tr></tbody></table></figure>\n<hr>\n<h1 id=\"安装web程序\"><a class=\"anchor\" href=\"#安装web程序\">#</a> 安装 web 程序</h1>\n<p>安装好 LAMP/LNMP 环境后就可以安装和使用对应环境的网页程序了，这里给出一些常见的环境。</p>\n<h2 id=\"安装pma\"><a class=\"anchor\" href=\"#安装pma\">#</a> 安装 pma</h2>\n<p>phpMyAdmin（简称 PMA）是一款基于 PHP 的 MySQL 数据库管理工具，可以通过 Web 界面对 MySQL 数据库进行管理，包括创建、修改和删除数据库、表、字段、索引等操作，同时还支持 SQL 查询和导入导出数据等功能，是 MySQL 管理的重要工具之一。</p>\n<ol>\n<li>下载 PMA：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>解压 PMA：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip phpMyAdmin-5.2.1-all-languages.zip</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>重命名解压后的目录：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">mv</span> phpMyAdmin-5.2.1-all-languages pma</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>安装 PHP mysqli 扩展：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install php-mysqli</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>进入 PMA 目录：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> pma</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>复制配置文件：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cp</span> config.sample.inc.php config.inc.php</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"7\">\n<li>修改配置文件：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi config.inc.php</span><br></pre></td></tr></tbody></table></figure>\n<p>在该文件中，您需要修改以下参数：</p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'Servers'</span>][<span class=\"variable\">$i</span>][<span class=\"string\">'host'</span>] = <span class=\"string\">'localhost'</span>; <span class=\"comment\">// 数据库主机地址</span></span><br><span class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'Servers'</span>][<span class=\"variable\">$i</span>][<span class=\"string\">'port'</span>] = <span class=\"string\">'3306'</span>; <span class=\"comment\">// 数据库端口号</span></span><br><span class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'Servers'</span>][<span class=\"variable\">$i</span>][<span class=\"string\">'user'</span>] = <span class=\"string\">'root'</span>; <span class=\"comment\">// 数据库用户名</span></span><br><span class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'Servers'</span>][<span class=\"variable\">$i</span>][<span class=\"string\">'password'</span>] = <span class=\"string\">'your_password'</span>; <span class=\"comment\">// 数据库密码</span></span><br><span class=\"line\"><span class=\"variable\">$cfg</span>[<span class=\"string\">'bluefish'</span>] = <span class=\"string\">''</span>; <span class=\"comment\">// 用于加密的密钥，可以留空</span></span><br></pre></td></tr></tbody></table></figure>\n<p>将上述参数修改为您的 MySQL 数据库的实际配置即可。如果您的 MySQL 数据库与 PMA 安装在同一台服务器上，那么主机地址可以设置为  <code>localhost</code> ，端口号可以设置为默认的  <code>3306</code> 。如果您的 MySQL 数据库与 PMA 安装在不同的服务器上，那么主机地址应该设置为 MySQL 数据库的 IP 地址，端口号可以根据实际情况进行修改。</p>\n<ol start=\"8\">\n<li>配置 HTTP 访问：</li>\n</ol>\n<p>将 PMA 目录放置在 Apache 或 Nginx 的根目录下，例如  <code>/var/www/html</code> ，然后通过 HTTP 协议访问，例如  <code>http://your_domain/pma</code> 。</p>\n<p>如果您使用的是 Apache，还需要在 Apache 配置文件中添加以下内容：</p>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">Alias</span> /pma /var/www/html/pma</span><br><span class=\"line\"><span class=\"section\">&lt;Directory /var/www/html/pma&gt;</span></span><br><span class=\"line\">    <span class=\"attribute\">Options</span> FollowSymLinks</span><br><span class=\"line\">    <span class=\"attribute\">DirectoryIndex</span> index.php</span><br><span class=\"line\">    <span class=\"attribute\">Require</span> <span class=\"literal\">all</span> granted</span><br><span class=\"line\"><span class=\"section\">&lt;/Directory&gt;</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"9\">\n<li>重启 HTTP 服务器：</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart httpd/nginx</span><br></pre></td></tr></tbody></table></figure>\n<p>至此，PMA 已经安装完成，并可以通过 HTTP 协议访问。请访问  <code>http://your_domain/pma</code> ，使用您的 MySQL 数据库账号和密码登录 PMA。</p>\n<h3 id=\"pma\"><a class=\"anchor\" href=\"#pma\">#</a> PMA</h3>\n<p>在这里安装时并没有创建如虚拟主机这种配置文件，而是直接放在默认的网站目录里。下面安装 wordpress 我将会创建一个虚拟主机，来安装和使用 wordpress。</p>\n<h2 id=\"安装wordpress\"><a class=\"anchor\" href=\"#安装wordpress\">#</a> 安装 wordpress</h2>\n<p>WordPress 是一款流行的开源博客系统，它基于 PHP 和 MySQL 构建，具有简单易用、灵活可扩展等优点，是搭建个人博客、企业网站等的不二之选。</p>\n<p>我将详细介绍如何安装 wordpress。</p>\n<h3 id=\"创建虚拟网站\"><a class=\"anchor\" href=\"#创建虚拟网站\">#</a> 创建虚拟网站</h3>\n<p>为了避免 html 下文件之间的互相影响，可以选择创建虚拟网站来将他们隔开。</p>\n<h4 id=\"apache方法\"><a class=\"anchor\" href=\"#apache方法\">#</a> Apache 方法</h4>\n<p>首先，需要在 Apache 的配置文件中创建一个虚拟主机。假设我们要为 WordPress 创建一个名为  <code>example.com</code>  的虚拟主机，可以按照以下步骤进行配置：</p>\n<ol>\n<li>创建一个新的配置文件  <code>/etc/httpd/conf.d/example.com.conf</code> ，并添加以下内容：</li>\n</ol>\n<figure class=\"highlight apache\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">&lt;VirtualHost *<span class=\"number\">:80</span>&gt;</span></span><br><span class=\"line\">    <span class=\"attribute\">ServerName</span> example.com</span><br><span class=\"line\">    <span class=\"attribute\">DocumentRoot</span> /var/www/wp</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">&lt;Directory /var/www/wp&gt;</span></span><br><span class=\"line\">        <span class=\"attribute\">Options</span> Indexes FollowSymLinks</span><br><span class=\"line\">        <span class=\"attribute\">AllowOverride</span> <span class=\"literal\">All</span></span><br><span class=\"line\">        <span class=\"attribute\">Require</span> <span class=\"literal\">all</span> granted</span><br><span class=\"line\">    <span class=\"section\">&lt;/Directory&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">&lt;FilesMatch \\.php$&gt;</span></span><br><span class=\"line\">        <span class=\"attribute\">SetHandler</span> <span class=\"string\">\"proxy:fcgi://127.0.0.1:9000\"</span></span><br><span class=\"line\">    <span class=\"section\">&lt;/FilesMatch&gt;</span></span><br><span class=\"line\"><span class=\"section\">&lt;/VirtualHost&gt;</span></span><br></pre></td></tr></tbody></table></figure>\n<p>上述配置文件中， <code>ServerName</code>  指定了虚拟主机的域名， <code>DocumentRoot</code>  指定了虚拟主机的根目录， <code>&lt;Directory&gt;</code>  定义了虚拟主机的访问控制和索引文件等配置， <code>&lt;FilesMatch&gt;</code>  则用于匹配 PHP 脚本的 URL，并使用 FastCGI 处理 PHP 脚本。需要将其中的  <code>/var/www/example.com</code>  替换为实际的 WordPress 根目录。</p>\n<ol start=\"2\">\n<li>在  <code>/etc/hosts</code>  文件中添加虚拟主机的 IP 地址和域名的映射关系：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">127.0.0.1 example.com</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>重启 Apache 服务：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart httpd</span><br></pre></td></tr></tbody></table></figure>\n<p>需要注意的是，如果需要使用 SSL 证书，还需要进行 SSL 相关的配置，并将虚拟主机的端口从 80 改为 443。</p>\n<h4 id=\"nginx方式\"><a class=\"anchor\" href=\"#nginx方式\">#</a> nginx 方式</h4>\n<p>与 Apache 类似，需要在 Nginx 的配置文件中创建一个虚拟主机。假设我们要为 WordPress 创建一个名为  <code>example.com</code>  的虚拟主机，可以按照以下步骤进行配置：</p>\n<ol>\n<li>创建一个新的配置文件  <code>/etc/nginx/conf.d/example.com.conf</code> ，并添加以下内容：</li>\n</ol>\n<figure class=\"highlight nginx\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"section\">server</span> {</span><br><span class=\"line\">    <span class=\"attribute\">listen</span> <span class=\"number\">80</span>;</span><br><span class=\"line\">    <span class=\"attribute\">server_name</span> example.com;</span><br><span class=\"line\">    <span class=\"attribute\">root</span> /var/www/example.com;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attribute\">index</span> index.php index.html index.htm;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> / {</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> <span class=\"variable\">$uri</span>/ /index.php?<span class=\"variable\">$args</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"section\">location</span> <span class=\"regexp\">~ \\.php$</span> {</span><br><span class=\"line\">        <span class=\"attribute\">try_files</span> <span class=\"variable\">$uri</span> =<span class=\"number\">404</span>;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_pass</span> unix:/var/run/php-fpm/php-fpm.sock;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_index</span> index.php;</span><br><span class=\"line\">        <span class=\"attribute\">fastcgi_param</span> SCRIPT_FILENAME <span class=\"variable\">$document_root</span><span class=\"variable\">$fastcgi_script_name</span>;</span><br><span class=\"line\">        <span class=\"attribute\">include</span> fastcgi_params;</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></tbody></table></figure>\n<p>上述配置文件中， <code>listen</code>  指定了虚拟主机监听的端口， <code>server_name</code>  指定了虚拟主机的域名， <code>root</code>  指定了虚拟主机的根目录， <code>location /</code>  用于定义 URL 的匹配规则和相应的处理方式， <code>location ~ \\.php$</code>  则用于匹配 PHP 脚本的 URL，并使用 FastCGI 处理 PHP 脚本。需要将其中的  <code>/var/www/example.com</code>  替换为实际的 WordPress 根目录。</p>\n<ol start=\"2\">\n<li>在  <code>/etc/hosts</code>  文件中添加虚拟主机的 IP 地址和域名的映射关系：</li>\n</ol>\n<figure class=\"highlight vim\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">127.0</span>.<span class=\"number\">0.1</span> example.<span class=\"keyword\">com</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>重启 Nginx 服务：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nginx</span><br></pre></td></tr></tbody></table></figure>\n<p>和 apache 相同，如果需要使用 SSL 证书，还需要进行 SSL 相关的配置，并将虚拟主机的端口从 80 改为 443。</p>\n<h3 id=\"安装\"><a class=\"anchor\" href=\"#安装\">#</a> 安装</h3>\n<ol>\n<li>创建 MySQL 数据库和用户</li>\n</ol>\n<p>登录 MySQL 控制台，并创建一个新的数据库和用户：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE DATABASE wordpress_db;</span><br><span class=\"line\">mysql&gt; GRANT ALL PRIVILEGES ON wordpress_db.* TO <span class=\"string\">'wordpress_user'</span>@<span class=\"string\">'localhost'</span> IDENTIFIED BY <span class=\"string\">'password'</span>;</span><br><span class=\"line\">mysql&gt; FLUSH PRIVILEGES;</span><br><span class=\"line\">mysql&gt; EXIT;</span><br></pre></td></tr></tbody></table></figure>\n<p>其中，'wordpress_db' 是要创建的数据库名，'wordpress_user' 是要创建的数据库用户，'password' 是要设置的数据库密码。需要将这些参数替换为自己的实际值。</p>\n<ol start=\"2\">\n<li>下载和解压 WordPress</li>\n</ol>\n<p>从 WordPress 官网下载最新的 WordPress 压缩包，并解压到 Apache 的 Web 根目录下，例如  <code>/var/www/html/</code> ：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /tmp</span><br><span class=\"line\">wget https://wordpress.org/latest.tar.gz</span><br><span class=\"line\">tar -zxvf latest.tar.gz</span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> -r wordpress/* /var/www/html/</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>配置 WordPress</li>\n</ol>\n<p>重命名配置文件：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /var/www/html/</span><br><span class=\"line\"><span class=\"built_in\">cp</span> wp-config-sample.php wp-config.php</span><br></pre></td></tr></tbody></table></figure>\n<p>编辑  <code>wp-config.php</code>  文件，并根据之前创建的数据库和用户设置以下参数：</p>\n<figure class=\"highlight php\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">'DB_NAME'</span>, <span class=\"string\">'wordpress_db'</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">'DB_USER'</span>, <span class=\"string\">'wordpress_user'</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">'DB_PASSWORD'</span>, <span class=\"string\">'password'</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">define</span>(<span class=\"string\">'DB_HOST'</span>, <span class=\"string\">'localhost'</span>);</span><br></pre></td></tr></tbody></table></figure>\n<p>其中，'wordpress_db' 是之前创建的数据库名，'wordpress_user' 是之前创建的数据库用户，'password' 是之前设置的数据库密码。</p>\n<ol start=\"4\">\n<li>设置文件权限</li>\n</ol>\n<p>修改 WordPress 文件的权限，以使得 Apache 可以对其进行读写：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">chown</span> -R apache:apache /var/www/html/</span><br><span class=\"line\"><span class=\"built_in\">chmod</span> -R 755 /var/www/html/</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>启动 Apache 和 MySQL</li>\n</ol>\n<p>启动 Apache 和 MySQL 服务，并设置开机自启：</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start httpd</span><br><span class=\"line\">systemctl start mariadb</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> httpd</span><br><span class=\"line\">systemctl <span class=\"built_in\">enable</span> mariadb</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>访问 WordPress</li>\n</ol>\n<p>现在，我们可以通过浏览器访问 WordPress，输入服务器 IP 地址或域名，即可开始 WordPress 的安装过程。按照提示，设置网站名称、管理员账号和密码等信息，然后点击 “安装 WordPress” 按钮，即可完成 WordPress 的安装。</p>\n<p>需要注意的是，为了保障网站的安全性，我们需要在 WordPress 安装完成后进行一些安全性方面的设置，例如加强访问控制、配置 SSL 证书、定期更新 WordPress 和插件等等。另外，我们也可以根据需要安装并配置一些 WordPress 插件，以扩展 WordPress 的功能。</p>\n",
            "tags": [
                "linux",
                "centos",
                "web",
                "nginx",
                "mysql"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/175233/",
            "url": "http://maxshiroi.top/ug/175233/",
            "title": "Linux入门学习0",
            "date_published": "2022-09-22T09:52:33.000Z",
            "content_html": "<h1 id=\"linux系统目录结构\"><a class=\"anchor\" href=\"#linux系统目录结构\">#</a> linux 系统目录结构</h1>\n<blockquote>\n<p>在 linux 中，所有都是以文件的形式存储和管理的。</p>\n</blockquote>\n<h2 id=\"bin\"><a class=\"anchor\" href=\"#bin\">#</a> /bin</h2>\n<blockquote>\n<p>Binary 存放经常使用的命令。</p>\n</blockquote>\n<h2 id=\"sbin\"><a class=\"anchor\" href=\"#sbin\">#</a> /sbin</h2>\n<blockquote>\n<p>super Binary 超级用户命令存放的目录。</p>\n</blockquote>\n<h2 id=\"home\"><a class=\"anchor\" href=\"#home\">#</a> /home</h2>\n<blockquote>\n<p>用户目录</p>\n</blockquote>\n<h2 id=\"root\"><a class=\"anchor\" href=\"#root\">#</a> /root</h2>\n<blockquote>\n<p>系统管理员目录</p>\n</blockquote>\n<h2 id=\"etc\"><a class=\"anchor\" href=\"#etc\">#</a> /etc</h2>\n<blockquote>\n<p>管理系统配置文件</p>\n</blockquote>\n<h2 id=\"usr\"><a class=\"anchor\" href=\"#usr\">#</a> /usr</h2>\n<blockquote>\n<p>类似于 windows 下 Programfiles 目录，</p>\n</blockquote>\n<h2 id=\"boot\"><a class=\"anchor\" href=\"#boot\">#</a> /boot</h2>\n<blockquote>\n<p>启动所使用的核心文件都会存放在这里。</p>\n</blockquote>\n<h2 id=\"proc\"><a class=\"anchor\" href=\"#proc\">#</a> /proc</h2>\n<blockquote>\n<p>内存映射</p>\n</blockquote>\n<h2 id=\"srv\"><a class=\"anchor\" href=\"#srv\">#</a> /srv</h2>\n<blockquote>\n<p>services 的缩写，用于存放服务启动所需要的数据</p>\n</blockquote>\n<h2 id=\"sys\"><a class=\"anchor\" href=\"#sys\">#</a> /sys</h2>\n<blockquote>\n<p>系统文件</p>\n</blockquote>\n<h2 id=\"tmp\"><a class=\"anchor\" href=\"#tmp\">#</a> /tmp</h2>\n<blockquote>\n<p>是 temporary (临时) 的缩写，存放临时 / 缓存文件，可当作回收站使用。</p>\n</blockquote>\n<h2 id=\"dev\"><a class=\"anchor\" href=\"#dev\">#</a> /dev</h2>\n<blockquote>\n<p>device 的缩写，类似于 windows 的设备管理器。</p>\n</blockquote>\n<h2 id=\"mnt\"><a class=\"anchor\" href=\"#mnt\">#</a> /mnt</h2>\n<blockquote>\n<p>linux 用于挂载可移动设备（临时）的目录。</p>\n</blockquote>\n<h2 id=\"opt\"><a class=\"anchor\" href=\"#opt\">#</a> /opt</h2>\n<blockquote>\n<p>主机额外安装的软件存放的目录</p>\n</blockquote>\n<h2 id=\"var\"><a class=\"anchor\" href=\"#var\">#</a> /var</h2>\n<blockquote>\n<p>存放经常被修改的目录或文件，比如日志（*.log）。</p>\n</blockquote>\n<h2 id=\"lib\"><a class=\"anchor\" href=\"#lib\">#</a> /lib</h2>\n<blockquote>\n<p>存放系统基本的动态链接库。</p>\n</blockquote>\n<h1 id=\"权限数字意思详解\"><a class=\"anchor\" href=\"#权限数字意思详解\">#</a> 权限数字意思详解</h1>\n<p>我们首先打开控制台在任意位置输入 ll, 就能看到当前文件夹下所有类型的信息。我们只取其中的前十位来进行结束.</p>\n<blockquote>\n<p>dr-xr-xr-x.</p>\n</blockquote>\n<h2 id=\"第一位\"><a class=\"anchor\" href=\"#第一位\">#</a> 第一位</h2>\n<blockquote>\n<p>第一位表示类型</p>\n</blockquote>\n<ul>\n<li>d directory 表示目录</li>\n<li>b block 块文件</li>\n<li>c char 字符文件</li>\n<li>- file 普通文件</li>\n<li>l link 链接</li>\n<li>etc.</li>\n</ul>\n<h2 id=\"后面九位\"><a class=\"anchor\" href=\"#后面九位\">#</a> 后面九位</h2>\n<blockquote>\n<p>后面九位表示了文件的类型，对应的位置如果是 <code>-</code>  则表示没有对应的权限.</p>\n</blockquote>\n<table>\n    <tbody><tr><th>\n        </th><td colspan=\"3\">前三位</td>\n        <td colspan=\"3\">中间三位</td>\n        <td colspan=\"3\">后三位</td>\n    \n    </tr><tr align=\"center\">\n        <td colspan=\"3\">创建者</td>\n        <td colspan=\"3\">同组用户</td>\n        <td colspan=\"3\">其他用户</td>\n    </tr>\n    <tr align=\"center\">\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n        <td>r</td>\n        <td>w</td>\n        <td>x</td>\n    </tr>\n    <tr align=\"center\">\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n        <td>读</td>\n        <td>写</td>\n        <td>执行</td>\n    </tr>\n</tbody></table>\n<p>下面来看一个实例:</p>\n<p>如果一个文件的权限为 755, 则代表什么意思？</p>\n<p>我们只需要把 755 按位转换为二进制，对应位为 0 则表示没有这个权限.</p>\n<table>\n<thead>\n<tr>\n<th>7</th>\n<th>5</th>\n<th>5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>111</td>\n<td>101</td>\n<td>101</td>\n</tr>\n</tbody>\n</table>\n<p>用人的语言表述:</p>\n<blockquote>\n<p>对于创建者：可以读取，可以更改，可以执行.<br>\n 对于同组人员：可以读取，不能更改，可以执行.<br>\n 对于其他成员：可以读取，不能更改，可以执行.</p>\n</blockquote>\n",
            "tags": [
                "linux",
                "目录",
                "指令",
                "权限"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/222828/",
            "url": "http://maxshiroi.top/ug/222828/",
            "title": "vmware安装好后配置centos网络",
            "date_published": "2022-09-19T14:28:28.000Z",
            "content_html": "<h1 id=\"更改-ifcfg-ens33-文件\"><a class=\"anchor\" href=\"#更改-ifcfg-ens33-文件\">#</a> 更改 ifcfg-ens33 文件</h1>\n<blockquote>\n<p>编辑配置文件</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-ens33</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>需要添加 / 修改的地方</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">BOOTPROTO=static</span><br><span class=\"line\">ONBOOT=<span class=\"built_in\">yes</span></span><br><span class=\"line\">IPADDR=192.168.xx.xx</span><br><span class=\"line\">NETMASK=255.255.255.0</span><br><span class=\"line\">GATEWAY=192.168.204.2</span><br><span class=\"line\">DNS1=8.8.8.8</span><br><span class=\"line\">DNS2=114.114.114.114</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"编辑-resolvconf-文件\"><a class=\"anchor\" href=\"#编辑-resolvconf-文件\">#</a> 编辑 resolv.conf 文件</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/resolv.conf</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>添加如下内容</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Generated by NetworkManager</span></span><br><span class=\"line\">search localdomain</span><br><span class=\"line\">nameserver 8.8.8.8</span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"重启网卡\"><a class=\"anchor\" href=\"#重启网卡\">#</a> 重启网卡</h1>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service network restart</span><br></pre></td></tr></tbody></table></figure>\n",
            "tags": [
                "linux",
                "centos",
                "network",
                "vmware"
            ]
        },
        {
            "id": "http://maxshiroi.top/ug/211502/",
            "url": "http://maxshiroi.top/ug/211502/",
            "title": "解决linux下挂载其他linux硬盘的问题并创建smb局域网共享",
            "date_published": "2022-08-28T13:15:02.000Z",
            "content_html": "<h1 id=\"intro\"><a class=\"anchor\" href=\"#intro\">#</a> Intro</h1>\n<blockquote>\n<p>之前用来当作小型服务器的笔记本终于被我给淘汰了。已经关机了好久。最近买了块 <code>SATA</code>  硬盘盒，想要将这台笔记本内的数据备份出来并把硬盘用作其他用途。一切连接好后发现无法挂载，遂百度了一会查出了如下方法...</p>\n</blockquote>\n<h1 id=\"故障复现\"><a class=\"anchor\" href=\"#故障复现\">#</a> 故障复现</h1>\n<ol>\n<li>连接 linux 系统，提示插入硬盘. <code>/dev</code>  分区下出现硬盘编号</li>\n<li>执行如下指令</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">cd</span> /</span><br><span class=\"line\"><span class=\"built_in\">mkdir</span> backup</span><br><span class=\"line\">mount /dev/sdc/ /backup/</span><br></pre></td></tr></tbody></table></figure>\n<p>报错</p>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mount: unknown filesystem <span class=\"built_in\">type</span> <span class=\"string\">'LVM2_member'</span></span><br></pre></td></tr></tbody></table></figure>\n<h1 id=\"解决方法-debian系\"><a class=\"anchor\" href=\"#解决方法-debian系\">#</a> 解决方法 //Debian 系</h1>\n<ol>\n<li>执行如下指令安装 lvm2 并扫描查看以挂载的磁盘</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install lvm2</span><br><span class=\"line\">sudo vgscan</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>发现如下字样后找到对应的 <code>xxx</code></li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Found volume group <span class=\"string\">\"xxx\"</span> using metadata <span class=\"built_in\">type</span> lvm2</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>设为活动状态并查看可挂载的分区</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo vgchange -ay xxx</span><br><span class=\"line\">sudo lvs</span><br><span class=\"line\">LV     VG   Attr   LSize  Origin Snap%  Move Log Copy%  Convert</span><br><span class=\"line\">data        xxx             -wi-a-              34.19G      </span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>挂载对应分区</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mount /dev/xxx/data/ /backup/</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>至此已经解决了问题，如果你还想把这块硬盘里的数据共享出去，比如共享给局域网内的 windows 主机，那就接着看..</p>\n</blockquote>\n<h1 id=\"设置smb\"><a class=\"anchor\" href=\"#设置smb\">#</a> 设置 SMB</h1>\n<ol>\n<li>先更新一下</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update &amp;&amp; sudo apt-get upgrade</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"2\">\n<li>安装 Samba 服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install samba samba-common</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"3\">\n<li>配置共享目录</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 新建目录</span><br><span class=\"line\">sudo <span class=\"built_in\">mkdir</span> /home/db</span><br><span class=\"line\">// 更改目录权限</span><br><span class=\"line\">sudo <span class=\"built_in\">chmod</span> 777 /home/db/ -R</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"4\">\n<li>添加账户</li>\n</ol>\n<blockquote>\n<p>要注意添加的账户需要是系统内已存在的账户</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 后面的pi为系统的用户名</span><br><span class=\"line\">sudo smbpasswd -a pi</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>输入两次密码后创建成功</p>\n</blockquote>\n<ul>\n<li>创建系统账户</li>\n</ul>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// -m参数为添加/home/username目录,username更改为你要创建的用户名.</span><br><span class=\"line\">sudo useradd -m username</span><br><span class=\"line\">// 更改账户密码</span><br><span class=\"line\">sudo passwd username</span><br><span class=\"line\">// 删除用户</span><br><span class=\"line\">sudo userdel -r username</span><br><span class=\"line\">// 更改登录zhanghu</span><br><span class=\"line\">su -username</span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"5\">\n<li>配置 samba</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 建议先备份一下</span><br><span class=\"line\">sudo <span class=\"built_in\">cp</span> /etc/samba/smb.conf /etc/samba/smb.conf.bak</span><br><span class=\"line\">// 编辑</span><br><span class=\"line\">sudo vim /etc/samba/smb.conf</span><br></pre></td></tr></tbody></table></figure>\n<blockquote>\n<p>在文件最后添加</p>\n</blockquote>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[database] </span><br><span class=\"line\">    comment = 23333333  <span class=\"comment\"># 描述</span></span><br><span class=\"line\">\tpath = /home/db/    <span class=\"comment\"># 目录</span></span><br><span class=\"line\">\tpublic = <span class=\"built_in\">yes</span>        <span class=\"comment\"># 是否允许guest用户访问</span></span><br><span class=\"line\">\twritable = <span class=\"built_in\">yes</span>      <span class=\"comment\"># 是否允许读写</span></span><br><span class=\"line\">\tworkgroup = WORKGROUP  <span class=\"comment\"># 工作组</span></span><br></pre></td></tr></tbody></table></figure>\n<ol start=\"6\">\n<li>重启 samba 服务</li>\n</ol>\n<figure class=\"highlight bash\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo service smbd restart</span><br></pre></td></tr></tbody></table></figure>\n<p>然后在 windows 里面映射就行了</p>\n<h1 id=\"借鉴摘抄\"><a class=\"anchor\" href=\"#借鉴摘抄\">#</a> 借鉴 (摘抄)</h1>\n<p><a href=\"https://blog.csdn.net/mvp_Dawn/article/details/105847485\" title=\"ubuntu 20.04 安装配置Samba服务，Windows 和 linux协同工作\">ubuntu 20.04 安装配置 Samba 服务，Windows 和 linux 协同工作</a></p>\n",
            "tags": [
                "linux",
                "运维",
                "smb"
            ]
        }
    ]
}